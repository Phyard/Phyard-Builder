<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component. 
     You cannot run it independently. -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="editor.dialog.*"
    title="Batch Shape Physics Flags Setting" width="600">

      <mx:HBox label="Basic" width="100%" paddingTop="10" paddingBottom="10" borderStyle="solid" borderThickness="1">
         <mx:Spacer width="100%"/>
         <mx:VBox>
            <mx:HBox width="100%" verticalAlign="bottom">
               <mx:CheckBox id="CheckBox_EnablePhysics_Modify" label="" click="CheckBox_EnablePhysics.enabled=CheckBox_EnablePhysics_Modify.selected;"/>
               <mx:CheckBox id="CheckBox_EnablePhysics" enabled="false" label="Enable Physics"/>
            </mx:HBox>
            <mx:HBox width="100%" verticalAlign="middle">
               <mx:CheckBox id="CheckBox_IsSensor_Modify" label="" click="CheckBox_IsSensor.enabled=CheckBox_IsSensor_Modify.selected;"/>
               <mx:CheckBox id="CheckBox_IsSensor" enabled="false" label="Sensor"/>
            </mx:HBox>
         </mx:VBox>
         <mx:Spacer width="100%"/>
         <mx:VBox>
            <mx:HBox width="100%" verticalAlign="middle">
               <mx:CheckBox id="CheckBox_IsStatic_Modify" label="" click="CheckBox_IsStatic.enabled=CheckBox_IsStatic_Modify.selected;"/>
               <mx:CheckBox id="CheckBox_IsStatic" enabled="false" label="Static"/>
            </mx:HBox>
            <mx:HBox width="100%" verticalAlign="middle">
               <mx:CheckBox id="CheckBox_Hollow_Modify" label="" click="CheckBox_Hollow.enabled=CheckBox_Hollow_Modify.selected;"/>
               <mx:CheckBox id="CheckBox_Hollow" enabled="false" label="Hollow"/>
            </mx:HBox>
         </mx:VBox>
         <mx:Spacer width="100%"/>
         <mx:VBox>
            <mx:HBox width="100%" verticalAlign="middle">
               <mx:CheckBox id="CheckBox_IsBullet_Modify" label="" click="CheckBox_IsBullet.enabled=CheckBox_IsBullet_Modify.selected;"/>
               <mx:CheckBox id="CheckBox_IsBullet" enabled="false" label="Bullet"/>
            </mx:HBox>
            <mx:HBox width="100%" verticalAlign="middle">
               <mx:CheckBox id="CheckBox_BuildBorder_Modify" label="" click="CheckBox_BuildBorder.enabled=CheckBox_BuildBorder_Modify.selected;"/>
               <mx:CheckBox id="CheckBox_BuildBorder" enabled="false" label="Build Border"/>
            </mx:HBox>
         </mx:VBox>
         <mx:Spacer width="100%"/>
         <mx:VBox>
            <mx:HBox width="100%" verticalAlign="middle">
               <mx:CheckBox id="CheckBox_AllowSleeping_Modify" label="" click="CheckBox_AllowSleeping.enabled=CheckBox_AllowSleeping_Modify.selected;"/>
               <mx:CheckBox id="CheckBox_AllowSleeping" enabled="false" label="Allow Sleeping"/>
            </mx:HBox>
            <mx:HBox width="100%" verticalAlign="middle">
               <mx:CheckBox id="CheckBox_FixRotation_Modify" label="" click="CheckBox_FixRotation.enabled=CheckBox_FixRotation_Modify.selected;"/>
               <mx:CheckBox id="CheckBox_FixRotation" enabled="false" label="Fix Rotation"/>
            </mx:HBox>
         </mx:VBox>
         <mx:Spacer width="100%"/>
      </mx:HBox>

   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:Button label="OK" click="OnClickOkButton ();"/>
      <mx:Spacer width="30"/>
      <mx:Button label="Cancel" click="OnClickCancelButton ();"/>
      <!--
      <mx:Spacer width="30"/>
      <mx:Button label="Default" click="OnClickDefaultButton ();"/>
      -->
      <mx:Spacer width="100%"/>
   </mx:HBox>


   <mx:Script>
      <![CDATA[       
         
         import mx.events.MenuEvent;
         import mx.managers.PopUpManager;
         import mx.controls.Menu;
         
         import common.Define;
         
         private var OnConfirm:Function = null;
         private var OnClose:Function = null;
         
         private var mParams:Object = new Object ();
         
         //public function SetValues (initialValues:Object):void
         //{
         //   mParams = initialValues;
         //}
         
         public function GetValues (returnValues:Object):void
         {
            returnValues.mToModifyEnablePhysics = CheckBox_EnablePhysics_Modify.selected;;
            if (returnValues.mToModifyEnablePhysics)
               returnValues.mIsPhysicsEnabled = CheckBox_EnablePhysics.selected;
            
            returnValues.mToModifyStatic = CheckBox_IsStatic_Modify.selected;;
            if (returnValues.mToModifyStatic)
               returnValues.mIsStatic = CheckBox_IsStatic.selected;
            
            returnValues.mToModifyBullet = CheckBox_IsBullet_Modify.selected;;
            if (returnValues.mToModifyBullet)
               returnValues.mIsBullet = CheckBox_IsBullet.selected;
            
            returnValues.mToModifySensor = CheckBox_IsSensor_Modify.selected;;
            if (returnValues.mToModifySensor)
               returnValues.mIsSensor = CheckBox_IsSensor.selected;
            
            returnValues.mToModifyHollow = CheckBox_Hollow_Modify.selected;;
            if (returnValues.mToModifyHollow)
               returnValues.mIsHollow = CheckBox_Hollow.selected;
            
            returnValues.mToModifyBuildBorder = CheckBox_BuildBorder_Modify.selected;;
            if (returnValues.mToModifyBuildBorder)
               returnValues.mBuildBorder = CheckBox_BuildBorder.selected;
            
            returnValues.mToModifAllowSleeping = CheckBox_AllowSleeping_Modify.selected;;
            if (returnValues.mToModifAllowSleeping)
               returnValues.mAllowSleeping = CheckBox_AllowSleeping.selected;
            
            returnValues.mToModifyFixRotation = CheckBox_FixRotation_Modify.selected;;
            if (returnValues.mToModifyFixRotation)
               returnValues.mFixRotation = CheckBox_FixRotation.selected;
         }
         
         private function OnInitPanel ():void
         {
         }
         
         public function SetConfirmFunc (onConfirm:Function):void
         {
            OnConfirm = onConfirm;
         }
         
         public function SetCloseFunc (onClose:Function):void
         {
            OnClose = onClose;
         }
         
         private function OnClickOkButton():void 
         {
            GetValues (mParams);
            
            PopUpManager.removePopUp(this);
             
            if (OnClose != null)
               OnClose ();
            
            if (OnConfirm != null)
               OnConfirm (mParams);
         }
         
         private function OnClickCancelButton():void 
         {
             PopUpManager.removePopUp(this);
             
             if (OnClose != null)
               OnClose ();
         }
         
     ]]>
   </mx:Script>



</mx:TitleWindow>