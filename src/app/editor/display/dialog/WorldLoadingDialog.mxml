<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component. 
     You cannot run it independently. -->
     
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
    title="Load World" width="600">

   <mx:HBox width="100%">
      <mx:Label id="Label_SourceCode" click="OnClickNoteLabel ();" text="Please paste your world XML source code in the text area:"/>
      <mx:Spacer width="100%"/>
      <mx:Button id="Button_SaveLocalFile" label="Or Load It From Local Disk" click="OnClickLoadFromLocalDisk ();"/>
   </mx:HBox>

   <mx:HBox width="100%" verticalAlign="top">
      <mx:TextArea id="TextArea_SourceCode" width="100%" height="350" editable="true" wordWrap="false">
         <mx:text>
         </mx:text>
      </mx:TextArea>
   </mx:HBox>

   <mx:Spacer height="10"/>

   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:Button label="Load" click="OnClickOkButton ();"/>
      <mx:Spacer width="30"/>
      <mx:Button label="Cancel" click="OnClickCancelButton ();"/>
      <!--
      <mx:Spacer width="30"/>
      <mx:Button label="Default" click="OnClickDefaultButton ();"/>
      -->
      <mx:Spacer width="100%"/>
   </mx:HBox>
   
   
   <mx:Script>
     <![CDATA[
         
         import flash.net.FileReference;
         import flash.net.FileFilter;
         import flash.events.IOErrorEvent;
         import flash.events.Event;
         
         import mx.managers.PopUpManager;
         
         import editor.EditorContext;
         
         private var OnConfirm:Function = null;
         private var OnClose:Function = null;
         
         public function SetConfirmFunc (onConfirm:Function):void
         {
            OnConfirm = onConfirm;
         }
         
         public function SetCloseFunc (onClose:Function):void
         {
            OnClose = onClose;
         }
         
         private static const kFileFilter:Array = [new FileFilter("Phyard XML File", "*.phyardx;")];
         
         private var fileReference:FileReference = null; // flash bug: DON'T use this variable as a local variable, otherwise, the complete event will not fire.
         
         private var mLocalFilename:String = null;
         private var mDontShowFileContent:Boolean = false;
         
         private function OnClickNoteLabel ():void
         {
            mDontShowFileContent = true;
         }
         
         private function OnClickLoadFromLocalDisk ():void
         {
            fileReference = new FileReference();
            fileReference.addEventListener(Event.SELECT, OnSelectFileToLoad);
            fileReference.browse (kFileFilter);
         }
         
         private function OnSelectFileToLoad (event:Event):void
         {
            fileReference.addEventListener(Event.COMPLETE, OnFileLoadComplete);
            fileReference.load();
         }    
         
         private function OnFileLoadComplete (event:Event):void
         {
            var fileReference:FileReference = (event.target as FileReference);
            try
            {  
               mLocalFilename = fileReference.name;
            
               var fileContent:String = (fileReference.data).readUTFBytes (fileReference.data.length);
               if (mDontShowFileContent)
               {
                  var params:Object = new Object ();
                  
                  params.mXmlString = fileContent;
               
                  ConfirmLoading (params);
               }
               else
               {
                  TextArea_SourceCode.text = fileContent;
               }
            }
            catch (e:Error)
            {
               trace ("local loading error");
            }
            
            fileReference.data.clear ();
         }
         
         private function OnClickOkButton ():void 
         {
            //PopUpManager.removePopUp(this);
            
            ConfirmLoading ();
         }
         
         private function ConfirmLoading (params:Object = null):void
         {
            if (params == null)
            {
               params = new Object ();
               
               params.mXmlString = TextArea_SourceCode.text;
            }
             
            if (OnClose != null)
               OnClose ();
            
            if (OnConfirm != null)
               OnConfirm (params);
            
            EditorContext.GetSingleton ().SetRecommandDesignFilename (mLocalFilename);
         }
         
         private function OnClickCancelButton ():void 
         {
             //PopUpManager.removePopUp(this);
             
             if (OnClose != null)
               OnClose ();
         }
         
      //============================================================
      // 
      //============================================================
         
         public function StartLocalDiskLoading (onConfirm:Function):void
         {
            SetConfirmFunc (onConfirm);
            
            OnClickNoteLabel ();
            OnClickLoadFromLocalDisk ();
         }
         
         
     ]]>
   </mx:Script>
   
   

</mx:TitleWindow>
