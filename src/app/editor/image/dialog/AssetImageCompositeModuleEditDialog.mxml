<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<mx:TitleWindow 
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:image="editor.image.dialog.*" 
    title="Composite Image Module Editing"
    width="800" 
    paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
    showCloseButton="true"
    creationComplete="InitDialog ();"
    close="Hide ();"
    >

   <mx:HBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off">
      <mx:VBox width="216" height="532" borderStyle="none" horizontalGap="1" verticalGap="0" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderThickness="0" horizontalScrollPolicy="off">
         <mx:Form enabled="false" id="FormBasicPropertySettings" width="100%" labelWidth="90" backgroundColor="0xFFFFFF" horizontalScrollPolicy="off" autoLayout="true" verticalGap="3" paddingTop="6" paddingBottom="6" paddingLeft="3" paddingRight="3">
            <mx:HBox backgroundColor="0x7FCEFF" width="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
               <mx:Label fontWeight="bold" text="Basic Properties" />
            </mx:HBox>
            <mx:FormItem width="100%" label="X:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputPosX" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem width="100%" label="Y:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputPosY" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem width="100%" label="Scale:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputScale" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem width="100%" label="Flip:" horizontalScrollPolicy="off">
               <mx:CheckBox selected="false" id="CheckBoxFlipped" label="" click="ChangeModuleInstanceProperties ();"/>
            </mx:FormItem>
            <mx:FormItem width="100%" label="Angle:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputAngle" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem width="100%" label="Alpha:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputAlpha" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem width="100%" label="Visible:" horizontalScrollPolicy="off">
               <mx:CheckBox selected="false" id="CheckBoxVisible" label="" click="ChangeModuleInstanceProperties ();"/>
            </mx:FormItem>
            <mx:FormItem width="100%" label="Duration:" horizontalScrollPolicy="off">
               <mx:NumericStepper id="NumericStepperDuration" width="100%" stepSize="1" value="1" minimum="0" maximum="10000" change="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
         </mx:Form>
         <mx:Form visible="false" id="FormOtherPropertySettings" width="100%" labelWidth="90" backgroundColor="0xFFFFFF" horizontalScrollPolicy="off" autoLayout="true" verticalGap="3" paddingTop="6" paddingBottom="6" paddingLeft="3" paddingRight="3">
            <mx:HBox id="FormItemBlockTitle" backgroundColor="0x7FCEFF" width="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
               <mx:Label fontWeight="bold" text="Other Properties" />
            </mx:HBox>
            <mx:FormItem id="FormItemPickModule" width="100%" label="Module:" horizontalScrollPolicy="off">
               <mx:Button id="ButtonPickModule" label="Sequenced#16" width="100%" click=";" />
            </mx:FormItem>
            <mx:FormItem id="FormItemBuildBody" width="100%" label="Build Body:" horizontalScrollPolicy="off">
               <mx:CheckBox selected="false" id="CheckBoxBuildBody" label="" click="ChangeModuleInstanceProperties ();"/>
            </mx:FormItem>
            <mx:FormItem id="FormItemShowBody" width="100%" label="Show Body:" horizontalScrollPolicy="off">
               <mx:CheckBox selected="false" id="CheckBoxShowBody" label="" click="ChangeModuleInstanceProperties ();"/>
            </mx:FormItem>
            <mx:FormItem id="FormItemBodyOpacity" width="100%" label="Body Opacity:" horizontalScrollPolicy="off">
               <mx:NumericStepper id="NumericStepperBodyOpacity" width="100%" stepSize="1" value="1" minimum="0" maximum="100" change="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem id="FormItemBodyColor" width="100%" label="Body Color:" horizontalScrollPolicy="off">
               <mx:ColorPicker id="ColorPickerBodyColor" showTextField="true" selectedColor="0xFFFFFF"/>
            </mx:FormItem>
            <mx:FormItem id="FormItemBuildBorder" width="100%" label="Build Border:" horizontalScrollPolicy="off">
               <mx:CheckBox selected="false" id="CheckBoxBuildBorder" label="" click="ChangeModuleInstanceProperties ();"/>
            </mx:FormItem>
            <mx:FormItem id="FormItemShowBorder" width="100%" label="Show Border:" horizontalScrollPolicy="off">
               <mx:CheckBox selected="false" id="CheckBoxShowBorder" label="" click="ChangeModuleInstanceProperties ();"/>
            </mx:FormItem>
            <mx:FormItem id="FormItemBorderOpacity" width="100%" label="Border Opacity:" horizontalScrollPolicy="off">
               <mx:NumericStepper id="NumericStepperBorderOpacity" width="100%" stepSize="1" value="1" minimum="0" maximum="100" change="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem id="FormItemBorderColor" width="100%" label="Border Color:" horizontalScrollPolicy="off">
               <mx:ColorPicker id="ColorPickerBorderColor" showTextField="true" selectedColor="0xFFFFFF"/>
            </mx:FormItem>
            <mx:FormItem id="FormItemBorderThickness" width="100%" label="Border Thickness:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputBorderThickness" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem id="FormItemCircleRadius" width="100%" label="Radius:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputCircleRadius" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem id="FormItemRectWidth" width="100%" label="Width:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputRectWidth" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem id="FormItemRectHeight" width="100%" label="Height:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputRectHeight" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem id="FormItemRectRoundCorners" width="100%" label="Round Corners:" horizontalScrollPolicy="off">
               <mx:CheckBox selected="false" id="CheckBoxRectRoundCorners" label="" click="ChangeModuleInstanceProperties ();"/>
            </mx:FormItem>
            <mx:FormItem id="FormItemPathThickness" width="100%" label="Thickness:" horizontalScrollPolicy="off">
               <mx:TextInput id="TextInputPathThickness" width="100%" enter="ChangeModuleInstanceProperties ();" />
            </mx:FormItem>
            <mx:FormItem id="FormItemPathClosed" width="100%" label="Closed:" horizontalScrollPolicy="off">
               <mx:CheckBox selected="false" id="CheckBoxPathClosed" label="" click="ChangeModuleInstanceProperties ();"/>
            </mx:FormItem>
            <mx:FormItem id="FormItemPathRoundEnds" width="100%" label="Round Ends:" horizontalScrollPolicy="off">
               <mx:CheckBox selected="false" id="CheckBoxPathRoundEnds" label="" click="ChangeModuleInstanceProperties ();"/>
            </mx:FormItem>
         </mx:Form>
      </mx:VBox>
      <mx:HBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
         <mx:VBox width="100%" height="100%" backgroundColor="0xD0D0D0" borderStyle="none" horizontalGap="1" verticalGap="0" paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5" borderThickness="0">
            <mx:HBox width="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
               <mx:Button id="ButtonCreateGeneralModuleInstance" toolTip="Create New Module Instance From Current Module" focusEnabled="false" fontSize="8"  width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('../../../res/module/create-bitmap-module.png')" downIcon="@Embed('../../../res/module/create-bitmap-module-sel.png')" overIcon="@Embed('../../../res/module/create-bitmap-module.png')" selectedUpIcon="@Embed('../../../res/module/create-bitmap-module-sel.png')" selectedOverIcon="@Embed('../../../res/module/create-bitmap-module-sel.png')" selectedDownIcon="@Embed('../../../res/module/create-bitmap-module.png')"   />
               <mx:Button id="ButtonCreateShapeBoxInstance" click=";" toolTip="Create Rectangle" focusEnabled="false" fontSize="8"  width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('../../../res/create/box.png')" downIcon="@Embed('../../../res/create/box-sel.png')" overIcon="@Embed('../../../res/create/box.png')" selectedUpIcon="@Embed('../../../res/create/box-sel.png')" selectedOverIcon="@Embed('../../../res/create/box-sel.png')" selectedDownIcon="@Embed('../../../res/create/box.png')"   />
               <mx:Button id="ButtonCreateShapeCircleInstance" click=";" toolTip="Create Circle" focusEnabled="false" fontSize="8"  width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('../../../res/create/ball.png')" downIcon="@Embed('../../../res/create/ball-sel.png')" overIcon="@Embed('../../../res/create/ball.png')" selectedUpIcon="@Embed('../../../res/create/ball-sel.png')" selectedOverIcon="@Embed('../../../res/create/ball-sel.png')" selectedDownIcon="@Embed('../../../res/create/ball.png')"   />
               <mx:Button id="ButtonCreateShapePolygonInstance" click=";" toolTip="Create Polygon" focusEnabled="false" fontSize="8"  width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('../../../res/create/polygon.png')" downIcon="@Embed('../../../res/create/polygon-sel.png')" overIcon="@Embed('../../../res/create/polygon.png')" selectedUpIcon="@Embed('../../../res/create/polygon-sel.png')" selectedOverIcon="@Embed('../../../res/create/polygon-sel.png')" selectedDownIcon="@Embed('../../../res/create/polygon.png')"   />
               <mx:Button id="ButtonCreateShapePolylineInstance" click=";" toolTip="Create Polyline" focusEnabled="false" fontSize="8"  width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('../../../res/create/polyline.png')" downIcon="@Embed('../../../res/create/polyline-sel.png')" overIcon="@Embed('../../../res/create/polyline.png')" selectedUpIcon="@Embed('../../../res/create/polyline-sel.png')" selectedOverIcon="@Embed('../../../res/create/polyline-sel.png')" selectedDownIcon="@Embed('../../../res/create/polyline.png')"   />
               <!--
               <mx:Button id="ButtonCreateShapeTextInstance" toolTip="Create Text" focusEnabled="false" fontSize="8"  width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('../../../res/create/text.png')" downIcon="@Embed('../../../res/create/text-sel.png')" overIcon="@Embed('../../../res/create/text.png')" selectedUpIcon="@Embed('../../../res/create/text-sel.png')" selectedOverIcon="@Embed('../../../res/create/text-sel.png')" selectedDownIcon="@Embed('../../../res/create/text.png')"   />
               -->
               <mx:Spacer width="100%"/>
               <mx:HBox paddingTop="5" paddingLeft="0" paddingRight="0" paddingBottom="5" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
                  <mx:Button height="100%" id="ButtonEditMode" label="Edit Mode" toggle="true" click=";" />
                  <mx:Spacer width="5"/>
                  <mx:Button height="100%" id="ButtonViewPhysics" label="View Physics" toggle="true" click=";" />
                  <mx:Spacer width="5"/>
                  <mx:Button height="100%" id="ButtonViewAppearance" label="View Appearance" toggle="true" click=";" />
               </mx:HBox>
            </mx:HBox>
            <mx:HDividedBox id="theDividedBox" liveDragging="true" width="100%" height="100%" backgroundColor="0xD0D0D0" dividerThickness="3" dividerAffordance="5" dividerAlpha="1.0" dividerColor="0xFFFFFF">
               <mx:HBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
                  <image:AssetImageCompositeModuleEditingPanel id="panelAssetImageCompositeModuleEditing" width="100%" height="100%"/>
               </mx:HBox>
               <mx:VBox width="100" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
                  <mx:HBox borderStyle="solid" borderThickness="1" width="100%" horizontalGap="1" verticalGap="1" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                     <mx:Button id="ButtonMoveUpModuleInstance" click="panelAssetImageCompositeModuleEditing.MoveModuleInstanceUp ();" toolTip="Move Up" focusEnabled="false" fontSize="8" left="5" top="5" width="20" height="20" toggle="false" cornerRadius="0" icon="@Embed('../../../res/action/command_moveup.png')" disabledIcon="@Embed('../../../res/action/command_moveup-disabled.png')" />
                     <mx:Button id="ButtonMoveDownModuleInstance" click="panelAssetImageCompositeModuleEditing.MoveModuleInstanceDown ();" toolTip="Move Down" focusEnabled="false" fontSize="8" left="5" top="5" width="20" height="20" toggle="false" cornerRadius="0" icon="@Embed('../../../res/action/command_movedown.png')" disabledIcon="@Embed('../../../res/action/command_movedown-disabled.png')" />
                     <mx:Spacer width="100%"/>
                     <mx:Button id="ButtonDeleteModuleInstances" click="panelAssetImageCompositeModuleEditing.DeleteModuleInstances ();" toolTip="Delete" focusEnabled="false" fontSize="8" left="5" top="5" width="20" height="20" toggle="false" cornerRadius="0" icon="@Embed('../../../res/action/command_delete.png')" disabledIcon="@Embed('../../../res/action/command_delete-disabled.png')" />
                  </mx:HBox>
                  <mx:HBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
                     <image:AssetImageModuleInstanceListingPanel id="panelAssetImageModuleInstanceListing" width="100%" height="100%"/>
                  </mx:HBox>
               </mx:VBox>
            </mx:HDividedBox>
         </mx:VBox>
      </mx:HBox>
   </mx:HBox>

   <mx:Script>
      <![CDATA[
      
         import mx.managers.PopUpManager;
         
         import editor.image.AssetImageCompositeModule;
         
         import editor.runtime.Runtime;
         
         public static function ShowAssetImageCompositeModuleEditDialog (assetImageCompositeModule:AssetImageCompositeModule):void
         {
            var assetImageCompositeModuleEditDialog:AssetImageCompositeModuleEditDialog = assetImageCompositeModule.GetAssetImageCompositeModuleEditDialog ();
            
            if (assetImageCompositeModuleEditDialog == null)
            {
               assetImageCompositeModuleEditDialog = new AssetImageCompositeModuleEditDialog ();
            }
            
            if (assetImageCompositeModuleEditDialog.parent != null)
            {
               PopUpManager.bringToFront (assetImageCompositeModuleEditDialog);
            }
            else
            {
               PopUpManager.addPopUp (assetImageCompositeModuleEditDialog, Runtime.GetApplication (), false);
               PopUpManager.centerPopUp (assetImageCompositeModuleEditDialog);
            }
            
            assetImageCompositeModuleEditDialog.GetAssetImageCompositeModuleEditingPanel ().SetAssetImageModuleInstanceManager (assetImageCompositeModule.GetModuleInstanceManager ());
            assetImageCompositeModuleEditDialog.GetAssetImageModuleInstanceListingPanel ().SetAssetImageModuleInstanceManagerForListing (assetImageCompositeModule.GetModuleInstanceManagerForListing ());
            
            assetImageCompositeModuleEditDialog.GetAssetImageCompositeModuleEditingPanel ().SetAssetImageModuleInstanceListingPanelPeer (assetImageCompositeModuleEditDialog.GetAssetImageModuleInstanceListingPanel ());
            assetImageCompositeModuleEditDialog.GetAssetImageModuleInstanceListingPanel ().SetAssetImageCompositeModuleEditingPanelPeer (assetImageCompositeModuleEditDialog.GetAssetImageCompositeModuleEditingPanel ());
            
            assetImageCompositeModule.SetAssetImageCompositeModuleEditDialog (assetImageCompositeModuleEditDialog);
            
            if (assetImageCompositeModule.IsSequenced ())
            {
               assetImageCompositeModuleEditDialog.SetTitle ("Sequenced Module Editing");
            }
            else
            {
               assetImageCompositeModuleEditDialog.SetTitle ("Assembled Module Editing");
            }
         }
         
         public function Hide ():void
         {
            PopUpManager.removePopUp(this);
         }
         
         public function GetAssetImageCompositeModuleEditingPanel ():AssetImageCompositeModuleEditingPanel
         {
            return panelAssetImageCompositeModuleEditing;
         }
         
         public function GetAssetImageModuleInstanceListingPanel ():AssetImageModuleInstanceListingPanel
         {
            return panelAssetImageModuleInstanceListing;
         }
         
         public function SetTitle (title:String):void
         {
            this.title = title;
         }
      
      //=====================================================================
      
         public function InitDialog ():void
         {
            // temp for preview version
            //BoxPropertySettings.parent.removeChild (BoxPropertySettings);
            //ViewStackPlayStop.parent.removeChild (ViewStackPlayStop);
            
            //...
            panelAssetImageCompositeModuleEditing.mButtonCreateGeneralModuleInstance = ButtonCreateGeneralModuleInstance;
            panelAssetImageCompositeModuleEditing.mButtonCreateShapeBoxInstance = ButtonCreateShapeBoxInstance;
            panelAssetImageCompositeModuleEditing.mButtonCreateShapeCircleInstance = ButtonCreateShapeCircleInstance;
            panelAssetImageCompositeModuleEditing.mButtonCreateShapePolygonInstance = ButtonCreateShapePolygonInstance;
            panelAssetImageCompositeModuleEditing.mButtonCreateShapePolylineInstance = ButtonCreateShapePolylineInstance;
            //panelAssetImageCompositeModuleEditing.mButtonCreateShapeTextInstance = ButtonCreateShapeTextInstance;
            
            ButtonCreateGeneralModuleInstance.addEventListener (MouseEvent.CLICK, panelAssetImageCompositeModuleEditing.OnClickCreateButton);
            ButtonCreateShapeBoxInstance.addEventListener (MouseEvent.CLICK, panelAssetImageCompositeModuleEditing.OnClickCreateButton);
            ButtonCreateShapeCircleInstance.addEventListener (MouseEvent.CLICK, panelAssetImageCompositeModuleEditing.OnClickCreateButton);
            ButtonCreateShapePolygonInstance.addEventListener (MouseEvent.CLICK, panelAssetImageCompositeModuleEditing.OnClickCreateButton);
            ButtonCreateShapePolylineInstance.addEventListener (MouseEvent.CLICK, panelAssetImageCompositeModuleEditing.OnClickCreateButton);
            //ButtonCreateShapeTextInstance.addEventListener (MouseEvent.CLICK, panelAssetImageCompositeModuleEditing.OnClickCreateButton);
            
            panelAssetImageCompositeModuleEditing.mButtonMoveUpModuleInstance = ButtonMoveUpModuleInstance;
            panelAssetImageCompositeModuleEditing.mButtonMoveDownModuleInstance = ButtonMoveDownModuleInstance;
            panelAssetImageCompositeModuleEditing.mButtonDeleteModuleInstances = ButtonDeleteModuleInstances;
         
            panelAssetImageCompositeModuleEditing.mFormBasicPropertySettings = FormBasicPropertySettings;
            panelAssetImageCompositeModuleEditing.mTextInputPosX = TextInputPosX;
            panelAssetImageCompositeModuleEditing.mTextInputPosY = TextInputPosY;
            panelAssetImageCompositeModuleEditing.mTextInputScale = TextInputScale;
            panelAssetImageCompositeModuleEditing.mCheckBoxFlipped = CheckBoxFlipped;2
            panelAssetImageCompositeModuleEditing.mTextInputAngle = TextInputAngle;
            panelAssetImageCompositeModuleEditing.mTextInputAlpha = TextInputAlpha;
            panelAssetImageCompositeModuleEditing.mCheckBoxVisible = CheckBoxVisible;
            panelAssetImageCompositeModuleEditing.mNumericStepperDuration = NumericStepperDuration;
            
            
            
            while (FormOtherPropertySettings.numChildren > 0)
               FormOtherPropertySettings.removeChildAt (0);
            
            panelAssetImageCompositeModuleEditing.mFormOtherPropertySettings = FormOtherPropertySettings;
            panelAssetImageCompositeModuleEditing.mFormItemBlockTitle = FormItemBlockTitle;
            
            panelAssetImageCompositeModuleEditing.mButtonPickModule = ButtonPickModule;
            
            panelAssetImageCompositeModuleEditing.mCheckBoxBuildBody = CheckBoxBuildBody;
            panelAssetImageCompositeModuleEditing.mCheckBoxShowBody = CheckBoxShowBody;
            panelAssetImageCompositeModuleEditing.mNumericStepperBodyOpacity = NumericStepperBodyOpacity;
            panelAssetImageCompositeModuleEditing.mColorPickerBodyColor = ColorPickerBodyColor;
            
            panelAssetImageCompositeModuleEditing.mCheckBoxBuildBorder = CheckBoxBuildBorder;
            panelAssetImageCompositeModuleEditing.mCheckBoxShowBorder = CheckBoxShowBorder;
            panelAssetImageCompositeModuleEditing.mNumericStepperBorderOpacity = NumericStepperBorderOpacity;
            panelAssetImageCompositeModuleEditing.mColorPickerBorderColor = ColorPickerBorderColor;
            panelAssetImageCompositeModuleEditing.mTextInputBorderThickness = TextInputBorderThickness;
            
            panelAssetImageCompositeModuleEditing.mTextInputPathThickness = TextInputPathThickness;
            panelAssetImageCompositeModuleEditing.mCheckBoxPathClosed = CheckBoxPathClosed;
            panelAssetImageCompositeModuleEditing.mCheckBoxPathRoundEnds = CheckBoxPathRoundEnds;
            
            panelAssetImageCompositeModuleEditing.mTextInputCircleRadius = TextInputCircleRadius;
            
            panelAssetImageCompositeModuleEditing.mCheckBoxRectRoundCorners = CheckBoxRectRoundCorners;
            panelAssetImageCompositeModuleEditing.mTextInputRectWidth = TextInputRectWidth;
            panelAssetImageCompositeModuleEditing.mTextInputRectHeight = TextInputRectHeight;
         }
         
         /*
         private function OnPlay ():void
         {
            panelAssetImageCompositeModuleEditing.Play ();
            ViewStackPlayStop.selectedChild = BoxStop;
         }
         
         private function OnPause ():void
         {
            panelAssetImageCompositeModuleEditing.Pause ();
            ViewStackPlayStop.selectedChild = BoxPlay;
         }
         */
         
         private function ChangeModuleInstanceProperties ():void
         {
            panelAssetImageCompositeModuleEditing.SychronizeCurrentModuleInstacnePropertiesFromUI ();
         }
         
         private function ChangeCompositeModuleProperties ():void
         {
            panelAssetImageCompositeModuleEditing.SychronizeCompositeModulePropertiesFromUI ();
         }

     ]]>
   </mx:Script>



</mx:TitleWindow>
