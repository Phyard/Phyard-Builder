<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component. 
     You cannot run it independently. -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*"
    title="Event Handler Setting" width="600">

   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:Label text="Event Handler:" textAlign="right" />
      <mx:Label id="Lavel_EventHandlerName" text=""/>
      <mx:Spacer width="100%"/>
   </mx:HBox>

   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:CheckBox id="CheckBox_Enabled" label="Enabled Initially"/>
      <mx:Spacer width="100%"/>
   </mx:HBox>

   <CodeSnippetEditPanel id="theCodeSnippetEditPanel" width="100%" height="100%"/>

   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:Button label="OK" click="OnClickOkButton ();"/>
      <mx:Spacer width="30"/>
      <mx:Button label="Cancel" click="OnClickCancelButton ();"/>
      <!--
      <mx:Spacer width="30"/>
      <mx:Button label="Default" click="OnClickDefaultButton ();"/>
      -->
      <mx:Spacer width="100%"/>
   </mx:HBox>


   <mx:Script>
      <![CDATA[       
         
         import mx.events.MenuEvent;
         import mx.managers.PopUpManager;
         import mx.controls.Menu;
         
         import common.Define;
         
         private var OnConfirm:Function = null;
         private var OnClose:Function = null;
         
         private var mParams:Object;
         
         public function SetValues (initialValues:Object):void
         {
            mParams = initialValues;
            
         // ...
            Lavel_EventHandlerName.text = mParams.mName;
            
            theCodeSnippetEditPanel.SetCodeSnippet (mParams.mCodeSnippet);
         }
         
         public function GetValues (returnValues:Object):void
         {
            returnValues.mReturnFunctionCallings = theCodeSnippetEditPanel.GetCommandListDefinition ();
         }
         
         private function OnInitPanel ():void
         {
         }
         
         public function SetConfirmFunc (onConfirm:Function):void
         {
            OnConfirm = onConfirm;
         }
         
         public function SetCloseFunc (onClose:Function):void
         {
            OnClose = onClose;
         }
         
         private function OnClickOkButton():void 
         {
            GetValues (mParams);
            
            PopUpManager.removePopUp(this);
            
            if (OnClose != null)
               OnClose ();
            
            if (OnConfirm != null)
               OnConfirm (mParams);
         }
         
         private function OnClickCancelButton():void 
         {
             PopUpManager.removePopUp(this);
             
             if (OnClose != null)
               OnClose ();
         }
         
     ]]>
   </mx:Script>



</mx:TitleWindow>