<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<container:ResizableTitleWindow xmlns:container="editor.display.container.*"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:image="editor.image.dialog.*" 
    title="Image Assets Manager"
    borderThickness="30"
    width="600" height="500"
    paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
    showCloseButton="true"
    creationComplete="InitDialog ();"
    close="HideAssetImageModuleListDialog ();"
    >

   <mx:VBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
      <mx:HDividedBox id="theDividedBox" liveDragging="true" width="100%" height="100%" backgroundColor="0xD0D0D0" dividerThickness="3" dividerAffordance="5" dividerAlpha="1.0" dividerColor="0xFFFFFF">
         <mx:VBox id="Box_Images" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <image:AssetImageListPanel id="panelImageListing" width="100%" height="100%"/>
         </mx:VBox>
         <mx:VBox id="Box_PureModules" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <image:AssetImagePureModuleListPanel id="panelPureModuleListing" width="100%" height="100%"/>
         </mx:VBox>
         <mx:VBox id="Box_AssembledModules" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <image:AssetImageCompositeModuleListPanel id="panelAssembledModuleListing" width="100%" height="100%"/>
         </mx:VBox>
         <mx:VBox id="Box_SequencedModules" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <image:AssetImageCompositeModuleListPanel id="panelSequencedModuleListing" width="100%" height="100%"/>
         </mx:VBox>
      </mx:HDividedBox>
   </mx:VBox>

   <mx:Script>
      <![CDATA[
      
         import mx.managers.PopUpManager;
         import mx.core.IFlexDisplayObject;
         
         import editor.image.dialog.AssetImageListPanel;
         import editor.image.dialog.AssetImagePureModuleListPanel;
         import editor.image.dialog.AssetImageCompositeModuleListPanel;
         
         import editor.EditorContext;

      // static functions         
      
         public static function MakeSureAssetImageModuleListDialogCreated ():Boolean
         {
            if (EditorContext.GetSingleton ().mAssetImageModuleListDialog == null)
            {
               EditorContext.GetSingleton ().mAssetImageModuleListDialog = new AssetImageModuleListDialog ();
               return true;
            }
            
            return false;
         }
         
         public static function SetImageModuleManagers ():void
         {
            EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetImageListingPanel ().SetAssetImageManager (EditorContext.GetEditorApp ().GetWorld ().GetAssetImageManager ());            
            EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetPureModuleListingPanel ().SetAssetImagePureModuleManager (EditorContext.GetEditorApp ().GetWorld ().GetAssetImagePureModuleManager ());            
            EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetAssembledModuleListingPanel ().SetAssetImageCompositeModuleManager (EditorContext.GetEditorApp ().GetWorld ().GetAssetImageAssembledModuleManager ());            
            EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetSequencedModuleListingPanel ().SetAssetImageCompositeModuleManager (EditorContext.GetEditorApp ().GetWorld ().GetAssetImageSequencedModuleManager ());
         }
         
         public static function ShowAssetImageModuleListDialog ():void
         {
            var firstTime:Boolean = MakeSureAssetImageModuleListDialogCreated ();
            
            EditorContext.GetSingleton ().OpenModelessDialog (EditorContext.GetSingleton ().mAssetImageModuleListDialog, firstTime);
            
            SetImageModuleManagers ();
         }
         
         public static function HideAssetImageModuleListDialog ():void
         {
            if (EditorContext.GetSingleton ().mAssetImageModuleListDialog.IsInPickingMode ())
            {
               EndPickingMode (true);
            }
            else
            {
               EditorContext.GetSingleton ().CloseModelessDialog (EditorContext.GetSingleton ().mAssetImageModuleListDialog);
            }
         }
         
         public static function StartPickingMode (OnModulePicked:Function, baseWindow:IFlexDisplayObject = null):void
         {
            var firstTime:Boolean = MakeSureAssetImageModuleListDialogCreated ();
            
            EditorContext.OpenAssetPickingDialog (EditorContext.GetSingleton ().mAssetImageModuleListDialog, firstTime, true, baseWindow);
            
            SetImageModuleManagers ();
            
            EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetImageListingPanel ().EnterPickAssetIntent (OnModulePicked, EndPickingMode);
            EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetPureModuleListingPanel ().EnterPickAssetIntent (OnModulePicked, EndPickingMode);
            EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetAssembledModuleListingPanel ().EnterPickAssetIntent (OnModulePicked, EndPickingMode);
            EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetSequencedModuleListingPanel ().EnterPickAssetIntent (OnModulePicked, EndPickingMode);
         }
         
         public static function EndPickingMode (forceClose:Boolean = false):void
         {
            //if (EditorContext.GetSingleton ().mAssetImageModuleListDialog != null)
            if (EditorContext.GetSingleton ().mAssetImageModuleListDialog.IsInPickingMode ())
            {
               EditorContext.CloseAssetPickingDialog (forceClose); // must before the following lines

               EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetImageListingPanel ().ExitPickAssetIntent ();
               EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetPureModuleListingPanel ().ExitPickAssetIntent ();
               EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetAssembledModuleListingPanel ().ExitPickAssetIntent ();
               EditorContext.GetSingleton ().mAssetImageModuleListDialog.GetSequencedModuleListingPanel ().ExitPickAssetIntent ();
            }
         }
         
      //========================================
      
         public function GetImageListingPanel ():AssetImageListPanel
         {
            return panelImageListing;
         }
      
         public function GetPureModuleListingPanel ():AssetImagePureModuleListPanel
         {
            return panelPureModuleListing;
         }
      
         public function GetAssembledModuleListingPanel ():AssetImageCompositeModuleListPanel
         {
            return panelAssembledModuleListing;
         }
      
         public function GetSequencedModuleListingPanel ():AssetImageCompositeModuleListPanel
         {
            return panelSequencedModuleListing;
         }
         
      //=====================================================================
      
         public function InitDialog ():void
         {
            //theDividedBox.moveDivider(0, 100000);
         }

     ]]>
   </mx:Script>



</container:ResizableTitleWindow>
