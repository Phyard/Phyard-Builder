<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
      borderStyle="solid" borderThickness="0"
      width="100%" height="100%"
      creationComplete="OnInitPanel()"
      >
      <mx:VBox height="100%" width="100%">
         <mx:HBox width="650" verticalAlign="middle">
            <mx:CheckBox id="CheckBox_AdaptiveBackgroundSize" label="Adaptive Background Size" click="OnChangeAdaptiveBackgroundSize ()"/>
            <mx:CheckBox id="CheckBox_WordWrap" label="Word Wrap"/>
            <mx:CheckBox id="CheckBox_Editable" label="Editable"/>
            <mx:CheckBox id="CheckBox_Selectable" label="Selectable"/>
            <mx:CheckBox id="CheckBox_IsHtmlText" label="Is Html Text" visible="false"/>
            <mx:Spacer width="100%"/>
         </mx:HBox>
         <mx:HBox width="650" verticalAlign="middle">
            <mx:Label text="Font Size:" click="CheckBox_IsHtmlText.visible = ! CheckBox_IsHtmlText.visible;"/>
            <mx:ComboBox id="SelectList_FontSize"/>
            <mx:ColorPicker id="ColorPicker_TextColor" showTextField="true" selectedColor="0x000000"/>
            <mx:Button id="Button_Bold" toolTip="Bold" toggle="true" focusEnabled="false" fontSize="8" width="20" height="20" cornerRadius="0" upIcon="@Embed('../../../res/dialog/text_bold.png')" downIcon="@Embed('../../../res/dialog/text_bold-sel.png')" overIcon="@Embed('../../../res/dialog/text_bold.png')" selectedUpIcon="@Embed('../../../res/dialog/text_bold-sel.png')" selectedOverIcon="@Embed('../../../res/dialog/text_bold-sel.png')" selectedDownIcon="@Embed('../../../res/dialog/text_bold.png')" />
            <mx:Button id="Button_Italic" toolTip="Italic" toggle="true" focusEnabled="false" fontSize="8" width="20" height="20" cornerRadius="0" upIcon="@Embed('../../../res/dialog/text_italic.png')" downIcon="@Embed('../../../res/dialog/text_italic-sel.png')" overIcon="@Embed('../../../res/dialog/text_italic.png')" selectedUpIcon="@Embed('../../../res/dialog/text_italic-sel.png')" selectedOverIcon="@Embed('../../../res/dialog/text_italic-sel.png')" selectedDownIcon="@Embed('../../../res/dialog/text_italic.png')" />
            <mx:Button id="Button_Underlined" toolTip="Italic" toggle="true" focusEnabled="false" fontSize="8" width="20" height="20" cornerRadius="0" upIcon="@Embed('../../../res/dialog/text_underlined.png')" downIcon="@Embed('../../../res/dialog/text_underlined-sel.png')" overIcon="@Embed('../../../res/dialog/text_underlined.png')" selectedUpIcon="@Embed('../../../res/dialog/text_underlined-sel.png')" selectedOverIcon="@Embed('../../../res/dialog/text_underlined-sel.png')" selectedDownIcon="@Embed('../../../res/dialog/text_underlined.png')" />
            <mx:Button id="Button_AlignLeft" change="OnTextAlignChanged (event);" toolTip="Align Left" toggle="true" focusEnabled="false" fontSize="8" width="20" height="20" cornerRadius="0" upIcon="@Embed('../../../res/dialog/text_align_left.png')" downIcon="@Embed('../../../res/dialog/text_align_left-sel.png')" overIcon="@Embed('../../../res/dialog/text_align_left.png')" selectedUpIcon="@Embed('../../../res/dialog/text_align_left-sel.png')" selectedOverIcon="@Embed('../../../res/dialog/text_align_left-sel.png')" selectedDownIcon="@Embed('../../../res/dialog/text_align_left.png')" />
            <mx:Button id="Button_AlignCenter" change="OnTextAlignChanged (event);" toolTip="Align Center" toggle="true" focusEnabled="false" fontSize="8" width="20" height="20" cornerRadius="0" upIcon="@Embed('../../../res/dialog/text_align_center.png')" downIcon="@Embed('../../../res/dialog/text_align_center-sel.png')" overIcon="@Embed('../../../res/dialog/text_align_center.png')" selectedUpIcon="@Embed('../../../res/dialog/text_align_center-sel.png')" selectedOverIcon="@Embed('../../../res/dialog/text_align_center-sel.png')" selectedDownIcon="@Embed('../../../res/dialog/text_align_center.png')" />
            <mx:Button id="Button_AlignRight" change="OnTextAlignChanged (event);" toolTip="Align Right" toggle="true" focusEnabled="false" fontSize="8" width="20" height="20" cornerRadius="0" upIcon="@Embed('../../../res/dialog/text_align_right.png')" downIcon="@Embed('../../../res/dialog/text_align_right-sel.png')" overIcon="@Embed('../../../res/dialog/text_align_right.png')" selectedUpIcon="@Embed('../../../res/dialog/text_align_right-sel.png')" selectedOverIcon="@Embed('../../../res/dialog/text_align_right-sel.png')" selectedDownIcon="@Embed('../../../res/dialog/text_align_right.png')" />
            <mx:Button id="Button_AlignTop" change="OnTextAlignChanged (event);" toolTip="Align Top" toggle="true" focusEnabled="false" fontSize="8" width="20" height="20" cornerRadius="0" upIcon="@Embed('../../../res/dialog/text_align_top.png')" downIcon="@Embed('../../../res/dialog/text_align_top-sel.png')" overIcon="@Embed('../../../res/dialog/text_align_top.png')" selectedUpIcon="@Embed('../../../res/dialog/text_align_top-sel.png')" selectedOverIcon="@Embed('../../../res/dialog/text_align_top-sel.png')" selectedDownIcon="@Embed('../../../res/dialog/text_align_top.png')" />
            <mx:Button id="Button_AlignMiddle" change="OnTextAlignChanged (event);" toolTip="Align Middle" toggle="true" focusEnabled="false" fontSize="8" width="20" height="20" cornerRadius="0" upIcon="@Embed('../../../res/dialog/text_align_middle.png')" downIcon="@Embed('../../../res/dialog/text_align_middle-sel.png')" overIcon="@Embed('../../../res/dialog/text_align_middle.png')" selectedUpIcon="@Embed('../../../res/dialog/text_align_middle-sel.png')" selectedOverIcon="@Embed('../../../res/dialog/text_align_middle-sel.png')" selectedDownIcon="@Embed('../../../res/dialog/text_align_middle.png')" />
            <mx:Button id="Button_AlignBottom" change="OnTextAlignChanged (event);" toolTip="Align Bottom" toggle="true" focusEnabled="false" fontSize="8" width="20" height="20" cornerRadius="0" upIcon="@Embed('../../../res/dialog/text_align_bottom.png')" downIcon="@Embed('../../../res/dialog/text_align_bottom-sel.png')" overIcon="@Embed('../../../res/dialog/text_align_bottom.png')" selectedUpIcon="@Embed('../../../res/dialog/text_align_bottom-sel.png')" selectedOverIcon="@Embed('../../../res/dialog/text_align_bottom-sel.png')" selectedDownIcon="@Embed('../../../res/dialog/text_align_bottom.png')" />
            <mx:Spacer width="100%"/>
         </mx:HBox>
         <mx:HBox width="100%">
            <mx:TextArea id="TextArea_Text" width="100%" height="200" editable="true" wordWrap="true">
               <mx:text>
               </mx:text>
            </mx:TextArea>
         </mx:HBox>
      </mx:VBox>


   <mx:Script>
     <![CDATA[

         import flash.events.Event;
   
         import com.tapirgames.util.TextUtil;

         import common.Define;

         private var mInputValues:Object;

         private var mFontSizes:Array = [
               {label:8},
               {label:9},
               {label:10},
               {label:11},
               {label:12},
               {label:14},
               {label:16},
               {label:18},
               {label:20},
               {label:22},
               {label:24},
               {label:26},
               {label:28},
               {label:36},
               {label:48},
               {label:72},
            ];

         private function OnInitPanel ():void
         {
            //TextArea_Text.maxChars = 0; //Define.MaxTextLength;
         }

         private function OnChangeAdaptiveBackgroundSize ():void
         {
            //if (CheckBox_AdaptiveBackgroundSize.selected)
            //{
            //   CheckBox_WordWrap.selected = false;
            //   CheckBox_WordWrap.enabled = false;
            //}
            //else
            //{
            //   CheckBox_WordWrap.enabled = true;
            //}
         }

         private function OnTextAlignChanged (event:Event):void
         {
            if (event.target == Button_AlignRight)
            {
               Button_AlignLeft.selected = false;
               Button_AlignCenter.selected = false;
               Button_AlignRight.selected = true;
            }
            else if (event.target == Button_AlignCenter)
            {
               Button_AlignLeft.selected = false;
               Button_AlignCenter.selected = true;
               Button_AlignRight.selected = false;
            }
            else if (event.target == Button_AlignLeft)
            {
               Button_AlignLeft.selected = true;
               Button_AlignCenter.selected = false;
               Button_AlignRight.selected = false;
            }
            else if (event.target == Button_AlignBottom)
            {
               Button_AlignTop.selected = false;
               Button_AlignMiddle.selected = false;
               Button_AlignBottom.selected = true;
            }
            else if (event.target == Button_AlignMiddle)
            {
               Button_AlignTop.selected = false;
               Button_AlignMiddle.selected = true;
               Button_AlignBottom.selected = false;
            }
            else if (event.target == Button_AlignTop)
            {
               Button_AlignTop.selected = true;
               Button_AlignMiddle.selected = false;
               Button_AlignBottom.selected = false;
            }
         }

         public function SetValues (inputValues:Object):void
         {
            var selectedIndex:int = 2;
            var fontSize:int = inputValues.mFontSize;
            for (var i:int = 0; i < mFontSizes.length; ++ i)
            {
               if (mFontSizes[i].label == fontSize)
                  selectedIndex = i;
            }
            SelectList_FontSize.dataProvider = mFontSizes;
            SelectList_FontSize.selectedIndex = selectedIndex;

            Button_Bold.selected = inputValues.mIsBold;
            Button_Italic.selected = inputValues.mIsItalic;
            Button_Underlined.selected = inputValues.mIsUnderlined;
            CheckBox_WordWrap.selected = inputValues.mWordWrap;
            ColorPicker_TextColor.selectedColor = inputValues.mTextColor;
            CheckBox_AdaptiveBackgroundSize.selected = inputValues.mAdaptiveBackgroundSize;
            
            var hAlign:int = inputValues.mTextAlign & 0x0F;
            if (hAlign == TextUtil.TextAlign_Right)
               Button_AlignRight.selected = true;
            else if (hAlign == TextUtil.TextAlign_Center)
               Button_AlignCenter.selected = true;
            else
               Button_AlignLeft.selected = true;
            
            var vAlign:int = inputValues.mTextAlign & 0xF0;
            if (vAlign == TextUtil.TextAlign_Bottom)
               Button_AlignBottom.selected = true;
            else if (vAlign == TextUtil.TextAlign_Middle)
               Button_AlignMiddle.selected = true;
            else
               Button_AlignTop.selected = true;

            TextArea_Text.text = inputValues.mText;
            
            if (inputValues.mDisableEditableEditing != null && inputValues.mDisableEditableEditing)
               CheckBox_Editable.enabled = false;
            if (inputValues.mDisableSelectableEditing != null && inputValues.mDisableSelectableEditing)
               CheckBox_Selectable.enabled = false;

            OnChangeAdaptiveBackgroundSize ();
         }

         public function GetValues (returnValues:Object):void
         {
            returnValues.mAdaptiveBackgroundSize = CheckBox_AdaptiveBackgroundSize.selected;
            returnValues.mWordWrap = CheckBox_WordWrap.selected;
            returnValues.mTextColor = ColorPicker_TextColor.selectedColor;
            returnValues.mFontSize = mFontSizes [SelectList_FontSize.selectedIndex].label;
            returnValues.mIsBold = Button_Bold.selected;
            returnValues.mIsItalic = Button_Italic.selected;
            returnValues.mIsUnderlined = Button_Underlined.selected;

            if (Button_AlignRight.selected)
               returnValues.mTextAlign = TextUtil.TextAlign_Right;
            else if (Button_AlignCenter.selected)
               returnValues.mTextAlign = TextUtil.TextAlign_Center;
            else
               returnValues.mTextAlign = TextUtil.TextAlign_Left;
            
            if (Button_AlignBottom.selected)
               returnValues.mTextAlign |= TextUtil.TextAlign_Bottom;
            else if (Button_AlignMiddle.selected)
               returnValues.mTextAlign |= TextUtil.TextAlign_Middle;
            else
               returnValues.mTextAlign |= TextUtil.TextAlign_Top;

            returnValues.mText = TextArea_Text.text;
         }

     ]]>
   </mx:Script>

</mx:VBox>
