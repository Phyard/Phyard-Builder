<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<mx:TitleWindow 
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:image="editor.image.dialog.*" 
    title="Composite Image Module Editing"
    width="667" height="537"
    paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
    showCloseButton="true"
    creationComplete="InitDialog ();"
    close="Hide ();"
    >

   <mx:VBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
      <mx:HBox width="100%" backgroundColor="0xD0D0D0" verticalAlign="middle" borderStyle="none" horizontalGap="1" verticalGap="0" paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5" borderThickness="0">
         <mx:Button id="ButtonDeleteModuleInstances" toolTip="Delete Selected Module Instance (s)" click="panelAssetImageCompositeModuleEditing.DeleteModuleInstances ();" focusEnabled="false" fontSize="8" width="27" height="27" toggle="false" cornerRadius="0" icon="@Embed('../../../res/command/command-delete.png')" disabledIcon="@Embed('../../../res/command/command-delete-disabled.png')" />
         <mx:Spacer width="100%"/>
         <mx:ViewStack id="ViewStackPlayStop" borderStyle="none" creationPolicy="all" width="100%">
            <mx:HBox id="BoxPlay" backgroundColor="0xD0D0D0" height="100%" verticalAlign="middle" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" horizontalGap="0" verticalGap="0" borderStyle="solid" borderThickness="0">
               <mx:Button id="ButtonPlay" click="OnPlay ();" toolTip="Play" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0" icon="@Embed('../../../res/play/play-run.png')" disabledIcon="@Embed('../../../res/play/play-run-disabled.png')" />
            </mx:HBox>
            <mx:HBox id="BoxStop" backgroundColor="0xD0D0D0" height="100%" verticalAlign="middle" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" horizontalGap="0" verticalGap="0" borderStyle="solid" borderThickness="0">
               <mx:Button id="ButtonStop" click="OnPause ();" toolTip="Pause" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0" icon="@Embed('../../../res/play/play-stop.png')" disabledIcon="@Embed('../../../res/play/play-stop-disabled.png')" />
            </mx:HBox>
         </mx:ViewStack>
         <mx:Spacer width="100%"/>
         <mx:Label id="LabelDuration" text="Duration:" textAlign="right"/>
         <mx:NumericStepper id="NumericStepperDuration" width="77" stepSize="1" value="1" minimum="0" maximum="10000" change="ChangeModuleInstanceProperties ();" />
         <mx:Spacer width="10"/>
         <mx:Label id="LabelLeft" text="X:" textAlign="right" />
         <mx:TextInput id="TextInputPosX" width="65" enter="ChangeModuleInstanceProperties ();" />
         <mx:Spacer width="10"/>
         <mx:Label id="LabelTop" text="Y:" textAlign="right" />
         <mx:TextInput id="TextInputPosY" width="65" enter="ChangeModuleInstanceProperties ();" />
         <mx:Spacer width="10"/>
         <mx:Label id="LabelRight" text="Scale:" textAlign="right" />
         <mx:TextInput id="TextInputScale" width="39" enter="ChangeModuleInstanceProperties ();" />
         <mx:Spacer width="10"/>
         <mx:CheckBox selected="false" id="CheckBoxFlipped" label="Flip" click="ChangeModuleInstanceProperties ();"/>
         <mx:Spacer width="5"/>
         <mx:Label id="LabelBottom" text="Angle:" textAlign="right"/>
         <mx:TextInput id="TextInputAngle" width="32" enter="ChangeModuleInstanceProperties ();" />
      </mx:HBox>
      <mx:HDividedBox id="theDividedBox" liveDragging="true" width="100%" height="100%" backgroundColor="0xD0D0D0" dividerThickness="3" dividerAffordance="5" dividerAlpha="1.0" dividerColor="0xFFFFFF">
         <mx:VBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <mx:HBox width="100%" id="BoxModuleProperties" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
               <mx:Label text="" />
               <mx:CheckBox selected="true" id="CheckBoxLoop" label="Loop" click="ChangeCompositeModuleProperties ();"/>
               <mx:Spacer width="100%"/>
               <mx:Label id="LabelModuleInfos" text="5 Parts" textAlign="center"/>
               <mx:Spacer width="10"/>
               <mx:CheckBox selected="false" id="CheckBoxShowAllParts" label="Show All Parts" click="ChangeCompositeModuleProperties ();"/>
               <mx:Spacer width="5"/>
            </mx:HBox>
            <mx:HBox id="Box_CompositeModules" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
               <image:AssetImageCompositeModuleEditingPanel id="panelAssetImageCompositeModuleEditing" width="100%" height="100%"/>
            </mx:HBox>
         </mx:VBox>
         <mx:VBox width="120" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <mx:HBox borderStyle="solid" borderThickness="1" width="100%" horizontalGap="1" verticalGap="1" paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
               <mx:Spacer width="100%"/>
               <mx:Button id="ButtonMoveUpModuleInstance" click="panelAssetImageCompositeModuleEditing.MoveModuleInstanceUp ()" toolTip="Move Up" focusEnabled="false" fontSize="8" left="5" top="5" width="20" height="20" toggle="false" cornerRadius="0" icon="@Embed('../../../res/action/command_moveup.png')" disabledIcon="@Embed('../../../res/action/command_moveup-disabled.png')" />
               <mx:Button id="ButtonMoveDownModuleInstance" click="panelAssetImageCompositeModuleEditing.MoveModuleInstanceDown ()" toolTip="Move Down" focusEnabled="false" fontSize="8" left="5" top="5" width="20" height="20" toggle="false" cornerRadius="0" icon="@Embed('../../../res/action/command_movedown.png')" disabledIcon="@Embed('../../../res/action/command_movedown-disabled.png')" />
            </mx:HBox>
            <mx:HBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
               <image:AssetImageModuleInstanceListingPanel id="panelAssetImageModuleInstanceListing" width="100%" height="100%"/>
            </mx:HBox>
         </mx:VBox>
      </mx:HDividedBox>
   </mx:VBox>

   <mx:Script>
      <![CDATA[
      
         import mx.managers.PopUpManager;
         
         import editor.image.AssetImageCompositeModule;
         
         import editor.runtime.Runtime;
         
         public static function ShowAssetImageCompositeModuleEditDialog (assetImageCompositeModule:AssetImageCompositeModule):void
         {
            var assetImageCompositeModuleEditDialog:AssetImageCompositeModuleEditDialog = assetImageCompositeModule.GetAssetImageCompositeModuleEditDialog ();
            
            if (assetImageCompositeModuleEditDialog == null)
            {
               assetImageCompositeModuleEditDialog = new AssetImageCompositeModuleEditDialog ();
            }
            
            if (assetImageCompositeModuleEditDialog.parent != null)
            {
               PopUpManager.bringToFront (assetImageCompositeModuleEditDialog);
            }
            else
            {
               PopUpManager.addPopUp (assetImageCompositeModuleEditDialog, Runtime.GetApplication (), false);
               PopUpManager.centerPopUp (assetImageCompositeModuleEditDialog);
            }
            
            assetImageCompositeModuleEditDialog.GetAssetImageCompositeModuleEditingPanel ().SetAssetImageModuleInstanceManager (assetImageCompositeModule.GetModuleInstanceManager ());
            assetImageCompositeModuleEditDialog.GetAssetImageModuleInstanceListingPanel ().SetAssetImageModuleInstanceManagerForListing (assetImageCompositeModule.GetModuleInstanceManagerForListing ());
            
            assetImageCompositeModuleEditDialog.GetAssetImageCompositeModuleEditingPanel ().SetAssetImageModuleInstanceListingPanelPeer (assetImageCompositeModuleEditDialog.GetAssetImageModuleInstanceListingPanel ());
            assetImageCompositeModuleEditDialog.GetAssetImageModuleInstanceListingPanel ().SetAssetImageCompositeModuleEditingPanelPeer (assetImageCompositeModuleEditDialog.GetAssetImageCompositeModuleEditingPanel ());
            
            assetImageCompositeModule.SetAssetImageCompositeModuleEditDialog (assetImageCompositeModuleEditDialog);
         }
         
         public function Hide ():void
         {
            PopUpManager.removePopUp(this);
         }
         
         public function GetAssetImageCompositeModuleEditingPanel ():AssetImageCompositeModuleEditingPanel
         {
            return panelAssetImageCompositeModuleEditing;
         }
         
         public function GetAssetImageModuleInstanceListingPanel ():AssetImageModuleInstanceListingPanel
         {
            return panelAssetImageModuleInstanceListing;
         }
      
      //=====================================================================
      
         public function InitDialog ():void
         {
            panelAssetImageCompositeModuleEditing.mButtonDeleteModuleInstances = ButtonDeleteModuleInstances;
            panelAssetImageCompositeModuleEditing.mViewStackPlayStop = ViewStackPlayStop;
            panelAssetImageCompositeModuleEditing.mLabelDuration = LabelDuration;
            panelAssetImageCompositeModuleEditing.mNumericStepperDuration = NumericStepperDuration;
            panelAssetImageCompositeModuleEditing.mTextInputPosX = TextInputPosX;
            panelAssetImageCompositeModuleEditing.mTextInputPosY = TextInputPosY;
            panelAssetImageCompositeModuleEditing.mTextInputScale = TextInputScale;
            panelAssetImageCompositeModuleEditing.mCheckBoxFlipped = CheckBoxFlipped;
            panelAssetImageCompositeModuleEditing.mTextInputAngle = TextInputAngle;
            
            panelAssetImageCompositeModuleEditing.mBoxModuleProperties = BoxModuleProperties;
            panelAssetImageCompositeModuleEditing.mLabelModuleInfos = LabelModuleInfos;
            panelAssetImageCompositeModuleEditing.mCheckBoxLoop = CheckBoxLoop;
            panelAssetImageCompositeModuleEditing.mCheckBoxShowAllParts = CheckBoxShowAllParts;
         }
         
         private function OnPlay ():void
         {
            panelAssetImageCompositeModuleEditing.Play ();
            ViewStackPlayStop.selectedChild = BoxStop;
         }
         
         private function OnPause ():void
         {
            panelAssetImageCompositeModuleEditing.Pause ();
            ViewStackPlayStop.selectedChild = BoxPlay;
         }
         
         private function ChangeModuleInstanceProperties ():void
         {
            panelAssetImageCompositeModuleEditing.SychronizeCurrentModuleInstacnePropertiesFromUI ();
         }
         
         private function ChangeCompositeModuleProperties ():void
         {
            panelAssetImageCompositeModuleEditing.SychronizeCompositeModulePropertiesFromUI ();
         }

     ]]>
   </mx:Script>



</mx:TitleWindow>
