<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<container:ResizableTitleWindow xmlns:container="editor.display.container.*"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:sound="editor.sound.dialog.*"
    title="Sound Assets Manager"
    width="216" height="500"
    paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
    showCloseButton="true"
    creationComplete="InitDialog ();"
    close="HideAssetSoundListDialog ();"
    >

   <mx:VBox backgroundColor="0xE0E0E0" borderStyle="solid" width="100%" height="100%"
            horizontalScrollPolicy="off" verticalScrollPolicy="off"
            horizontalGap="0" verticalGap="0" borderThickness="0"
            >
      <mx:HBox width="100%" paddingTop="3" paddingLeft="3" paddingRight="3" paddingBottom="3" verticalAlign="middle">
         <mx:Button id="ButtonStopAll" click="StopAllSounds ()" toolTip="Stop All" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0" icon="@Embed('../../../res/play/play-stop.png')" disabledIcon="@Embed('../../../res/play/play-stop-disabled.png')" />
         <mx:Spacer width="100%" />
         <mx:HSlider id="SliderVolume" change="AdjustVolume ()"  width="137" toolTip="Volume" minimum="0.0" maximum="1.0" snapInterval="0.01" value="0.5" allowTrackClick="true" liveDragging="true" />
      </mx:HBox>
      <mx:VBox id="Box_SoundListing" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
         <sound:AssetSoundListPanel id="panelAssetSoundList" width="100%" height="100%"/>
      </mx:VBox>
   </mx:VBox>

   <mx:Script>
      <![CDATA[
         import flash.media.SoundMixer;
         import flash.media.SoundTransform;
         
         import mx.managers.PopUpManager;
         
         import editor.EditorContext;

      // static functions
         
         public static function ShowAssetSoundListDialog (OnSoundPicked:Function = null):void
         {
            if (EditorContext.GetSingleton ().mAssetSoundListDialog == null)
            {
               EditorContext.GetSingleton ().mAssetSoundListDialog = new AssetSoundListDialog ();
               EditorContext.GetSingleton ().mAssetSoundListDialog.SetAllowedResizingModeBits (ResizingMode_Bottom);
            }
            
            EditorContext.GetSingleton ().mAssetSoundListDialog.SetAsCurrentFocusedTitleWindow ();
            
            if (EditorContext.GetSingleton ().mAssetSoundListDialog.parent != null) // OnSoundPicked must be null
            {
               PopUpManager.bringToFront (EditorContext.GetSingleton ().mAssetSoundListDialog);
            }
            else
            {
               PopUpManager.addPopUp (EditorContext.GetSingleton ().mAssetSoundListDialog, EditorContext.GetEditorApp (), OnSoundPicked != null);
               PopUpManager.centerPopUp (EditorContext.GetSingleton ().mAssetSoundListDialog);
            }
            
            EditorContext.GetSingleton ().mAssetSoundListDialog.GetAssetSoundListPanel ().SetAssetSoundManager (EditorContext.GetEditorApp ().GetWorld ().GetAssetSoundManager ());
            
            if (OnSoundPicked != null)
            {
               EditorContext.GetSingleton ().mAssetSoundListDialog.mInPickingMode = true;
               
               EditorContext.GetSingleton ().mAssetSoundListDialog.GetAssetSoundListPanel ().EnterPickAssetIntent (OnSoundPicked, EndPickingMode);
            }
         }
         
         public static function HideAssetSoundListDialog ():void
         {
            if (EditorContext.GetSingleton ().mAssetSoundListDialog.mInPickingMode)
            {
               EndPickingMode ();
            }
            else
            {
               PopUpManager.removePopUp (EditorContext.GetSingleton ().mAssetSoundListDialog);
            }
            
         }
         
         public static function StartPickingMode (OnSoundPicked:Function):void
         {
            if (EditorContext.GetSingleton ().mAssetSoundListDialog != null)
            {
               PopUpManager.removePopUp (EditorContext.GetSingleton ().mAssetSoundListDialog);
            }
            
            ShowAssetSoundListDialog (OnSoundPicked);
         }
         
         public static function EndPickingMode ():void
         {
            if (EditorContext.GetSingleton ().mAssetSoundListDialog != null)
            {
               EditorContext.GetSingleton ().mAssetSoundListDialog.mInPickingMode = false;
               
               PopUpManager.removePopUp(EditorContext.GetSingleton ().mAssetSoundListDialog);
            
               EditorContext.GetSingleton ().mAssetSoundListDialog.GetAssetSoundListPanel ().ExitPickAssetIntent ();
            }
         }
         
      //======================================================
         
         public function GetAssetSoundListPanel ():AssetSoundListPanel
         {
            return panelAssetSoundList;
         }
         
      //======================================================
      
         internal var mInPickingMode:Boolean = false;
         
         private function InitDialog ():void
         {
            SliderVolume.value = EditorContext.GetSoundVolume ();
            AdjustVolume ();
         }
         
         private function StopAllSounds ():void
         {
            EditorContext.GetEditorApp ().GetWorld ().GetAssetSoundManager ().StopAllSounds ();
            SoundMixer.stopAll ();
         }
         
         private function AdjustVolume ():void
         {
            EditorContext.SetSoundVolume (SliderVolume.value);
            SliderVolume.value = EditorContext.GetSoundVolume ();
            var transform:SoundTransform = new SoundTransform();
            transform.volume = SliderVolume.value;
            SoundMixer.soundTransform = transform;
         }

     ]]>
   </mx:Script>



</container:ResizableTitleWindow>
