<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component. 
     You cannot run it independently. -->
     
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*"
    title="Text Setting" width="600">

   <mx:TabNavigator width="100%" height="100%">
      <mx:VBox label="Text" borderStyle="solid" height="100%" width="100%"
               paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"
               horizontalScrollPolicy="off" verticalScrollPolicy="off"
               horizontalGap="0" verticalGap="0" borderThickness="0" creationComplete="OnBasicPanelCreationComplete()">
         <TextSettingPanel id="theTextSettingPanel" creationComplete="OnTextSettingPanelCreationComplete()"/>
      </mx:VBox>
      <mx:VBox label="Background Appearance" borderStyle="solid" height="100%" width="100%"
               paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"
               horizontalScrollPolicy="off" verticalScrollPolicy="off"
               horizontalGap="0" verticalGap="0" borderThickness="0">
         <ShapeAppearanceSettingPanel id="AppearanceSettingPanel" creationComplete="OnAppearanceSettingPanelCreationComplete()"/>
         <mx:Spacer width="100%"/>
      </mx:VBox>
      <mx:VBox label="Background Appearance (Mouse Over)" borderStyle="solid" height="100%" width="100%"
               paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"
               horizontalScrollPolicy="off" verticalScrollPolicy="off"
               horizontalGap="0" verticalGap="0" borderThickness="0">
         <ShapeAppearanceSettingPanel id="AppearanceSettingPanel_MouseOver" creationComplete="OnMouseOverAppearanceSettingPanelCreationComplete()"/>
         <mx:Spacer height="100%" />
         <mx:HRule  strokeWidth="1" strokeColor="#C0C0C0" width="100%"/>
         <mx:Spacer height="100%" />
         <mx:HBox id="MouseOverSpecialSettingPanel" creationComplete="OnMouseOverSpecialSettingPanelCreationComplete()" width="100%">
            <mx:Spacer width="100%"/>
            <mx:CheckBox id="CheckBox_UsingHandCursor" label="Use Hand Cursor"/>
            <mx:Spacer width="100%"/>
         </mx:HBox>
         <mx:Spacer height="100%" />
      </mx:VBox>
      <mx:VBox label="Basic" borderStyle="solid" height="100%" width="100%"
               paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"
               horizontalScrollPolicy="off" verticalScrollPolicy="off"
               horizontalGap="0" verticalGap="0" borderThickness="0">
         <EntityBasicSettingPanel id="BasicSettingPanel" creationComplete="OnEntityBasicSettingPanelCreationComplete()"/>
         <mx:Spacer height="100%"/>
         <mx:HBox width="100%">
            <mx:HRule  strokeWidth="1" strokeColor="#C0C0C0" width="100%"/>
         </mx:HBox>
         <mx:Spacer height="100%"/>
         <EntityWidthHeightSettingPanel id="WidthHeightSettingPanel" creationComplete="OnEntityWidthHeightSettingPanelCreationComplete()"/>
         <mx:Spacer height="100%" />
      </mx:VBox>
   </mx:TabNavigator>

   <mx:Spacer height="10"/>

   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:Button label="OK" click="OnClickOkButton ();"/>
      <mx:Spacer width="30"/>
      <mx:Button label="Cancel" click="OnClickCancelButton ();"/>
      <!--
      <mx:Spacer width="30"/>
      <mx:Button label="Default" click="OnClickDefaultButton ();"/>
      -->
      <mx:Spacer width="100%"/>
   </mx:HBox>
   
   
   <mx:Script>
     <![CDATA[      
	
         import mx.events.MenuEvent;
         import mx.managers.PopUpManager;
         import mx.controls.Menu;

         private var OnConfirm:Function = null;
         private var OnClose:Function = null;
         
         private var mParams:Object;
         
         public function SetValues (values:Object):void
         {
            mParams = values;
         }
         
         private function OnBasicPanelCreationComplete ():void
         {
            InitBasicPanel (mParams);
         }
         
         private function InitBasicPanel (initialValues:Object):void
         {
         }

         private function OnTextSettingPanelCreationComplete ():void
         {
            theTextSettingPanel.SetValues (mParams);
         }
         
         private function OnAppearanceSettingPanelCreationComplete ():void
         {
            mParams.mCiTypeSelectable = false;
            AppearanceSettingPanel.SetValues (mParams);
         }

         private function OnMouseOverAppearanceSettingPanelCreationComplete ():void
         {
            mParams.mMouseOverValues.mCiTypeSelectable = false;
            AppearanceSettingPanel_MouseOver.SetValues (mParams.mMouseOverValues);
         }

         private function OnMouseOverSpecialSettingPanelCreationComplete ():void
         {
            CheckBox_UsingHandCursor.selected = mParams.mUsingHandCursor;
         }
         
         private function OnEntityBasicSettingPanelCreationComplete ():void
         {
            mParams.mEnabledNonsense = true;
            BasicSettingPanel.SetValues (mParams);
         }
         
         private function OnEntityWidthHeightSettingPanelCreationComplete ():void
         {
            WidthHeightSettingPanel.SetValues (mParams);
         }
         
         public function SetConfirmFunc (onConfirm:Function):void
         {
            OnConfirm = onConfirm;
         }
         
         public function SetCloseFunc (onClose:Function):void
         {
            OnClose = onClose;
         }
         
         private function OnClickOkButton():void 
         {
            if (theTextSettingPanel != null)
            {
               theTextSettingPanel.GetValues (mParams);
            }
            
            if (AppearanceSettingPanel != null)
            {
               AppearanceSettingPanel.GetValues (mParams);
            }

            if (AppearanceSettingPanel_MouseOver != null)
            {
               AppearanceSettingPanel_MouseOver.GetValues (mParams.mMouseOverValues);
            }

            if (MouseOverSpecialSettingPanel != null)
            {
               mParams.mUsingHandCursor = CheckBox_UsingHandCursor.selected;
            }
            
            if (BasicSettingPanel != null)
            {
               BasicSettingPanel.GetValues (mParams);
            }
            
            if (WidthHeightSettingPanel != null)
            {
               WidthHeightSettingPanel.GetValues (mParams);
            }
            
            PopUpManager.removePopUp(this);
             
             if (OnClose != null)
               OnClose ();
            
            if (OnConfirm != null)
               OnConfirm (mParams);
         }
         
         private function OnClickCancelButton():void 
         {
             PopUpManager.removePopUp(this);
             
             if (OnClose != null)
               OnClose ();
         }
         
         
         private function OnClickDefaultButton ():void
         {
            var values:Object = new Object ();
            
            // ...
            
            SetValues (values);
         }
         
         
     ]]>
   </mx:Script>
   
   

</mx:TitleWindow>
