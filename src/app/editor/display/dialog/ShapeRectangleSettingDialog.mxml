<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="editor.display.dialog.*"
    title="Rectangle Setting" width="700" creationComplete="OnInitPanel()">

   <mx:TabNavigator width="100%" height="100%">
      <mx:VBox label="Physics" borderStyle="solid" height="100%" width="100%"
               paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"
               horizontalScrollPolicy="off" verticalScrollPolicy="off"
               horizontalGap="0" verticalGap="0" borderThickness="0">
         <ShapePhysicsSettingPanel id="PhysicsSettingPanel" creationComplete="OnPhysicsSettingPanelCreationComplete()"/>
         <mx:Spacer height="32" />
      </mx:VBox>
      <mx:VBox label="Appearance" borderStyle="solid" height="100%" width="100%"
               paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"
               horizontalScrollPolicy="off" verticalScrollPolicy="off"
               horizontalGap="0" verticalGap="0" borderThickness="0">
         <ShapeAppearanceSettingPanel id="AppearanceSettingPanel" creationComplete="OnAppearanceSettingPanelCreationComplete()"/>
         <mx:Spacer height="3"/>
         <mx:HRule  strokeWidth="1" strokeColor="0xC0C0C0" width="100%"/>
         <mx:Spacer height="3"/>
         <mx:VBox id="AppearanceOtherSettingsPanel" width="100%" creationComplete="OnAppearanceOtherSettingsPanelCreationComplete()">
            <mx:HBox width="100%">
               <mx:Spacer width="60"/>
               <mx:CheckBox id="CheckBox_RoundJoint" label="Round Joints"/>
            </mx:HBox>
            <mx:HBox width="100%">
               <mx:Spacer width="60"/>
               <mx:CheckBox id="CheckBox_RoundCorner" label="Round Corners" click="OnRoundCornerClick();" width="22%"/>
               <mx:Label id="Label_CornerEclipseWidth" text="Corner Eclipse Width:" textAlign="right"/>
               <mx:NumericStepper id="NumericStepper_CornerEclipseWidth" stepSize="1" minimum="0" maximum="255" value="0" width="80" />
               <mx:Label text="(pixels)"/>
            </mx:HBox>
            <mx:HBox width="100%">
               <mx:Spacer width="60"/>
               <mx:Spacer width="22%"/>
               <mx:Label id="Label_CornerEclipseHeight" text="Corner Eclipse Height:" textAlign="right"/>
               <mx:NumericStepper id="NumericStepper_CornerEclipseHeight" stepSize="1" minimum="0" maximum="255" value="0" width="80" />
               <mx:Label text="(pixels)"/>
            </mx:HBox>
         </mx:VBox>
         <mx:Spacer height="100%"/>
      </mx:VBox>
      <mx:VBox label="Basic" borderStyle="solid" height="100%" width="100%"
               paddingTop="5" paddingLeft="5" paddingRight="5" paddingBottom="5"
               horizontalScrollPolicy="off" verticalScrollPolicy="off"
               horizontalGap="0" verticalGap="0" borderThickness="0">
         <EntityBasicSettingPanel id="BasicSettingPanel" creationComplete="OnEntityBasicSettingPanelCreationComplete()"/>
         <mx:Spacer height="100%"/>
         <mx:HBox width="100%">
            <mx:HRule  strokeWidth="1" strokeColor="0xC0C0C0" width="100%"/>
         </mx:HBox>
         <mx:Spacer height="100%"/>
         <EntityWidthHeightSettingPanel id="WidthHeightSettingPanel" creationComplete="OnEntityWidthHeightSettingPanelCreationComplete()"/>
         <mx:Spacer height="100%"/>
      </mx:VBox>
   </mx:TabNavigator>

   <mx:Spacer height="10"/>

   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:Button label="OK" click="OnClickOkButton ();"/>
      <mx:Spacer width="30"/>
      <mx:Button label="Cancel" click="OnClickCancelButton ();"/>
      <!--
      <mx:Spacer width="30"/>
      <mx:Button label="Default" click="OnClickDefaultButton ();"/>
      -->
      <mx:Spacer width="100%"/>
   </mx:HBox>


   <mx:Script>
     <![CDATA[

         import mx.events.MenuEvent;
         import mx.managers.PopUpManager;
         import mx.controls.Menu;

         import common.Define;

         private var OnConfirm:Function = null;
         private var OnClose:Function = null;

         private var mParams:Object;

         public function SetValues (initialValues:Object):void
         {
            mParams = initialValues;
         }

         private function OnInitPanel ():void
         {
         }

         private function OnPhysicsSettingPanelCreationComplete ():void
         {
            mParams.mEnablePhysicsChangeable = mParams.mAiType < 0;

            PhysicsSettingPanel.SetValues (mParams);
         }

         private function OnAppearanceSettingPanelCreationComplete ():void
         {
            mParams.mCiTypeSelectable = true;
            mParams.mOnCiTypeChanged = OnCiTypeChanged; // PhysicsSettingPanel.OnCiTypeChanged;
            AppearanceSettingPanel.SetValues (mParams);
         }
         
         private function OnCiTypeChanged (isCI:Boolean):void
         {
            AppearanceOtherSettingsPanel.enabled = ! isCI;
            PhysicsSettingPanel.OnCiTypeChanged (isCI);
         }

         private function OnAppearanceOtherSettingsPanelCreationComplete ():void
         {
            //CheckBox_RoundCorners.selected = mParams.mIsRoundCorners;
            CheckBox_RoundJoint.selected = mParams.mIsRoundJoint;
            
            CheckBox_RoundCorner.selected = mParams.mIsRoundCorner;
            NumericStepper_CornerEclipseWidth.value = mParams.mCornerEclipseWidth;
            NumericStepper_CornerEclipseHeight.value = mParams.mCornerEclipseHeight;
            
            OnRoundCornerClick ();
         }

         private function OnEntityBasicSettingPanelCreationComplete ():void
         {
            mParams.mEnabledNonsense = true;
            BasicSettingPanel.SetValues (mParams);
         }

         private function OnEntityWidthHeightSettingPanelCreationComplete ():void
         {
            WidthHeightSettingPanel.SetValues (mParams);
         }
         
         private function OnRoundCornerClick ():void
         {
            CheckBox_RoundJoint.enabled = (! CheckBox_RoundCorner.selected);
         }

         public function SetConfirmFunc (onConfirm:Function):void
         {
            OnConfirm = onConfirm;
         }

         public function SetCloseFunc (onClose:Function):void
         {
            OnClose = onClose;
         }

         private function OnClickOkButton():void
         {
            if (PhysicsSettingPanel != null)
            {
               PhysicsSettingPanel.GetValues (mParams);
            }

            if (AppearanceSettingPanel != null)
            {
               AppearanceSettingPanel.GetValues (mParams);
            }

            if (AppearanceOtherSettingsPanel != null)
            {
               //mParams.mIsRoundCorners = CheckBox_RoundCorners.selected;
               mParams.mIsRoundJoint = CheckBox_RoundJoint.selected;
               
               mParams.mIsRoundCorner = CheckBox_RoundCorner.selected;
               mParams.mCornerEclipseWidth = NumericStepper_CornerEclipseWidth.value;
               mParams.mCornerEclipseHeight = NumericStepper_CornerEclipseHeight.value;
            }

            if (BasicSettingPanel != null)
            {
               BasicSettingPanel.GetValues (mParams);
            }

            if (WidthHeightSettingPanel != null)
            {
               WidthHeightSettingPanel.GetValues (mParams);
            }

            PopUpManager.removePopUp(this);

             if (OnClose != null)
               OnClose ();

            if (OnConfirm != null)
               OnConfirm (mParams);
         }

         private function OnClickCancelButton():void
         {
             PopUpManager.removePopUp(this);

             if (OnClose != null)
               OnClose ();
         }

     ]]>
   </mx:Script>



</mx:TitleWindow>
