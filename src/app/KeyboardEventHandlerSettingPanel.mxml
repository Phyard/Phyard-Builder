<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component. 
     You cannot run it independently. -->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:ed="editor.controls.*"
      borderStyle="solid" borderThickness="0"
      width="100%" height="100%" horizontalAlign="center"
      creationComplete="OnInitPanel()"
      >

   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:RadioButton groupName="EventType" id="RadioButton_Down" value="Down" label="Key Down" />
      <mx:Spacer width="100%"/>
      <mx:RadioButton groupName="EventType" id="RadioButton_Up" value="Up" label="Key Up" />
      <mx:Spacer width="100%"/>
      <mx:RadioButton groupName="EventType" id="RadioButton_Hold" value="Hold" label="Key Hold" />
      <mx:Spacer width="100%"/>
   </mx:HBox>
   <mx:HBox width="100%" height="150">
      <ed:KeyboardForSelecting id="KeyboardPanel"/>
   </mx:HBox>
   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:CheckBox id="CheckBox_MouseButton" label="Left Mouse Button"/>
      <mx:Spacer width="100%"/>
   </mx:HBox>

   <mx:Script>
      <![CDATA[       
         
         import mx.events.MenuEvent;
         import mx.managers.PopUpManager;
         import mx.controls.Menu;
         
         import common.Define;
         import common.KeyCodes;
         import common.trigger.CoreEventIds;
         
         private var OnConfirm:Function = null;
         private var OnClose:Function = null;
         
         private var mParams:Object;
         
         public function OnInitPanel ():void
         {
         }
         
         public function SetValues (initialValues:Object):void
         {
            mParams = initialValues;
            
            KeyboardPanel.selectedKeyCodes = initialValues.mKeyCodes;
            CheckBox_MouseButton.selected = initialValues.mKeyCodes.indexOf (KeyCodes.LeftMouseButton) >= 0;
            
            switch (initialValues.mEventId)
            {
               case CoreEventIds.ID_OnWorldKeyUp:
                  RadioButton_Up.selected = true;
                  break;
               case CoreEventIds.ID_OnWorldKeyHold:
                  RadioButton_Hold.selected = true;
                  break;
               case CoreEventIds.ID_OnWorldKeyDown:
               default:
                  RadioButton_Down.selected = true;
                  break;
            }
         }
         
         public function GetValues (returnValues:Object):void
         {
            if (RadioButton_Up.selected)
               mParams.mEventId = CoreEventIds.ID_OnWorldKeyUp;
            else if (RadioButton_Hold.selected)
               mParams.mEventId = CoreEventIds.ID_OnWorldKeyHold;
            else //if (RadioButton_Down.selected)
               mParams.mEventId = CoreEventIds.ID_OnWorldKeyDown;
            
            mParams.mKeyCodes = KeyboardPanel.selectedKeyCodes;
            
            if (CheckBox_MouseButton.selected)
            {
                mParams.mKeyCodes.push (KeyCodes.LeftMouseButton);
            }
         }
         
     ]]>
   </mx:Script>



</mx:VBox>