<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
         xmlns:mx="http://www.adobe.com/2006/mxml" 
         xmlns:ed="editor.*" 
         xmlns="*" 
         styleName = "plain" 
         layout="absolute" 
         width ="100%"
         height="100%"
         borderStyle="solid"
         borderThickness="1"
         scriptTimeLimit="6"
         creationComplete="InitApp()">
   
   <mx:ApplicationControlBar dock="true" paddingTop="2" paddingBottom="1">

      <mx:HBox id="Box_DesignCommands" borderStyle="none" height="100%" horizontalGap="0" verticalGap="0" paddingTop="1" paddingLeft="0" paddingRight="0" paddingBottom="1" borderThickness="0">
         <mx:Spacer width="5"/>
         <mx:Button id="Button_OpenDesign" toolTip="Open Design" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/file/design-open.png')" />
         <mx:Button id="Button_SaveDesign" toolTip="Save Design" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/file/design-save.png')" />
         <mx:Button id="Button_DesignInfo" toolTip="Design Info" click="ShowDesignInfoSettingDialog ();" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/file/design-info.png')" />
      </mx:HBox>
      <mx:Spacer width="100%"/>
      <mx:ViewStack id="ViewStack_ViewEditCommands" borderStyle="none" creationPolicy="all" height="32" width="100%">
         <mx:HBox id="Box_EntityEditViewCommands" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" horizontalGap="0" verticalGap="0" borderStyle="solid" borderThickness="1">
            <mx:HBox id="Box_EntityEditViewCommands_1" borderStyle="none" height="100%" horizontalGap="0" verticalGap="0" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderThickness="0">
               <mx:Spacer width="5"/>
               <mx:Button id="Button_NewDesign" toolTip="New Design" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/file/design-new.png')" />
               <mx:Button id="Button_ConfigDesign" toolTip="Config Design" click="OnClickConfigDesignButton ();" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/file/design-config.png')" />
               <mx:Spacer width="10"/>
               <mx:Button id="Button_Clone" toolTip="(C) Clone Selected(s)" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-clone.png')" disabledIcon="@Embed('res/command/command-clone-disabled.png')" />
               <mx:Button id="Button_Delete" toolTip="(D) Delete Selected(s)" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-delete.png')" disabledIcon="@Embed('res/command/command-delete-disabled.png')" />
               <mx:Button id="Button_FlipH" toolTip="(X) Flip Selected(s) Horizontally" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-flip-x.png')" disabledIcon="@Embed('res/command/command-flip-x-disabled.png')" />
               <mx:Button id="Button_FlipV" toolTip="(Y) Flip Selected(s) Vertically" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-flip-y.png')" disabledIcon="@Embed('res/command/command-flip-y-disabled.png')" />
               <mx:Button id="Button_MoveToTop" toolTip="Move Selected(s) to Top Layer" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-to-top.png')" disabledIcon="@Embed('res/command/command-to-top-disabled.png')" />
               <mx:Button id="Button_MoveToBottom" toolTip="Move Selected(s) to Bottom Layer" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-to-bottom.png')" disabledIcon="@Embed('res/command/command-to-bottom-disabled.png')" />
               <mx:Spacer width="10"/>
               <mx:Button id="Button_Glue" toolTip="(G) Glue Selected(s)" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-glue.png')" disabledIcon="@Embed('res/command/command-glue-disabled.png')" />
               <mx:Button id="Button_BreakApart" toolTip="(B) Break Apart Selected(s)" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-glue-break.png')" disabledIcon="@Embed('res/command/command-glue-break-disabled.png')" />
               <mx:Spacer width="10"/>
            </mx:HBox>
            <mx:ViewStack id="ViewStack_PlayStop" borderStyle="none" creationPolicy="all" height="30">
               <mx:HBox id="Box_Play" borderStyle="none" height="100%" width="100%" horizontalGap="0" verticalGap="0" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderThickness="0">
                  <mx:Button id="Button_Play" toolTip="Play" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/play/play-run.png')" />
               </mx:HBox>
               <mx:HBox id="Box_Stop" borderStyle="none" height="100%" width="100%" horizontalGap="0" verticalGap="0" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderThickness="0">
                  <mx:Button id="Button_Stop" toolTip="Stop" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/play/play-stop.png')" />
               </mx:HBox>
            </mx:ViewStack>
            <mx:HBox id="Box_EntityEditViewCommands_2" borderStyle="none" height="100%" horizontalGap="0" verticalGap="0" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderThickness="0">
               <mx:Spacer width="10"/>
               <mx:Button id="Button_Setting" label="Setting..." toolTip="Set Properties of The Selected" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-setting.png')" disabledIcon="@Embed('res/command/command-setting-disabled.png')" />
               <mx:Spacer width="10"/>
               <mx:Button id="Button_Undo" toolTip="Undo" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-undo.png')" disabledIcon="@Embed('res/command/command-undo-disabled.png')" />
               <mx:Button id="Button_Redo" toolTip="Redo" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-redo.png')" disabledIcon="@Embed('res/command/command-redo-disabled.png')" />
               <mx:Spacer width="10"/>
               <mx:Button id="Button_MouseMoveScene" selected="false" toolTip="Move Scene Mode" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="true" cornerRadius="0" icon="@Embed('res/command/command-move-scene.png')" selectedDownIcon="@Embed('res/command/command-move-scene-sel.png')" selectedOverIcon="@Embed('res/command/command-move-scene-sel.png')" selectedUpIcon="@Embed('res/command/command-move-scene-sel.png')" />
               <mx:Button id="Button_MouseSelectGlued" selected="true" toolTip="Select Glued Mode" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="true" cornerRadius="0" icon="@Embed('res/command/command-select-glued.png')" selectedDownIcon="@Embed('res/command/command-select-glued-sel.png')" selectedOverIcon="@Embed('res/command/command-select-glued-sel.png')" selectedUpIcon="@Embed('res/command/command-select-glued-sel.png')" />
               <mx:Button id="Button_MouseSelectSingle" selected="false" toolTip="Select Single Mode" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="true" cornerRadius="0" icon="@Embed('res/command/command-select-single.png')" selectedDownIcon="@Embed('res/command/command-select-single-sel.png')" selectedOverIcon="@Embed('res/command/command-select-single-sel.png')" selectedUpIcon="@Embed('res/command/command-select-single-sel.png')" />
               <mx:Spacer width="10"/>
               <mx:Button id="Button_MouseMove" selected="true" toolTip="Move Selected(s)" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="true" cornerRadius="0" icon="@Embed('res/command/command-move.png')" selectedDownIcon="@Embed('res/command/command-move-sel.png')" selectedOverIcon="@Embed('res/command/command-move-sel.png')" selectedUpIcon="@Embed('res/command/command-move-sel.png')" />
               <mx:Button id="Button_MouseRotate" toolTip="Rotate Selected(s)" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="true" cornerRadius="0" icon="@Embed('res/command/command-rotate.png')" selectedDownIcon="@Embed('res/command/command-rotate-sel.png')" selectedOverIcon="@Embed('res/command/command-rotate-sel.png')" selectedUpIcon="@Embed('res/command/command-rotate-sel.png')" />
               <mx:Button id="Button_MouseScale" toolTip="Scale Selected(s)" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="true" cornerRadius="0" icon="@Embed('res/command/command-scale.png')" selectedDownIcon="@Embed('res/command/command-scale-sel.png')" selectedOverIcon="@Embed('res/command/command-scale-sel.png')" selectedUpIcon="@Embed('res/command/command-scale-sel.png')" />
               <mx:Spacer width="5"/>
            </mx:HBox>
         </mx:HBox>
         <mx:HBox id="Box_CCatEditViewCommands" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" horizontalGap="0" verticalGap="0" borderStyle="solid" borderThickness="1">
            <mx:Spacer width="5"/>
            <mx:Button id="Button_CreateCollisionCategory" toolTip="Create Collision Category" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="true" cornerRadius="0" disabledIcon="@Embed('res/collision/create-category-disabled.png')" selectedDisabledIcon="@Embed('res/collision/create-category-disabled.png')" upIcon="@Embed('res/collision/create-category.png')" downIcon="@Embed('res/collision/create-category-sel.png')" overIcon="@Embed('res/collision/create-category.png')" selectedUpIcon="@Embed('res/collision/create-category-sel.png')" selectedOverIcon="@Embed('res/collision/create-category-sel.png')" selectedDownIcon="@Embed('res/collision/create-category.png')"   />
            <mx:Button id="Button_CreateCollisionCategoryFriendLink" toolTip="Create Friend Link" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="true" cornerRadius="0" disabledIcon="@Embed('res/collision/create-link-disabled.png')" upIcon="@Embed('res/collision/create-link.png')" downIcon="@Embed('res/collision/create-link-sel.png')" overIcon="@Embed('res/collision/create-link.png')" selectedUpIcon="@Embed('res/collision/create-link-sel.png')" selectedOverIcon="@Embed('res/collision/create-link-sel.png')" selectedDownIcon="@Embed('res/collision/create-link.png')"   />
            <mx:Button id="Button_BreakCollisionCategoryFriendLink" toolTip="Break Friend Link" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="true" cornerRadius="0" disabledIcon="@Embed('res/collision/break-link-disabled.png')" upIcon="@Embed('res/collision/break-link.png')" downIcon="@Embed('res/collision/break-link-sel.png')" overIcon="@Embed('res/collision/break-link.png')" selectedUpIcon="@Embed('res/collision/break-link-sel.png')" selectedOverIcon="@Embed('res/collision/break-link-sel.png')" selectedDownIcon="@Embed('res/collision/break-link.png')"   />
            <mx:Spacer width="10"/>
            <mx:Button id="Button_DeleteCollisionCategory" toolTip="Delete Collision Category" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/command/command-delete.png')" disabledIcon="@Embed('res/command/command-delete-disabled.png')" />
            <mx:Spacer width="10"/>
            <mx:Label id="Label_CollisionCategoryName" text="Name:" textAlign="right"/>
            <mx:TextInput id="Text_CollisionCategoryName" text="" width="100%"/>
            <mx:Spacer width="10"/>
            <mx:CheckBox id="CheckBox_CollisionCategory_CollideInternally" label="Collide Internally"/>
            <mx:Spacer width="5"/>
            <mx:CheckBox id="CheckBox_CollisionCategory_DefaultCategory" label="Default Category"/>
            <!--
            <mx:Spacer width="10"/>
            <mx:Button id="Button_CollisionCategoryHelp" toolTip="Editing Help" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" toggle="false" cornerRadius="0" icon="@Embed('res/editor/editor-help.png')" click="OnClickTutorialLink(event)" />
            -->
            <mx:Spacer width="5"/>
         </mx:HBox>
      </mx:ViewStack>
      <mx:Spacer width="100%"/>
      <mx:HBox id="Box_SwitchViewCommands" borderStyle="none" height="100%" horizontalGap="0" verticalGap="0" paddingTop="1" paddingLeft="0" paddingRight="0" paddingBottom="1" borderThickness="0">
         <mx:Button id="Button_ToggleCCatEditView" toggle="true" toolTip="Edit Collision Categories" click="OnToggleCCatEditView ();" focusEnabled="false" fontSize="8" left="5" top="5" width="30" height="30" cornerRadius="0" icon="@Embed('res/file/design-edit-ccats.png')" selectedUpIcon="@Embed('res/file/design-edit-ccats-sel.png')" selectedOverIcon="@Embed('res/file/design-edit-ccats-sel.png')" selectedDownIcon="@Embed('res/file/design-edit-ccats.png')" />
         <mx:Spacer width="5"/>
      </mx:HBox>

   </mx:ApplicationControlBar>


   <mx:VBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="solid" borderThickness="1" horizontalGap="0" verticalGap="0">

      <mx:Spacer height="3"/>

      <mx:ViewStack id="ViewStack_EditView" borderStyle="none" creationPolicy="all"  width="100%" height="100%" >
         <mx:HBox id="EntityDesignView" direction="horizontal" borderStyle="solid" height="100%" width="100%" 
               paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" 
               horizontalScrollPolicy="off" verticalScrollPolicy="off"
               horizontalGap="0" verticalGap="0" borderThickness="0"
               >
            <mx:VBox borderStyle="none" width="100%" height="100%"
                        paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
                        horizontalGap="0" verticalGap="0">
               <mx:HBox borderStyle="solid" height="100%" width="100%"
                           paddingTop="0" paddingLeft="1" paddingRight="0" paddingBottom="0"
                           horizontalScrollPolicy="off" verticalScrollPolicy="off"
                           horizontalGap="0" verticalGap="0" borderThickness="0">
                  <mx:TabNavigator id="Box_CreateCommands" width="79" height="100%" creationPolicy="all" textAlign="center">
                     <mx:Box icon="@Embed('res/create/create-panel-normal.png')" direction="vertical" borderStyle="solid" width="100%" height="100%"
                              paddingTop="5" paddingLeft="1" paddingRight="1" paddingBottom="1" textAlign="center"
                              horizontalGap="0" verticalGap="0">
                        <mx:Tile direction="horizontal" borderStyle="none" width="100%" height="73" 
                               tileWidth="36" tileHeight="36" 
                               horizontalGap="1" verticalGap="1" 
                               paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                           <mx:Button id="Button_CreateBox" toolTip="Create Box" click="ViewStack_CiShapes.selectedChild=CiShapeRectagelePanel;" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/box.png')" downIcon="@Embed('res/create/box-sel.png')" overIcon="@Embed('res/create/box.png')" selectedUpIcon="@Embed('res/create/box-sel.png')" selectedOverIcon="@Embed('res/create/box-sel.png')" selectedDownIcon="@Embed('res/create/box.png')"   />
                           <mx:Button id="Button_CreateBall" toolTip="Create Ball" click="ViewStack_CiShapes.selectedChild=CiShapeCirclePanel;" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/ball.png')" downIcon="@Embed('res/create/ball-sel.png')" overIcon="@Embed('res/create/ball.png')" selectedUpIcon="@Embed('res/create/ball-sel.png')" selectedOverIcon="@Embed('res/create/ball-sel.png')" selectedDownIcon="@Embed('res/create/ball.png')"   />
                           <mx:Button id="Button_CreatePolygon" toolTip="Create Polygon" click="ViewStack_CiShapes.selectedChild=CiShapePolygonPanel;" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polygon.png')" downIcon="@Embed('res/create/polygon-sel.png')" overIcon="@Embed('res/create/polygon.png')" selectedUpIcon="@Embed('res/create/polygon-sel.png')" selectedOverIcon="@Embed('res/create/polygon-sel.png')" selectedDownIcon="@Embed('res/create/polygon.png')"   />
                           <mx:Button id="Button_CreatePolyline" toolTip="Create Polyline" click="ViewStack_CiShapes.selectedChild=CiShapePolylinePanel;" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polyline.png')" downIcon="@Embed('res/create/polyline-sel.png')" overIcon="@Embed('res/create/polyline.png')" selectedUpIcon="@Embed('res/create/polyline-sel.png')" selectedOverIcon="@Embed('res/create/polyline-sel.png')" selectedDownIcon="@Embed('res/create/polyline.png')"   />
                        </mx:Tile>
                        <mx:Spacer height="10"/>
                        <mx:ViewStack id="ViewStack_CiShapes" borderStyle="none" creationPolicy="all" width="100%" height="110">
                           <mx:Tile id="CiShapeRectagelePanel" direction="horizontal" borderStyle="none" width="100%" height="100%" 
                                  tileWidth="36" tileHeight="36" 
                                  horizontalGap="1" verticalGap="1" 
                                  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                              <mx:Button id="Button_CreateBox_Static" toolTip="Create C.I. Static Box" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/box_static.png')" downIcon="@Embed('res/create/box-sel_static.png')" overIcon="@Embed('res/create/box_static.png')" selectedUpIcon="@Embed('res/create/box-sel_static.png')" selectedOverIcon="@Embed('res/create/box-sel_static.png')" selectedDownIcon="@Embed('res/create/box_static.png')"   />
                              <mx:Button id="Button_CreateBox_Movable" toolTip="Create C.I. Moveable Box" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/box_movable.png')" downIcon="@Embed('res/create/box-sel_movable.png')" overIcon="@Embed('res/create/box_movable.png')" selectedUpIcon="@Embed('res/create/box-sel_movable.png')" selectedOverIcon="@Embed('res/create/box-sel_movable.png')" selectedDownIcon="@Embed('res/create/box_movable.png')"   />
                              <mx:Button id="Button_CreateBox_Breakable" toolTip="Create C.I. Breakable Box" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/box_breakable.png')" downIcon="@Embed('res/create/box-sel_breakable.png')" overIcon="@Embed('res/create/box_breakable.png')" selectedUpIcon="@Embed('res/create/box-sel_breakable.png')" selectedOverIcon="@Embed('res/create/box-sel_breakable.png')" selectedDownIcon="@Embed('res/create/box_breakable.png')"   />
                              <mx:Button id="Button_CreateBox_Infected" toolTip="Create C.I. Infected Box" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/box_infected.png')" downIcon="@Embed('res/create/box-sel_infected.png')" overIcon="@Embed('res/create/box_infected.png')" selectedUpIcon="@Embed('res/create/box-sel_infected.png')" selectedOverIcon="@Embed('res/create/box-sel_infected.png')" selectedDownIcon="@Embed('res/create/box_infected.png')"   />
                              <mx:Button id="Button_CreateBox_Uninfected" toolTip="Create C.I. Uninfected Box" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/box_uninfected.png')" downIcon="@Embed('res/create/box-sel_uninfected.png')" overIcon="@Embed('res/create/box_uninfected.png')" selectedUpIcon="@Embed('res/create/box-sel_uninfected.png')" selectedOverIcon="@Embed('res/create/box-sel_uninfected.png')" selectedDownIcon="@Embed('res/create/box_uninfected.png')"   />
                              <mx:Button id="Button_CreateBox_Dontinfect" toolTip="Create C.I. &quot;Don't Infect Me&quot; Box" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/box_dontinfect.png')" downIcon="@Embed('res/create/box-sel_dontinfect.png')" overIcon="@Embed('res/create/box_dontinfect.png')" selectedUpIcon="@Embed('res/create/box-sel_dontinfect.png')" selectedOverIcon="@Embed('res/create/box-sel_dontinfect.png')" selectedDownIcon="@Embed('res/create/box_dontinfect.png')"   />
                           </mx:Tile>
                           <mx:Tile id="CiShapeCirclePanel" direction="horizontal" borderStyle="none" width="100%" height="100%" 
                                  tileWidth="36" tileHeight="36" 
                                  horizontalGap="1" verticalGap="1" 
                                  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                              <mx:Button id="Button_CreateBall_Static" toolTip="Create C.I. Static Ball" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/ball_static.png')" downIcon="@Embed('res/create/ball-sel_static.png')" overIcon="@Embed('res/create/ball_static.png')" selectedUpIcon="@Embed('res/create/ball-sel_static.png')" selectedOverIcon="@Embed('res/create/ball-sel_static.png')" selectedDownIcon="@Embed('res/create/ball_static.png')"   />
                              <mx:Button id="Button_CreateBall_Movable" toolTip="Create C.I. Moveable Ball" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/ball_movable.png')" downIcon="@Embed('res/create/ball-sel_movable.png')" overIcon="@Embed('res/create/ball_movable.png')" selectedUpIcon="@Embed('res/create/ball-sel_movable.png')" selectedOverIcon="@Embed('res/create/ball-sel_movable.png')" selectedDownIcon="@Embed('res/create/ball_movable.png')"   />
                              <mx:Button id="Button_CreateBall_Breakable" toolTip="Create C.I. Breakable Ball" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/ball_breakable.png')" downIcon="@Embed('res/create/ball-sel_breakable.png')" overIcon="@Embed('res/create/ball_breakable.png')" selectedUpIcon="@Embed('res/create/ball-sel_breakable.png')" selectedOverIcon="@Embed('res/create/ball-sel_breakable.png')" selectedDownIcon="@Embed('res/create/ball_breakable.png')"   />
                              <mx:Button id="Button_CreateBall_Infected" toolTip="Create C.I. Infected Ball" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/ball_infected.png')" downIcon="@Embed('res/create/ball-sel_infected.png')" overIcon="@Embed('res/create/ball_infected.png')" selectedUpIcon="@Embed('res/create/ball-sel_infected.png')" selectedOverIcon="@Embed('res/create/ball-sel_infected.png')" selectedDownIcon="@Embed('res/create/ball_infected.png')"   />
                              <mx:Button id="Button_CreateBall_Uninfected" toolTip="Create C.I. Uninfected Ball" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/ball_uninfected.png')" downIcon="@Embed('res/create/ball-sel_uninfected.png')" overIcon="@Embed('res/create/ball_uninfected.png')" selectedUpIcon="@Embed('res/create/ball-sel_uninfected.png')" selectedOverIcon="@Embed('res/create/ball-sel_uninfected.png')" selectedDownIcon="@Embed('res/create/ball_uninfected.png')"   />
                              <mx:Button id="Button_CreateBall_DontInfect" toolTip="Create C.I. &quot;Don't Infect Me&quot; Ball" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/ball_dontinfect.png')" downIcon="@Embed('res/create/ball-sel_dontinfect.png')" overIcon="@Embed('res/create/ball_dontinfect.png')" selectedUpIcon="@Embed('res/create/ball-sel_dontinfect.png')" selectedOverIcon="@Embed('res/create/ball-sel_dontinfect.png')" selectedDownIcon="@Embed('res/create/ball_dontinfect.png')"   />
                           </mx:Tile>
                           <mx:Tile id="CiShapePolygonPanel" direction="horizontal" borderStyle="none" width="100%" height="100%" 
                                  tileWidth="36" tileHeight="36" 
                                  horizontalGap="1" verticalGap="1" 
                                  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                              <mx:Button id="Button_CreatePolygon_Static" toolTip="Create C.I. Static Polygon" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polygon_static.png')" downIcon="@Embed('res/create/polygon-sel_static.png')" overIcon="@Embed('res/create/polygon_static.png')" selectedUpIcon="@Embed('res/create/polygon-sel_static.png')" selectedOverIcon="@Embed('res/create/polygon-sel_static.png')" selectedDownIcon="@Embed('res/create/polygon_static.png')"   />
                              <mx:Button id="Button_CreatePolygon_Movable" toolTip="Create C.I. Moveable Polygon" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polygon_movable.png')" downIcon="@Embed('res/create/polygon-sel_movable.png')" overIcon="@Embed('res/create/polygon_movable.png')" selectedUpIcon="@Embed('res/create/polygon-sel_movable.png')" selectedOverIcon="@Embed('res/create/polygon-sel_movable.png')" selectedDownIcon="@Embed('res/create/polygon_movable.png')"   />
                              <mx:Button id="Button_CreatePolygon_Breakable" toolTip="Create C.I. Breakable Polygon" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polygon_breakable.png')" downIcon="@Embed('res/create/polygon-sel_breakable.png')" overIcon="@Embed('res/create/polygon_breakable.png')" selectedUpIcon="@Embed('res/create/polygon-sel_breakable.png')" selectedOverIcon="@Embed('res/create/polygon-sel_breakable.png')" selectedDownIcon="@Embed('res/create/polygon_breakable.png')"   />
                              <mx:Button id="Button_CreatePolygon_Infected" toolTip="Create C.I. Infected Polygon" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polygon_infected.png')" downIcon="@Embed('res/create/polygon-sel_infected.png')" overIcon="@Embed('res/create/polygon_infected.png')" selectedUpIcon="@Embed('res/create/polygon-sel_infected.png')" selectedOverIcon="@Embed('res/create/polygon-sel_infected.png')" selectedDownIcon="@Embed('res/create/polygon_infected.png')"   />
                              <mx:Button id="Button_CreatePolygon_Uninfected" toolTip="Create C.I. Uninfected Polygon" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polygon_uninfected.png')" downIcon="@Embed('res/create/polygon-sel_uninfected.png')" overIcon="@Embed('res/create/polygon_uninfected.png')" selectedUpIcon="@Embed('res/create/polygon-sel_uninfected.png')" selectedOverIcon="@Embed('res/create/polygon-sel_uninfected.png')" selectedDownIcon="@Embed('res/create/polygon_uninfected.png')"   />
                              <mx:Button id="Button_CreatePolygon_Dontinfect" toolTip="Create C.I. &quot;Don't Infect Me&quot; Polygon" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polygon_dontinfect.png')" downIcon="@Embed('res/create/polygon-sel_dontinfect.png')" overIcon="@Embed('res/create/polygon_dontinfect.png')" selectedUpIcon="@Embed('res/create/polygon-sel_dontinfect.png')" selectedOverIcon="@Embed('res/create/polygon-sel_dontinfect.png')" selectedDownIcon="@Embed('res/create/polygon_dontinfect.png')"   />
                           </mx:Tile>
                           <mx:Tile id="CiShapePolylinePanel" direction="horizontal" borderStyle="none" width="100%" height="100%" 
                                  tileWidth="36" tileHeight="36" 
                                  horizontalGap="1" verticalGap="1" 
                                  paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                              <mx:Button id="Button_CreatePolyline_Static" toolTip="Create C.I. Static Polyline" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polyline_static.png')" downIcon="@Embed('res/create/polyline-sel_static.png')" overIcon="@Embed('res/create/polyline_static.png')" selectedUpIcon="@Embed('res/create/polyline-sel_static.png')" selectedOverIcon="@Embed('res/create/polyline-sel_static.png')" selectedDownIcon="@Embed('res/create/polyline_static.png')"   />
                              <mx:Button id="Button_CreatePolyline_Movable" toolTip="Create C.I. Moveable Polyline" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polyline_movable.png')" downIcon="@Embed('res/create/polyline-sel_movable.png')" overIcon="@Embed('res/create/polyline_movable.png')" selectedUpIcon="@Embed('res/create/polyline-sel_movable.png')" selectedOverIcon="@Embed('res/create/polyline-sel_movable.png')" selectedDownIcon="@Embed('res/create/polyline_movable.png')"   />
                              <mx:Button id="Button_CreatePolyline_Breakable" toolTip="Create C.I. Breakable Polyline" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polyline_breakable.png')" downIcon="@Embed('res/create/polyline-sel_breakable.png')" overIcon="@Embed('res/create/polyline_breakable.png')" selectedUpIcon="@Embed('res/create/polyline-sel_breakable.png')" selectedOverIcon="@Embed('res/create/polyline-sel_breakable.png')" selectedDownIcon="@Embed('res/create/polyline_breakable.png')"   />
                              <mx:Button id="Button_CreatePolyline_Infected" toolTip="Create C.I. Infected Polyline" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polyline_infected.png')" downIcon="@Embed('res/create/polyline-sel_infected.png')" overIcon="@Embed('res/create/polyline_infected.png')" selectedUpIcon="@Embed('res/create/polyline-sel_infected.png')" selectedOverIcon="@Embed('res/create/polyline-sel_infected.png')" selectedDownIcon="@Embed('res/create/polyline_infected.png')"   />
                              <mx:Button id="Button_CreatePolyline_Uninfected" toolTip="Create C.I. Uninfected Polyline" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polyline_uninfected.png')" downIcon="@Embed('res/create/polyline-sel_uninfected.png')" overIcon="@Embed('res/create/polyline_uninfected.png')" selectedUpIcon="@Embed('res/create/polyline-sel_uninfected.png')" selectedOverIcon="@Embed('res/create/polyline-sel_uninfected.png')" selectedDownIcon="@Embed('res/create/polyline_uninfected.png')"   />
                              <mx:Button id="Button_CreatePolyline_Dontinfect" toolTip="Create C.I. &quot;Don't Infect Me&quot; Polyline" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/polyline_dontinfect.png')" downIcon="@Embed('res/create/polyline-sel_dontinfect.png')" overIcon="@Embed('res/create/polyline_dontinfect.png')" selectedUpIcon="@Embed('res/create/polyline-sel_dontinfect.png')" selectedOverIcon="@Embed('res/create/polyline-sel_dontinfect.png')" selectedDownIcon="@Embed('res/create/polyline_dontinfect.png')"   />
                           </mx:Tile>
                        </mx:ViewStack>
                        <mx:Spacer height="10"/>
                        <mx:Tile direction="horizontal" borderStyle="none" width="100%" height="110" 
                               tileWidth="36" tileHeight="36" 
                               horizontalGap="1" verticalGap="1" 
                               paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                           <mx:Button id="Button_CreateJoint_Hinge" toolTip="Create Hinge Joint" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/joint_hinge.png')" downIcon="@Embed('res/create/joint-sel_hinge.png')" overIcon="@Embed('res/create/joint_hinge.png')" selectedUpIcon="@Embed('res/create/joint-sel_hinge.png')" selectedOverIcon="@Embed('res/create/joint-sel_hinge.png')" selectedDownIcon="@Embed('res/create/joint_hinge.png')"   />
                           <mx:Button id="Button_CreateJoint_Slider" toolTip="Create Slider Joint" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/joint_slider.png')" downIcon="@Embed('res/create/joint-sel_slider.png')" overIcon="@Embed('res/create/joint_slider.png')" selectedUpIcon="@Embed('res/create/joint-sel_slider.png')" selectedOverIcon="@Embed('res/create/joint-sel_slider.png')" selectedDownIcon="@Embed('res/create/joint_slider.png')"   />
                           <mx:Button id="Button_CreateJoint_Distance" toolTip="Create Distance Joint" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/joint_distance.png')" downIcon="@Embed('res/create/joint-sel_distance.png')" overIcon="@Embed('res/create/joint_distance.png')" selectedUpIcon="@Embed('res/create/joint-sel_distance.png')" selectedOverIcon="@Embed('res/create/joint-sel_distance.png')" selectedDownIcon="@Embed('res/create/joint_distance.png')"   />
                           <mx:Button id="Button_CreateJoint_Spring" toolTip="Create Spring Joint" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/joint_spring.png')" downIcon="@Embed('res/create/joint-sel_spring.png')" overIcon="@Embed('res/create/joint_spring.png')" selectedUpIcon="@Embed('res/create/joint-sel_spring.png')" selectedOverIcon="@Embed('res/create/joint-sel_spring.png')" selectedDownIcon="@Embed('res/create/joint_spring.png')"   />
                           <mx:Button id="Button_CreateJoint_Weld" toolTip="Create Weld Joint" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/joint_weld.png')" downIcon="@Embed('res/create/joint-sel_weld.png')" overIcon="@Embed('res/create/joint_weld.png')" selectedUpIcon="@Embed('res/create/joint-sel_weld.png')" selectedOverIcon="@Embed('res/create/joint-sel_weld.png')" selectedDownIcon="@Embed('res/create/joint_weld.png')"   />
                           <!--
                           <mx:Button id="Button_CreateJoint_HingeSlider" toolTip="Create Slider Joint" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/joint_hinge_slider.png')" downIcon="@Embed('res/create/joint-sel_hinge_slider.png')" overIcon="@Embed('res/create/joint_hinge_slider.png')" selectedUpIcon="@Embed('res/create/joint-sel_hinge_slider.png')" selectedOverIcon="@Embed('res/create/joint-sel_hinge_slider.png')" selectedDownIcon="@Embed('res/create/joint_hinge_slider.png')"   />
                           -->
                           <mx:Button id="Button_CreateJoint_Dummy" toolTip="Create Dummy Joint" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/joint_dummy.png')" downIcon="@Embed('res/create/joint-sel_dummy.png')" overIcon="@Embed('res/create/joint_dummy.png')" selectedUpIcon="@Embed('res/create/joint-sel_dummy.png')" selectedOverIcon="@Embed('res/create/joint-sel_dummy.png')" selectedDownIcon="@Embed('res/create/joint_dummy.png')"   />
                        </mx:Tile>
                        <mx:Spacer height="10"/>
                        <mx:Tile direction="horizontal" borderStyle="none" width="100%" height="110" 
                               tileWidth="36" tileHeight="36" 
                               horizontalGap="1" verticalGap="1" 
                               paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                           <mx:Button id="Button_CreateBox_Bomb" toolTip="Create Bomb Box" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/box_bomb.png')" downIcon="@Embed('res/create/box-sel_bomb.png')" overIcon="@Embed('res/create/box_bomb.png')" selectedUpIcon="@Embed('res/create/box-sel_bomb.png')" selectedOverIcon="@Embed('res/create/box-sel_bomb.png')" selectedDownIcon="@Embed('res/create/box_bomb.png')"   />
                           <mx:Button id="Button_CreateBall_Bomb" toolTip="Create Bomb Ball" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/ball_bomb.png')" downIcon="@Embed('res/create/ball-sel_bomb.png')" overIcon="@Embed('res/create/ball_bomb.png')" selectedUpIcon="@Embed('res/create/ball-sel_bomb.png')" selectedOverIcon="@Embed('res/create/ball-sel_bomb.png')" selectedDownIcon="@Embed('res/create/ball_bomb.png')"   />
                           <mx:Button id="Button_CreateCamera" toolTip="Create Camera" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" disabledIcon="@Embed('res/create/camera-disabled.png')"  upIcon="@Embed('res/create/camera.png')" downIcon="@Embed('res/create/camera-sel.png')" overIcon="@Embed('res/create/camera.png')" selectedUpIcon="@Embed('res/create/camera-sel.png')" selectedOverIcon="@Embed('res/create/camera-sel.png')" selectedDownIcon="@Embed('res/create/camera.png')"   />
                           <mx:Button id="Button_CreateGravityController" toolTip="Create Cravity Controller" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" disabledIcon="@Embed('res/create/gravity-controller-disabled.png')" selectedDisabledIcon="@Embed('res/create/gravity-controller-disabled.png')" upIcon="@Embed('res/create/gravity-controller.png')" downIcon="@Embed('res/create/gravity-controller-sel.png')" overIcon="@Embed('res/create/gravity-controller.png')" selectedUpIcon="@Embed('res/create/gravity-controller-sel.png')" selectedOverIcon="@Embed('res/create/gravity-controller-sel.png')" selectedDownIcon="@Embed('res/create/gravity-controller.png')"   />
                           <mx:Button id="Button_CreateText" toolTip="Create Text" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/text.png')" downIcon="@Embed('res/create/text-sel.png')" overIcon="@Embed('res/create/text.png')" selectedUpIcon="@Embed('res/create/text-sel.png')" selectedOverIcon="@Embed('res/create/text-sel.png')" selectedDownIcon="@Embed('res/create/text.png')"   />
                           <mx:Button id="Button_CreateTextButton" toolTip="Create Text Button" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/text-button.png')" downIcon="@Embed('res/create/text-button-sel.png')" overIcon="@Embed('res/create/text-button.png')" selectedUpIcon="@Embed('res/create/text-button-sel.png')" selectedOverIcon="@Embed('res/create/text-button-sel.png')" selectedDownIcon="@Embed('res/create/text-button.png')"   />
                        </mx:Tile>
                        <mx:Spacer height="10"/>

                        <mx:Spacer height="100%"/>
                     </mx:Box>
                     <mx:Box icon="@Embed('res/create/create-panel-trigger.png')" direction="vertical" borderStyle="solid" width="77" height="100%"
                              paddingTop="5" paddingLeft="1" paddingRight="1" paddingBottom="1" textAlign="center"
                              horizontalGap="0" verticalGap="0">
                        <mx:Tile direction="horizontal" borderStyle="none" width="100%" height="110" 
                               horizontalGap="1" verticalGap="1" 
                               paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                           <mx:Button id="Button_CreateCondition" toolTip="Create Basic Condition" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/condition.png')" downIcon="@Embed('res/create/condition-sel.png')" overIcon="@Embed('res/create/condition.png')" selectedUpIcon="@Embed('res/create/condition-sel.png')" selectedOverIcon="@Embed('res/create/condition-sel.png')" selectedDownIcon="@Embed('res/create/condition.png')"   />
                           <mx:Button id="Button_CreateConditionDoor" toolTip="Create Condition Door" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/condition_door.png')" downIcon="@Embed('res/create/condition_door-sel.png')" overIcon="@Embed('res/create/condition_door.png')" selectedUpIcon="@Embed('res/create/condition_door-sel.png')" selectedOverIcon="@Embed('res/create/condition_door-sel.png')" selectedDownIcon="@Embed('res/create/condition_door.png')"   />
                           <mx:Button id="Button_CreateTask" toolTip="Create Task" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/task.png')" downIcon="@Embed('res/create/task-sel.png')" overIcon="@Embed('res/create/task.png')" selectedUpIcon="@Embed('res/create/task-sel.png')" selectedOverIcon="@Embed('res/create/task-sel.png')" selectedDownIcon="@Embed('res/create/task.png')"   />
                           <mx:Button id="Button_CreateAction" toolTip="Create Function" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/action.png')" downIcon="@Embed('res/create/action-sel.png')" overIcon="@Embed('res/create/action.png')" selectedUpIcon="@Embed('res/create/action-sel.png')" selectedOverIcon="@Embed('res/create/action-sel.png')" selectedDownIcon="@Embed('res/create/action.png')"   />
                           <mx:Button id="Button_CreateInputEntityAssigner" toolTip="Create Input Entitiy Limiter" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/input_entity_limiter.png')" downIcon="@Embed('res/create/input_entity_limiter-sel.png')" overIcon="@Embed('res/create/input_entity_limiter.png')" selectedUpIcon="@Embed('res/create/input_entity_limiter-sel.png')" selectedOverIcon="@Embed('res/create/input_entity_limiter-sel.png')" selectedDownIcon="@Embed('res/create/input_entity_limiter.png')"   />
                           <mx:Button id="Button_CreateInputEntityPairAssigner" toolTip="Create Input Entitiy Pair Limiter" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/input_entity_pair_limiter.png')" downIcon="@Embed('res/create/input_entity_pair_limiter-sel.png')" overIcon="@Embed('res/create/input_entity_pair_limiter.png')" selectedUpIcon="@Embed('res/create/input_entity_pair_limiter-sel.png')" selectedOverIcon="@Embed('res/create/input_entity_pair_limiter-sel.png')" selectedDownIcon="@Embed('res/create/input_entity_pair_limiter.png')"   />
                        </mx:Tile>
                        <mx:Spacer height="10"/>
                        <mx:Tile direction="horizontal" borderStyle="none" width="100%" height="332" 
                               horizontalGap="1" verticalGap="1" 
                               paddingTop="0" paddingBottom="0" paddingLeft="0" paddingRight="0">
                           <mx:Button id="Button_CreateEventHandler0" toolTip="Event - Before Level Initializing" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_level_before_initilizing.png')" downIcon="@Embed('res/create/event_on_level_before_initilizing-sel.png')" overIcon="@Embed('res/create/event_on_level_before_initilizing.png')" selectedUpIcon="@Embed('res/create/event_on_level_before_initilizing-sel.png')" selectedOverIcon="@Embed('res/create/event_on_level_before_initilizing-sel.png')" selectedDownIcon="@Embed('res/create/event_on_level_before_initilizing.png')"   />
                           <mx:Button id="Button_CreateEventHandler1" toolTip="Event - After Level Initialized" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_level_after_initilized.png')" downIcon="@Embed('res/create/event_on_level_after_initilized-sel.png')" overIcon="@Embed('res/create/event_on_level_after_initilized.png')" selectedUpIcon="@Embed('res/create/event_on_level_after_initilized-sel.png')" selectedOverIcon="@Embed('res/create/event_on_level_after_initilized-sel.png')" selectedDownIcon="@Embed('res/create/event_on_level_after_initilized.png')"   />
                           <mx:Button id="Button_CreateEventHandler2" toolTip="Event - Before Level Updating" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_level_before_updating.png')" downIcon="@Embed('res/create/event_on_level_before_updating-sel.png')" overIcon="@Embed('res/create/event_on_level_before_updating.png')" selectedUpIcon="@Embed('res/create/event_on_level_before_updating-sel.png')" selectedOverIcon="@Embed('res/create/event_on_level_before_updating-sel.png')" selectedDownIcon="@Embed('res/create/event_on_level_before_updating.png')"   />
                           <mx:Button id="Button_CreateEventHandler3" toolTip="Event - After Level Updated" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_level_after_updated.png')" downIcon="@Embed('res/create/event_on_level_after_updated-sel.png')" overIcon="@Embed('res/create/event_on_level_after_updated.png')" selectedUpIcon="@Embed('res/create/event_on_level_after_updated-sel.png')" selectedOverIcon="@Embed('res/create/event_on_level_after_updated-sel.png')" selectedDownIcon="@Embed('res/create/event_on_level_after_updated.png')"   />
                           <mx:Button id="Button_CreateEventHandler4" toolTip="Event - Joint Reaches Lower Limit" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_joint_reach_lower_limit.png')" downIcon="@Embed('res/create/event_on_joint_reach_lower_limit-sel.png')" overIcon="@Embed('res/create/event_on_joint_reach_lower_limit.png')" selectedUpIcon="@Embed('res/create/event_on_joint_reach_lower_limit-sel.png')" selectedOverIcon="@Embed('res/create/event_on_joint_reach_lower_limit-sel.png')" selectedDownIcon="@Embed('res/create/event_on_joint_reach_lower_limit.png')"   />
                           <mx:Button id="Button_CreateEventHandler5" toolTip="Event - Joint Reaches Upper Limit" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_joint_reach_upper_limit.png')" downIcon="@Embed('res/create/event_on_joint_reach_upper_limit-sel.png')" overIcon="@Embed('res/create/event_on_joint_reach_upper_limit.png')" selectedUpIcon="@Embed('res/create/event_on_joint_reach_upper_limit-sel.png')" selectedOverIcon="@Embed('res/create/event_on_joint_reach_upper_limit-sel.png')" selectedDownIcon="@Embed('res/create/event_on_joint_reach_upper_limit.png')"   />
                           <mx:Button id="Button_CreateEventHandler8" toolTip="Event - Mouse Event (World)" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_world_mouse_clicked.png')" downIcon="@Embed('res/create/event_on_world_mouse_clicked-sel.png')" overIcon="@Embed('res/create/event_on_world_mouse_clicked.png')" selectedUpIcon="@Embed('res/create/event_on_world_mouse_clicked-sel.png')" selectedOverIcon="@Embed('res/create/event_on_world_mouse_clicked-sel.png')" selectedDownIcon="@Embed('res/create/event_on_world_mouse_clicked.png')"   />
                           <mx:Button id="Button_CreateEventHandler58" toolTip="Event - Mouse Event (Shape)" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_shape_mouse_clicked.png')" downIcon="@Embed('res/create/event_on_shape_mouse_clicked-sel.png')" overIcon="@Embed('res/create/event_on_shape_mouse_clicked.png')" selectedUpIcon="@Embed('res/create/event_on_shape_mouse_clicked-sel.png')" selectedOverIcon="@Embed('res/create/event_on_shape_mouse_clicked-sel.png')" selectedDownIcon="@Embed('res/create/event_on_shape_mouse_clicked.png')"   />
                           <mx:Button id="Button_CreateEventHandler7" toolTip="Event - Keyboard" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_key_down.png')" downIcon="@Embed('res/create/event_on_key_down-sel.png')" overIcon="@Embed('res/create/event_on_key_down.png')" selectedUpIcon="@Embed('res/create/event_on_key_down-sel.png')" selectedOverIcon="@Embed('res/create/event_on_key_down-sel.png')" selectedDownIcon="@Embed('res/create/event_on_key_down.png')"   />

                           <mx:Button id="Button_CreateEventHandler50" toolTip="Event - Entity Initialized" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_entity_initilized.png')" downIcon="@Embed('res/create/event_on_entity_initilized-sel.png')" overIcon="@Embed('res/create/event_on_entity_initilized.png')" selectedUpIcon="@Embed('res/create/event_on_entity_initilized-sel.png')" selectedOverIcon="@Embed('res/create/event_on_entity_initilized-sel.png')" selectedDownIcon="@Embed('res/create/event_on_entity_initilized.png')"   />
                           <mx:Button id="Button_CreateEventHandler51" toolTip="Event - Entity Updated" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_entity_updated.png')" downIcon="@Embed('res/create/event_on_entity_updated-sel.png')" overIcon="@Embed('res/create/event_on_entity_updated.png')" selectedUpIcon="@Embed('res/create/event_on_entity_updated-sel.png')" selectedOverIcon="@Embed('res/create/event_on_entity_updated-sel.png')" selectedDownIcon="@Embed('res/create/event_on_entity_updated.png')"   />
                           <mx:Button id="Button_CreateEventHandler52" toolTip="Event - Entity Destroyed" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_entity_destroyed.png')" downIcon="@Embed('res/create/event_on_entity_destroyed-sel.png')" overIcon="@Embed('res/create/event_on_entity_destroyed.png')" selectedUpIcon="@Embed('res/create/event_on_entity_destroyed-sel.png')" selectedOverIcon="@Embed('res/create/event_on_entity_destroyed-sel.png')" selectedDownIcon="@Embed('res/create/event_on_entity_destroyed.png')"   />
                           <mx:Button id="Button_CreateEventHandler53" toolTip="Event - 2 Physics Shapes Start Contacting" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_shape_start_contacting.png')" downIcon="@Embed('res/create/event_on_shape_start_contacting-sel.png')" overIcon="@Embed('res/create/event_on_shape_start_contacting.png')" selectedUpIcon="@Embed('res/create/event_on_shape_start_contacting-sel.png')" selectedOverIcon="@Embed('res/create/event_on_shape_start_contacting-sel.png')" selectedDownIcon="@Embed('res/create/event_on_shape_start_contacting.png')"   />
                           <mx:Button id="Button_CreateEventHandler6" toolTip="Event - Timer (World)" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_world_timer.png')" downIcon="@Embed('res/create/event_on_world_timer-sel.png')" overIcon="@Embed('res/create/event_on_world_timer.png')" selectedUpIcon="@Embed('res/create/event_on_world_timer-sel.png')" selectedOverIcon="@Embed('res/create/event_on_world_timer-sel.png')" selectedDownIcon="@Embed('res/create/event_on_world_timer.png')"   />
                           <mx:Button id="Button_CreateEventHandler57" toolTip="Event - Timer (Entity)" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_entity_timer.png')" downIcon="@Embed('res/create/event_on_entity_timer-sel.png')" overIcon="@Embed('res/create/event_on_entity_timer.png')" selectedUpIcon="@Embed('res/create/event_on_entity_timer-sel.png')" selectedOverIcon="@Embed('res/create/event_on_entity_timer-sel.png')" selectedDownIcon="@Embed('res/create/event_on_entity_timer.png')"   />
                           <mx:Button id="Button_CreateEventHandler56" toolTip="Event - Timer (Entity Pair)" focusEnabled="false" fontSize="8" left="5" top="5" width="36" height="36" toggle="true" cornerRadius="0" upIcon="@Embed('res/create/event_on_entity_pair_timer.png')" downIcon="@Embed('res/create/event_on_entity_pair_timer-sel.png')" overIcon="@Embed('res/create/event_on_entity_pair_timer.png')" selectedUpIcon="@Embed('res/create/event_on_entity_pair_timer-sel.png')" selectedOverIcon="@Embed('res/create/event_on_entity_pair_timer-sel.png')" selectedDownIcon="@Embed('res/create/event_on_entity_pair_timer.png')"   />

                        </mx:Tile>
                        <mx:Spacer height="10"/>

                        <mx:Spacer height="100%"/>

                     </mx:Box>
                     <!--mx:Box icon="@Embed('res/create/create-panel-normal.png')" direction="vertical" borderStyle="solid" width="83" height="100%"
                              paddingTop="5" paddingLeft="1" paddingRight="1" paddingBottom="1" textAlign="center"
                              horizontalGap="0" verticalGap="0">
                     </mx:Box-->
                  </mx:TabNavigator>
                  <mx:Box direction="vertical" borderStyle="solid" height="100%"  width="100%"
                     paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
                     horizontalGap="0" verticalGap="0" borderThickness="0" clipContent="true">
                     <mx:Box id="Box_WordView" direction="vertical" borderStyle="none" height="100%" width="100%"
                              paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
                              horizontalScrollPolicy="off" verticalScrollPolicy="off"
                              horizontalGap="0" verticalGap="0" borderThickness="0">
                        <mx:Box id="Box_CustomCommands" direction="horizontal" borderStyle="solid" height="20" width="100%"
                                 paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
                                 horizontalScrollPolicy="off" verticalScrollPolicy="off"
                                 horizontalGap="0" verticalGap="0" borderThickness="1">
                           <mx:Label text=""/>
                        </mx:Box>
                        <mx:Box direction="horizontal" borderStyle="solid" height="100%" width="100%"
                                 paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
                                 horizontalScrollPolicy="off" verticalScrollPolicy="off"
                                 horizontalGap="0" verticalGap="0" borderThickness="1">
                           <ed:WorldView id="MainView" height="100%" width="100%" />
                        </mx:Box>
                     </mx:Box>
                     <mx:Box id="Box_StatusInfoBar" direction="horizontal" borderStyle="solid" height="20" width="100%"
                                 paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
                                 horizontalScrollPolicy="off" verticalScrollPolicy="off"
                                 horizontalGap="0" verticalGap="0" borderThickness="1">
                        <mx:VRule strokeWidth="1" strokeColor="#C0C0C0" height="100%"/>
                        <mx:Label id="Label_EntityDisplayPosition" text="" minWidth="100"/>
                        <mx:VRule strokeWidth="1" strokeColor="#C0C0C0" height="100%"/>
                        <mx:Label id="Label_EntityPhysicsPosition" text="" minWidth="116"/>
                        <mx:VRule strokeWidth="1" strokeColor="#C0C0C0" height="100%"/>
                        <!--
                        <mx:VRule strokeWidth="1" strokeColor="#C0C0C0" height="100%"/>
                        <mx:Label text="Map" click="ShowMiniMap ();"/>
                        -->
                        <mx:ViewStack id="ViewStack_WorldInfo" borderStyle="none" creationPolicy="all" horizontalScrollPolicy="off" verticalScrollPolicy="off" width="100%" height="100%">
                           <mx:HBox id="Box_EditingWorldInfo" borderStyle="none" height="100%" width="100%" horizontalGap="0" verticalGap="0" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderThickness="0">
                              <mx:Label id="Label_MainSelectedEntityInfo" text="" width="100%"/>
                              <mx:Spacer width="100%"/>
                              <mx:VRule strokeWidth="1" strokeColor="#C0C0C0" height="100%"/>
                              <mx:Button id="Button_ZoomOut" click="ZoomOut ()" focusEnabled="false" fontSize="8" left="5" top="5" width="20" height="20" toggle="false" cornerRadius="0" icon="@Embed('res/edit/zoom-out.png')" />
                              <mx:Button id="Button_ZoomIn" click="ZoomIn ()" focusEnabled="false" fontSize="8" left="5" top="5" width="20" height="20" toggle="false" cornerRadius="0" icon="@Embed('res/edit/zoom-in.png')" />
                           </mx:HBox>
                           <mx:HBox id="Box_PlayingWorldInfo" borderStyle="none" height="100%" width="100%" horizontalGap="0" verticalGap="0" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderThickness="0">
                              <mx:Spacer width="100%"/>
                              <mx:VRule strokeWidth="1" strokeColor="#C0C0C0" height="100%"/>
                              <mx:Label id="Label_RunningFps" text="fps: 30.01"/>
                              <mx:VRule strokeWidth="1" strokeColor="#C0C0C0" height="100%"/>
                              <mx:Label id="Label_RunningSteps" text="step: 100"/>
                           </mx:HBox>
                        </mx:ViewStack>
                     </mx:Box>
                  </mx:Box>
               </mx:HBox>
            </mx:VBox>
         </mx:HBox>
         <mx:HBox id="CCatDesignView" borderStyle="solid" height="100%" width="100%"
                  paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
                  horizontalScrollPolicy="off" verticalScrollPolicy="off"
                  horizontalGap="0" verticalGap="0" borderThickness="0"
                  >
            <ed:CollisionManagerView id="CollisionManagerView" height="100%" width="100%"/>
         </mx:HBox>
      </mx:ViewStack>

   </mx:VBox>

   <mx:XML id="ConfigDesignMenuData">
     <root>
        <menuitem label="Config Level Rules ..." data="rules"/>
        <menuitem label="Config Coordinate System ..." data="coordinate"/>
        <menuitem label="Config World Gravity ..." data="gravity"/>
        <menuitem label="Config World Appearance ..." data="appearance"/>
     </root>
   </mx:XML>


   <mx:Script>
        <![CDATA[
            
            import flash.display.InteractiveObject;
            import flash.events.TextEvent;
            import flash.events.ContextMenuEvent;
            import flash.ui.ContextMenu;
            import flash.ui.ContextMenuItem;
            import mx.managers.PopUpManager;
            import mx.events.FlexEvent;
            import mx.events.MenuEvent;
            import mx.events.IndexChangedEvent;
            import mx.controls.Menu;
            import mx.controls.ToolTip;
            
            import com.tapirgames.util.DisplayObjectUtil;
            import com.tapirgames.util.UrlUtil;
            import editor.WorldView;
            import editor.runtime.Runtime;
            import editor.trigger.Lists;
            import common.Define;
            
            private var mConfigDesignMenu:Menu = null;
            private function OnClickConfigDesignButton ():void
            {
               if (mConfigDesignMenu == null)
               {
                  mConfigDesignMenu = Menu.createMenu(Button_ConfigDesign, ConfigDesignMenuData, false);
                  mConfigDesignMenu.labelField="@label";
                  mConfigDesignMenu.addEventListener(MenuEvent.ITEM_CLICK, OnSelectedConfigDesignMemu);
               }
               
               var point:Point = Button_ConfigDesign.localToGlobal (new Point (Button_ConfigDesign.width, Button_ConfigDesign.height));
               
               mConfigDesignMenu.show(point.x, point.y);
            }
            
            private function OnSelectedConfigDesignMemu (event:MenuEvent):void
            {
               if (event.item.@data == "rules")
               {
                  ShowLevelRulesEditDialog ();
               }
               else if (event.item.@data == "coordinate")
               {
                  ShowCoordinateSystemEditDialog ();
               }
               else if (event.item.@data == "gravity")
               {
                  ShowWorldGravityEditDialog ();
               }
               else if (event.item.@data == "appearance")
               {
                  ShowWorldAppearanceEditDialog ();
               }
            } 
            
            private function InitApp ():void
            {
               Runtime.SetActiveView (MainView);
               Runtime.mEditorWorldView = MainView;
               Runtime.mCollisionCategoryView = CollisionManagerView;
               
            //===================================================================================================
               
               ToolTip.maxWidth = 800;
               
            //===================================================================================================
               
               //SelectList_WorldScale.dataProvider = Lists.mWorldPresetScaleList;
               //SelectList_WorldScale.selectedIndex = Lists.SelectedValue2SelectedIndex (Lists.mWorldPresetScaleList, 1.0);
               //SelectList_WorldScale.rowCount = Lists.mWorldPresetScaleList.length;
               
            //===================================================================================================
               
               //MainView.mStatusMessageBar = StatusMessageBar;
               MainView.SetCustomTriggerButtons (mCustomTriggerdButtons);
               
               //--------------------
               
               MainView.mButtonCreateBoxStatic      = Button_CreateBox_Static;
               MainView.mButtonCreateBoxMovable      = Button_CreateBox_Movable;
               MainView.mButtonCreateBoxBreakable      = Button_CreateBox_Breakable;
               MainView.mButtonCreateBoxInfected      = Button_CreateBox_Infected;
               MainView.mButtonCreateBoxUninfected      = Button_CreateBox_Uninfected;
               MainView.mButtonCreateBoxDontinfect      = Button_CreateBox_Dontinfect;
               MainView.mButtonCreateBoxBomb     = Button_CreateBox_Bomb;
               
               MainView.mButtonCreateBallStatic     = Button_CreateBall_Static;
               MainView.mButtonCreateBallMovable     = Button_CreateBall_Movable;
               MainView.mButtonCreateBallBreakable     = Button_CreateBall_Breakable;
               MainView.mButtonCreateBallInfected     = Button_CreateBall_Infected;
               MainView.mButtonCreateBallUninfected     = Button_CreateBall_Uninfected;
               MainView.mButtonCreateBallDontInfect     = Button_CreateBall_DontInfect;
               MainView.mButtonCreateBallBomb     = Button_CreateBall_Bomb;
               
               MainView.mButtonCreatePolygonStatic     = Button_CreatePolygon_Static;
               MainView.mButtonCreatePolygonMovable    = Button_CreatePolygon_Movable;
               MainView.mButtonCreatePolygonBreakable     = Button_CreatePolygon_Breakable;
               MainView.mButtonCreatePolygonInfected     = Button_CreatePolygon_Infected;
               MainView.mButtonCreatePolygonUninfected     = Button_CreatePolygon_Uninfected;
               MainView.mButtonCreatePolygonDontinfect     = Button_CreatePolygon_Dontinfect;
               
               MainView.mButtonCreatePolylineStatic     = Button_CreatePolyline_Static;
               MainView.mButtonCreatePolylineMovable    = Button_CreatePolyline_Movable;
               MainView.mButtonCreatePolylineBreakable     = Button_CreatePolyline_Breakable;
               MainView.mButtonCreatePolylineInfected     = Button_CreatePolyline_Infected;
               MainView.mButtonCreatePolylineUninfected     = Button_CreatePolyline_Uninfected;
               MainView.mButtonCreatePolylineDontinfect     = Button_CreatePolyline_Dontinfect;
               
               MainView.mButtonCreateJointHinge  = Button_CreateJoint_Hinge
               MainView.mButtonCreateJointSlider = Button_CreateJoint_Slider;
               MainView.mButtonCreateJointDistance = Button_CreateJoint_Distance;
               MainView.mButtonCreateJointSpring = Button_CreateJoint_Spring;
               MainView.mButtonCreateJointWeld = Button_CreateJoint_Weld;
               //MainView.mButtonCreateJointHingeSlider = Button_CreateJoint_HingeSlider;
               MainView.mButtonCreateJointDummy = Button_CreateJoint_Dummy;
               
               MainView.mButtonCreateText = Button_CreateText;
               MainView.mButtonCreateGravityController = Button_CreateGravityController;
               MainView.mButtonCreateBall = Button_CreateBall;
               MainView.mButtonCreateBox = Button_CreateBox;
               MainView.mButtonCreatePolygon = Button_CreatePolygon;
               MainView.mButtonCreatePolyline = Button_CreatePolyline;
               MainView.mButtonCreateCamera = Button_CreateCamera;
               MainView.mButtonCreateTextButton = Button_CreateTextButton;
               
               MainView.mButton_CreateCondition = Button_CreateCondition;
               MainView.mButton_CreateConditionDoor = Button_CreateConditionDoor;
               MainView.mButton_CreateTask = Button_CreateTask;
               MainView.mButton_CreateEntityAssigner = Button_CreateInputEntityAssigner;
               MainView.mButton_CreateEntityPairAssigner = Button_CreateInputEntityPairAssigner;
               MainView.mButton_CreateAction = Button_CreateAction;
               MainView.mButton_CreateEventHandler0 = Button_CreateEventHandler0;
               MainView.mButton_CreateEventHandler1 = Button_CreateEventHandler1;
               MainView.mButton_CreateEventHandler2 = Button_CreateEventHandler2;
               MainView.mButton_CreateEventHandler3 = Button_CreateEventHandler3
               MainView.mButton_CreateEventHandler4 = Button_CreateEventHandler4;
               MainView.mButton_CreateEventHandler5 = Button_CreateEventHandler5;
               MainView.mButton_CreateEventHandler6 = Button_CreateEventHandler6;
               MainView.mButton_CreateEventHandler7 = Button_CreateEventHandler7;
               MainView.mButton_CreateEventHandler8 = Button_CreateEventHandler8;
               MainView.mButton_CreateEventHandler50 = Button_CreateEventHandler50;
               MainView.mButton_CreateEventHandler51 = Button_CreateEventHandler51;
               MainView.mButton_CreateEventHandler52 = Button_CreateEventHandler52;
               MainView.mButton_CreateEventHandler53 = Button_CreateEventHandler53
               MainView.mButton_CreateEventHandler56 = Button_CreateEventHandler56;
               MainView.mButton_CreateEventHandler57 = Button_CreateEventHandler57;
               MainView.mButton_CreateEventHandler58 = Button_CreateEventHandler58;
               
               Button_CreateBox_Static.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBox_Movable.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBox_Breakable.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBox_Infected.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBox_Uninfected.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBox_Dontinfect.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBox_Bomb.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               
               Button_CreateBall_Static.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBall_Movable.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBall_Breakable.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBall_Infected.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBall_Uninfected.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBall_DontInfect.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBall_Bomb.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               
               Button_CreatePolygon_Static.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolygon_Movable.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolygon_Breakable.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolygon_Infected.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolygon_Uninfected.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolygon_Dontinfect.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               
               Button_CreatePolyline_Static.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolyline_Movable.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolyline_Breakable.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolyline_Infected.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolyline_Uninfected.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolyline_Dontinfect.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               
               Button_CreateJoint_Hinge.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateJoint_Slider.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateJoint_Distance.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateJoint_Spring.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateJoint_Weld.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               //Button_CreateJoint_HingeSlider.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateJoint_Dummy.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               
               Button_CreateText.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateGravityController.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBall.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateBox.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolygon.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreatePolyline.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateCamera.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateTextButton.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               
               Button_CreateCondition.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateConditionDoor.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateTask.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateInputEntityAssigner.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateInputEntityPairAssigner.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateAction.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler0.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler1.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler2.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler3.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler4.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler5.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler6.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler7.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler8.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler50.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler51.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler52.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler53.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler56.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler57.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               Button_CreateEventHandler58.addEventListener (MouseEvent.CLICK, MainView.OnCreateButtonClick);
               
               MainView.mButtonClone = Button_Clone;
               MainView.mButtonDelete = Button_Delete;
               MainView.mButtonFlipH = Button_FlipH;
               MainView.mButtonFlipV = Button_FlipV;
               MainView.mButtonGlue = Button_Glue;
               MainView.mButtonBreakApart = Button_BreakApart;
               MainView.mButtonSetting = Button_Setting;
               MainView.mButtonMoveToTop = Button_MoveToTop;
               MainView.mButtonMoveToBottom = Button_MoveToBottom;
               MainView.mButtonUndo = Button_Undo;
               MainView.mButtonRedo = Button_Redo;
               MainView.mButtonMouseMoveScene = Button_MouseMoveScene;
               MainView.mButtonMouseSelectGlued = Button_MouseSelectGlued;
               MainView.mButtonMouseSelectSingle = Button_MouseSelectSingle;
               MainView.mButtonMouseMove = Button_MouseMove;
               MainView.mButtonMouseRotate = Button_MouseRotate;
               MainView.mButtonMouseScale = Button_MouseScale;
               
               MainView.mButtonNewDesign = Button_NewDesign;
               MainView.mButtonSaveWorld = Button_SaveDesign;
               MainView.mButtonLoadWorld = Button_OpenDesign;
               
               MainView.mButton_Play = Button_Play;
               MainView.mButton_Stop = Button_Stop;
               
            //===================================================================================================
               
               Button_Clone.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_Delete.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_FlipH.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_FlipV.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_Glue.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_BreakApart.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_Setting.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_MoveToTop.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_MoveToBottom.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_Undo.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_Redo.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_MouseMoveScene.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_MouseSelectGlued.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_MouseSelectSingle.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_MouseMove.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_MouseRotate.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_MouseScale.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               
               Button_NewDesign.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_SaveDesign.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_OpenDesign.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               
               Button_Play.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               Button_Stop.addEventListener (MouseEvent.CLICK, MainView.OnEditButtonClick);
               
               MainView.ShowShapeRectangleSettingDialog = ShowShapeRectangleSettingDialog;
               MainView.ShowShapeCircleSettingDialog = ShowShapeCircleSettingDialog;
               MainView.ShowShapePolygonSettingDialog = ShowShapePolygonSettingDialog;
               MainView.ShowShapePolylineSettingDialog = ShowShapePolylineSettingDialog;
               
               MainView.ShowShapeTextSettingDialog = ShowShapeTextSettingDialog;
               MainView.ShowShapeTextButtonSettingDialog = ShowShapeTextButtonSettingDialog;
               MainView.ShowShapeGravityControllerSettingDialog = ShowShapeGravityControllerSettingDialog;
               
               MainView.ShowHingeSettingDialog = ShowHingeSettingDialog;
               MainView.ShowSliderSettingDialog = ShowSliderSettingDialog;
               MainView.ShowSpringSettingDialog = ShowSpringSettingDialog;
               MainView.ShowDistanceSettingDialog = ShowDistanceSettingDialog;
               MainView.ShowWeldSettingDialog = ShowWeldSettingDialog;
               MainView.ShowDummySettingDialog = ShowDummySettingDialog;
               
               MainView.ShowCameraSettingDialog = ShowCameraSettingDialog;
               
               //MainView.ShowWorldSettingDialog = ShowWorldSettingDialog;
               MainView.ShowWorldSavingDialog = ShowWorldSavingDialog;
               MainView.ShowWorldLoadingDialog = ShowWorldLoadingDialog;
               MainView.ShowWorldQuickLoadingDialog = ShowWorldQuickLoadingDialog;
               
               MainView.ShowPlayCodeLoadingDialog = ShowPlayCodeLoadingDialog;
               MainView.ShowImportSourceCodeDialog = ShowImportSourceCodeDialog;
               
               MainView.ShowEditorCustomCommandSettingDialog = ShowEditorCustomCommandSettingDialog;
               
               MainView.ShowConditionSettingDialog = ShowConditionSettingDialog;
               MainView.ShowActionSettingDialog = ShowActionSettingDialog;
               MainView.ShowEntityAssignerSettingDialog = ShowEntityAssignerSettingDialog;
               MainView.ShowEntityPairAssignerSettingDialog = ShowEntityPairAssignerSettingDialog;
               MainView.ShowEventHandlerSettingDialog = ShowEventHandlerSettingDialog;
               MainView.ShowTimerEventHandlerSettingDialog = ShowTimerEventHandlerSettingDialog;
               MainView.ShowKeyboardEventHandlerSettingDialog = ShowKeyboardEventHandlerSettingDialog;
               MainView.ShowMouseEventHandlerSettingDialog = ShowMouseEventHandlerSettingDialog;
               MainView.ShowContactEventHandlerSettingDialog = ShowContactEventHandlerSettingDialog;
               
               MainView.ShowConditionDoorSettingDialog = ShowConditionDoorSettingDialog;
               MainView.ShowTaskSettingDialog = ShowTaskSettingDialog;
               MainView.ShowConditionSettingDialog = ShowConditionSettingDialog;
               MainView.ShowActionSettingDialog = ShowActionSettingDialog;
               MainView.ShowEventHandlerSettingDialog = ShowEventHandlerSettingDialog;
               MainView.ShowTimerEventHandlerSettingDialog = ShowTimerEventHandlerSettingDialog;
               MainView.ShowKeyboardEventHandlerSettingDialog = ShowKeyboardEventHandlerSettingDialog;
               MainView.ShowMouseEventHandlerSettingDialog = ShowMouseEventHandlerSettingDialog;
               
               MainView.StatusBar_SetMainSelectedEntityInfo = StatusBar_SetMainSelectedEntityInfo;
               MainView.StatusBar_SetMainDisplayPosition = StatusBar_SetMainDisplayPosition
               MainView.StatusBar_SetMainPhysicsPosition = StatusBar_SetMainPhysicsPosition;
               MainView.StatusBar_SetRunningSteps = StatusBar_SetRunningSteps;
               MainView.StatusBar_SetRunningFPS = StatusBar_SetRunningFPS;
            
               MainView.OnPlayingStarted = OnPlayingStarted;
               MainView.OnPlayingStopped = OnPlayingStopped;
            
            //===================================================================================================
               
               DisplayObjectUtil.AppendContextMenuItem (Button_MouseMove, "Move Accurately ...", ShowDialog_MoveSelectedEntitiesAccurately);
               
               DisplayObjectUtil.AppendContextMenuItem (Button_MouseRotate, "Rotate Accurately ...", ShowDialog_RotateSelectedEntitiesAccurately);
               
               DisplayObjectUtil.AppendContextMenuItem (Button_MouseScale, "Scale Accurately ...", ShowDialog_ScaleSelectedEntitiesAccurately);
               
               DisplayObjectUtil.AppendContextMenuItem (Button_MouseMoveScene, "Move Scene Accurately ...", ShowDialog_MoveSceneAccurately);
               
            //===================================================================================================
               
               DisplayObjectUtil.AppendContextMenuItem (Button_NewDesign, "Clear All Entities", ClearAllEntities);
               DisplayObjectUtil.AppendContextMenuItem (Button_NewDesign, "Clear All Entities and Reset Scene", ClearAllEntitiesAndResetScene);
               
               DisplayObjectUtil.AppendContextMenuItem (Button_OpenDesign, "Load Lastest Version Online ...", OnLoadSourceCodeOnline);
               
               DisplayObjectUtil.AppendContextMenuItem (Button_SaveDesign, "Save Online ...", ShowWorldOnlineSavingDialog);
               
         //===============================================================================================================
         //  Collision Manager
         //===============================================================================================================
               
               //
               CollisionManagerView.mButtonCreateCollisionCategory = Button_CreateCollisionCategory;
               CollisionManagerView.mButtonCreateCollisionCategoryFriendLink = Button_CreateCollisionCategoryFriendLink;
               CollisionManagerView.mButtonBreakCollisionCategoryFriendLink = Button_BreakCollisionCategoryFriendLink;
               
               Button_CreateCollisionCategory.addEventListener (MouseEvent.CLICK, CollisionManagerView.OnCreateButtonClick);
               Button_CreateCollisionCategoryFriendLink.addEventListener (MouseEvent.CLICK, CollisionManagerView.OnCreateButtonClick);
               Button_BreakCollisionCategoryFriendLink.addEventListener (MouseEvent.CLICK, CollisionManagerView.OnCreateButtonClick);
               
               CollisionManagerView.mButtonDelete = Button_DeleteCollisionCategory;
               CollisionManagerView.mCheckBoxCollideInternally = CheckBox_CollisionCategory_CollideInternally;
               CollisionManagerView.mCheckBoxDefaultCategory = CheckBox_CollisionCategory_DefaultCategory;
               
               Button_DeleteCollisionCategory.addEventListener (MouseEvent.CLICK, CollisionManagerView.OnEditButtonClick);
               CheckBox_CollisionCategory_CollideInternally.addEventListener (MouseEvent.CLICK, CollisionManagerView.OnEditButtonClick);
               CheckBox_CollisionCategory_DefaultCategory.addEventListener (MouseEvent.CLICK, CollisionManagerView.OnEditButtonClick);
               
               CollisionManagerView.mTextInputName = Text_CollisionCategoryName;
               
               Text_CollisionCategoryName.addEventListener (FlexEvent.ENTER, CollisionManagerView.OnTextInputEnter);
            }
            
            private var mCustomTriggerdButtons:Array = new Array ();
            private function OnCustomTriggerButtonCreated (event:FlexEvent):void
            {
               if (event.target is mx.controls.Button)
               {
                  mCustomTriggerdButtons.push (event.target);
                  
                  DisplayObjectUtil.AppendContextMenuItem (event.target as InteractiveObject, "Load / Replace ...", MainView.OnClickEditorCustomCommand);
               }
            }
            
            private function ShowMiniMap ():void
            {
            }
            
//========================================================================================
// 
//========================================================================================
            
            public function OnPlayingStarted ():void
            {
               ViewStack_PlayStop.selectedChild = Box_Stop;
               Box_WordView.removeChild (Box_CustomCommands);
               Box_WordView.validateNow ();
               
               Box_SwitchViewCommands.enabled = false;
               Box_DesignCommands.enabled = false;
               Box_EntityEditViewCommands_1.enabled = false;
               Box_EntityEditViewCommands_2.enabled = false;
               Box_CreateCommands.enabled = false;
               
               ViewStack_WorldInfo.selectedChild = Box_PlayingWorldInfo;
            }
            
            public function OnPlayingStopped ():void
            {
               ViewStack_PlayStop.selectedChild = Box_Play;
               Box_WordView.addChildAt (Box_CustomCommands, 0);
               Box_WordView.validateNow ();
               
               Box_SwitchViewCommands.enabled = true;
               Box_DesignCommands.enabled = true
               Box_EntityEditViewCommands_1.enabled = true;
               Box_EntityEditViewCommands_2.enabled = true;
               Box_CreateCommands.enabled = true;
               
               ViewStack_WorldInfo.selectedChild = Box_EditingWorldInfo;
            }
            
//========================================================================================
// 
//========================================================================================
            
            private function OnToggleCCatEditView ():void
            {
               if (Button_ToggleCCatEditView.selected)
               {
                  ViewStack_EditView.selectedChild = CCatDesignView;
                  ViewStack_ViewEditCommands.selectedChild = Box_CCatEditViewCommands;
                  
                  Runtime.SetActiveView (CollisionManagerView);
                  CollisionManagerView.SetCollisionManager (Runtime.mEditorWorldView.GetEditorWorld ().GetCollisionManager ());
               }
               else
               {
                  ViewStack_EditView.selectedChild = EntityDesignView;
                  
                  Runtime.SetActiveView (MainView);
                  ViewStack_ViewEditCommands.selectedChild = Box_EntityEditViewCommands;
               }
            }
            
//========================================================================================
// 
//========================================================================================
            
            private function OnClickTutorialLink (event:Event):void
            {
               UrlUtil.PopupPage (Define.EditingTutorialUrl);
            }
            
            private function OnClickShowcasesLink (event:Event):void
            {
               UrlUtil.PopupPage (Define.ShowcasesUrl);
            }
            
            private function OnClickLogo (event:Event):void
            {
               UrlUtil.PopupPage (Define.AboutUrl);
            }
            
            private function OnClickAbout (event:Event):void
            {
               UrlUtil.PopupPage (Define.AboutUrl);
            }

//========================================================================================
// 
//========================================================================================
            
            private function StatusBar_SetMainSelectedEntityInfo (info:String):void
            {
               Label_MainSelectedEntityInfo.htmlText = info;
            }
            
            private function StatusBar_SetMainDisplayPosition (info:String):void
            {
               Label_EntityDisplayPosition.htmlText = info;
            }
            
            private function StatusBar_SetMainPhysicsPosition (info:String):void
            {
               Label_EntityPhysicsPosition.htmlText = info;
            }
            
            private function StatusBar_SetRunningSteps (info:String):void
            {
               Label_RunningSteps.htmlText = info;
            }
            
            private function StatusBar_SetRunningFPS (info:String):void
            {
               Label_RunningFps.htmlText = info;
            }
            
            public function ZoomIn ():void
            {
               if (MainView.ScaleEditorWorld (true))
               {
                  Button_ZoomIn.enabled = false;
               }
               
               Button_ZoomOut.enabled = true;
            }
            
            public function ZoomOut ():void
            {
               if (MainView.ScaleEditorWorld (false))
               {
                  Button_ZoomOut.enabled = false;
               }
               
               Button_ZoomIn.enabled = true;
            }
            
//========================================================================================
// 
//========================================================================================
            
            private function ShowDesignInfoSettingDialog():void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:DesignInfoSettingDialog = new DesignInfoSettingDialog ();
               settingDialog.SetValues (Runtime.mEditorWorldView.GetCurrentWorldDesignInfo ());
               settingDialog.SetConfirmFunc (Runtime.mEditorWorldView.SetCurrentWorldDesignInfo);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowLevelRulesEditDialog ():void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:WorldLevelRulesSettingDialog = new WorldLevelRulesSettingDialog ();
               settingDialog.SetValues (Runtime.mEditorWorldView.GetCurrentWorldLevelRulesInfo ());
               settingDialog.SetConfirmFunc (Runtime.mEditorWorldView.SetCurrentWorldLevelRulesInfo);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowCoordinateSystemEditDialog ():void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:WorldCoordinateSystemSettingDialog = new WorldCoordinateSystemSettingDialog ();
               settingDialog.SetValues (Runtime.mEditorWorldView.GetCurrentWorldCoordinateSystemInfo ());
               settingDialog.SetConfirmFunc (Runtime.mEditorWorldView.SetCurrentWorldCoordinateSystemInfo);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowWorldGravityEditDialog ():void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:WorldGravitySettingDialog = new WorldGravitySettingDialog ();
               settingDialog.SetValues (Runtime.mEditorWorldView.GetCurrentWorldGravityInfo ());
               settingDialog.SetConfirmFunc (Runtime.mEditorWorldView.SetCurrentWorldGravityInfo);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowWorldAppearanceEditDialog ():void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:WorldAppearanceSettingDialog = new WorldAppearanceSettingDialog ();
               settingDialog.SetValues (Runtime.mEditorWorldView.GetCurrentWorldAppearanceInfo ());
               settingDialog.SetConfirmFunc (Runtime.mEditorWorldView.SetCurrentWorldAppearanceInfo);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
//========================================================================================
// 
//========================================================================================
            
            private function OnCloseDialog ():void
            {
               Runtime.SetHasSettingDialogOpened (false);
               stage.focus = stage;
            }
            
            private function ShowShapeRectangleSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               if ( Define.IsBombShape (initialValues.mAiType) )
               {
                  var settingBombDialog:ShapeRectangleBombSettingDialog = new ShapeRectangleBombSettingDialog ();
                  settingBombDialog.SetValues (initialValues);
                  settingBombDialog.SetConfirmFunc (onConfirmFunc);
                  settingBombDialog.SetCloseFunc (OnCloseDialog);
                  PopUpManager.addPopUp (settingBombDialog, MainView, true);
                  PopUpManager.centerPopUp (settingBombDialog);
               }
               else
               {
                  var settingDialog:ShapeRectangleSettingDialog = new ShapeRectangleSettingDialog ();
                  settingDialog.SetValues (initialValues);
                  settingDialog.SetConfirmFunc (onConfirmFunc);
                  settingDialog.SetCloseFunc (OnCloseDialog);
                  PopUpManager.addPopUp (settingDialog, MainView, true);
                  PopUpManager.centerPopUp (settingDialog);
               }
            }
            
            private function ShowShapeCircleSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               if ( Define.IsBombShape (initialValues.mAiType) )
               {
                  var settingBombDialog:ShapeCircleBombSettingDialog = new ShapeCircleBombSettingDialog ();
                  settingBombDialog.SetValues (initialValues);
                  settingBombDialog.SetConfirmFunc (onConfirmFunc);
                  settingBombDialog.SetCloseFunc (OnCloseDialog);
                  PopUpManager.addPopUp (settingBombDialog, MainView, true);
                  PopUpManager.centerPopUp (settingBombDialog);
               }
               else
               {
                  var settingDialog:ShapeCircleSettingDialog = new ShapeCircleSettingDialog ();
                  settingDialog.SetValues (initialValues);
                  settingDialog.SetConfirmFunc (onConfirmFunc);
                  settingDialog.SetCloseFunc (OnCloseDialog);
                  PopUpManager.addPopUp (settingDialog, MainView, true);
                  PopUpManager.centerPopUp (settingDialog);
               }
            }
            
            private function ShowShapePolygonSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:ShapePolygonSettingDialog = new ShapePolygonSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowShapePolylineSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:ShapePolylineSettingDialog = new ShapePolylineSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowShapeTextSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:ShapeTextSettingDialog = new ShapeTextSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowShapeTextButtonSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:ShapeTextButtonSettingDialog = new ShapeTextButtonSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowShapeGravityControllerSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:ShapeGravityControllerSettingDialog = new ShapeGravityControllerSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowHingeSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:JointHingeSettingDialog = new JointHingeSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowSliderSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:JointSliderSettingDialog = new JointSliderSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowSpringSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:JointSpringSettingDialog = new JointSpringSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowDistanceSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:JointDistanceSettingDialog = new JointDistanceSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowWeldSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:JointWeldSettingDialog = new JointWeldSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowDummySettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:JointDummySettingDialog = new JointDummySettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowCameraSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:UtilityCameraSettingDialog = new UtilityCameraSettingDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowConditionSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicConditionEditDialog = new LogicConditionEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowEventHandlerSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicEventHandlerEditDialog = new LogicEventHandlerEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowTimerEventHandlerSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicTimerEventHandlerEditDialog = new LogicTimerEventHandlerEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowKeyboardEventHandlerSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicKeyboardEventHandlerEditDialog = new LogicKeyboardEventHandlerEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowMouseEventHandlerSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicMouseEventHandlerEditDialog = new LogicMouseEventHandlerEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowContactEventHandlerSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicShapeContactEventHandlerEditDialog = new LogicShapeContactEventHandlerEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowActionSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicActionEditDialog = new LogicActionEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowConditionDoorSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicConditionDoorEditDialog = new LogicConditionDoorEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowTaskSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicTaskEditDialog = new LogicTaskEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowEntityAssignerSettingDialog(initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicEntityAssignerEditDialog = new LogicEntityAssignerEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            private function ShowEntityPairAssignerSettingDialog(initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var settingDialog:LogicEntityPairAssignerEditDialog = new LogicEntityPairAssignerEditDialog ();
               settingDialog.SetValues (initialValues);
               settingDialog.SetConfirmFunc (onConfirmFunc);
               settingDialog.SetCloseFunc (OnCloseDialog);
               PopUpManager.addPopUp (settingDialog, MainView, true);
               PopUpManager.centerPopUp (settingDialog);
            }
            
            //private function ShowWorldSettingDialog (initialValues:Object, onConfirmFunc:Function):void
            //{
            //   Runtime.SetHasSettingDialogOpened (true);
            //   
            //   var settingDialog:WorldSettingDialog = new WorldSettingDialog ();
            //   PopUpManager.addPopUp (settingDialog, MainView, true);
            //   PopUpManager.centerPopUp (settingDialog);
            //   settingDialog.SetValues (initialValues);
            //   settingDialog.SetConfirmFunc (onConfirmFunc);
            //   settingDialog.SetCloseFunc (OnCloseDialog);
            //}
            
            private function ShowWorldSavingDialog (initialValues:Object):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:WorldSavingDialog = new WorldSavingDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               PopUpManager.centerPopUp (dialog);
               dialog.SetValues (initialValues);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
            private function ShowWorldLoadingDialog (onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:WorldLoadingDialog = new WorldLoadingDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               PopUpManager.centerPopUp (dialog);
               dialog.SetConfirmFunc (onConfirmFunc);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
            private function ShowWorldQuickLoadingDialog (initialValues:Object, onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:WorldQuickLoadingDialog = new WorldQuickLoadingDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               PopUpManager.centerPopUp (dialog);
               dialog.SetValues (initialValues);
               dialog.SetConfirmFunc (onConfirmFunc);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
            private function ShowPlayCodeLoadingDialog (onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:PlayCodeLoadingDialog = new PlayCodeLoadingDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               PopUpManager.centerPopUp (dialog);
               dialog.SetConfirmFunc (onConfirmFunc);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
            private function ShowImportSourceCodeDialog (onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:WorldImportDialog = new WorldImportDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               
               PopUpManager.centerPopUp (dialog);
               dialog.SetConfirmFunc (onConfirmFunc);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
//========================================================================================
// 
//========================================================================================
            
            private function ShowDialog_MoveSelectedEntitiesAccurately (event:ContextMenuEvent):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:AccurateMoveDialog = new AccurateMoveDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               PopUpManager.centerPopUp (dialog);
               dialog.SetConfirmFunc (OnMoveSelectedEntitiesAccurately);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
            private function OnMoveSelectedEntitiesAccurately (params:Object):void
            {
               MainView.MoveSelectedEntities (params.mOffsetX, params.mOffsetY, true, false);
            }
            
            private function ShowDialog_RotateSelectedEntitiesAccurately (event:ContextMenuEvent):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:AccurateRotateDialog = new AccurateRotateDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               PopUpManager.centerPopUp (dialog);
               dialog.SetConfirmFunc (OnRotateSelectedEntitiesAccurately);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
            private function OnRotateSelectedEntitiesAccurately (params:Object):void
            {
               MainView.RotateSelectedEntities (params.mRotationAngle * Define.kDegrees2Radians, true, false);
            }
            
            private function ShowDialog_ScaleSelectedEntitiesAccurately (event:ContextMenuEvent):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:AccurateScaleDialog = new AccurateScaleDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               PopUpManager.centerPopUp (dialog);
               dialog.SetConfirmFunc (OnScaleSelectedEntitiesAccurately);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
            private function OnScaleSelectedEntitiesAccurately (params:Object):void
            {
               if (params.mScaleRatio >= 0)
                  MainView.ScaleSelectedEntities (params.mScaleRatio, true, false);
            }
            
            private function ShowDialog_MoveSceneAccurately (event:ContextMenuEvent):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:AccurateMoveDialog = new AccurateMoveDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               PopUpManager.centerPopUp (dialog);
               dialog.SetConfirmFunc (OnMoveSceneAccurately);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
            private function OnMoveSceneAccurately (params:Object):void
            {
               MainView.MoveWorldScene (params.mOffsetX, params.mOffsetY);
            }
            
            private function ShowWorldOnlineSavingDialog (event:ContextMenuEvent):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:WorldOnlineSavingDialog = new WorldOnlineSavingDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               PopUpManager.centerPopUp (dialog);
               dialog.SetConfirmFunc (MainView.OnlineSave);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
            //private function OnSaveSourceCodeOnline (event:ContextMenuEvent):void
            //{
            //   MainView.OnlineSave ();
            //}
            
            private function OnLoadSourceCodeOnline (event:ContextMenuEvent):void
            {
               MainView.OnlineLoad ();
            }
            
            private function ClearAllEntities (event:ContextMenuEvent):void
            {
               MainView.ClearAllEntities (true, false);
            }
            
            private function ClearAllEntitiesAndResetScene (event:ContextMenuEvent):void
            {
               MainView.ClearAllEntities (true, true);
            }
            
//========================================================================================
// 
//========================================================================================
            
            private function ShowEditorCustomCommandSettingDialog (onConfirmFunc:Function):void
            {
               Runtime.SetHasSettingDialogOpened (true);
               
               var dialog:EditorCustomCommandSettingDialog = new EditorCustomCommandSettingDialog ();
               PopUpManager.addPopUp (dialog, MainView, true);
               
               PopUpManager.centerPopUp (dialog);
               dialog.SetConfirmFunc (onConfirmFunc);
               dialog.SetCloseFunc (OnCloseDialog);
            }
            
        ]]>
   </mx:Script>
</mx:Application>

