<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component. 
     You cannot run it independently. -->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
      borderStyle="solid" borderThickness="0"
      width="100%" height="100%"
      creationComplete="OnInitPanel()"
      >
   <mx:HBox width="100%">
      <mx:VBox width="44%">
         <mx:HBox width="100%">
            <mx:Spacer width="100%"/>
            <mx:Label id="Label_PosX" text="    X:" textAlign="right" width="50"/>
            <mx:TextInput id="Text_PosX" text="" width="100"/>
            <mx:Spacer width="100%"/>
            <mx:Label id="Label_PosY" text="     Y:" textAlign="right" width="50"/>
         </mx:HBox>
         <mx:HBox width="100%">
            <mx:Spacer width="100%"/>
            <mx:Label id="Label_Scale" text="Scale:" textAlign="right" width="50"/>
            <mx:TextInput id="Text_Scale" text="" width="100"/>
            <mx:Spacer width="100%"/>
            <mx:Spacer width="50"/>
         </mx:HBox>
         <mx:HBox width="100%">
            <mx:Spacer width="100%"/>
            <mx:Label id="Label_Alpha" text="Alpha:" textAlign="right" width="50"/>
            <mx:TextInput id="Text_Alpha" text="" width="100"/>
            <mx:Spacer width="100%"/>
            <mx:Spacer  width="50"/>
         </mx:HBox>
      </mx:VBox>
      <mx:VBox width="56%">
         <mx:HBox width="100%">
            <mx:TextInput id="Text_PosY" text="" width="100"/>
            <mx:Spacer width="100%"/>
            <mx:Label id="Label_Angle" text="Angle:" textAlign="right" width="50"/>
            <mx:TextInput id="Text_Angle" text="" width="100"/>
            <mx:Spacer width="100%"/>
         </mx:HBox>
         <mx:HBox width="100%">
            <mx:CheckBox id="CheckBox_Flipped" label="Flipped" width="100"/>
            <mx:Spacer width="100%"/>
            <mx:Spacer width="50"/>
            <mx:Spacer width="100"/>
            <mx:Spacer width="100%"/>
         </mx:HBox>
         <mx:HBox width="100%">
            <mx:CheckBox id="CheckBox_Visible" label="Visible" width="100"/>
            <mx:Spacer width="100%"/>
            <mx:Spacer width="50"/>
            <mx:CheckBox id="CheckBox_Enabled" label="Enabled" width="100"/>
            <mx:Spacer width="100%"/>
         </mx:HBox>
      </mx:VBox>
   </mx:HBox>


   <mx:Script>
     <![CDATA[       
         
         import common.Define;
         
         private var mInputValues:Object;
         
         private function OnInitPanel ():void
         {
         }
         
         public function SetValues (inputValues:Object):void
         {
            mInputValues = inputValues;
            
            Text_PosX.text = "" + inputValues.mPosX;
            Text_PosY.text = "" + inputValues.mPosY;
            Text_Angle.text = "" + inputValues.mAngle;
            Text_Scale.text = "" + inputValues.mScale;
            CheckBox_Flipped.selected = inputValues.mIsFlipped;
            Text_Alpha.text = "" + inputValues.mAlpha;
            
            CheckBox_Visible.selected = inputValues.mIsVisible;
            CheckBox_Enabled.selected = inputValues.mIsEnabled;
            
            if (inputValues.mPositionNonSense != null && inputValues.mPositionNonSense)
            {
               Label_PosX.enabled = false;
               Text_PosX.enabled = false;
               Label_PosY.enabled = false;
               Text_PosY.enabled = false;
            }
            
            if (inputValues.mRotationNonSense != null && inputValues.mRotationNonSense)
            {
               Label_Angle.enabled = false;
               Text_Angle.enabled = false;
            }
            
            if (inputValues.mScaleNonSense != null && inputValues.mScaleNonSense)
            {
               Label_Scale.enabled = false;
               Text_Scale.enabled = false;
            } 
            
            if (inputValues.mFlippedNonSense != null && inputValues.mFlippedNonSense)
            {
               CheckBox_Flipped.enabled = false;
            } 
            
            if (inputValues.mVisibleNonsense != null && inputValues.mVisibleNonsense)
            {
               Label_Alpha.enabled = false;
               Text_Alpha.enabled = false;
               CheckBox_Visible.enabled = false;
            }
            
            if (inputValues.mEnabledNonsense != null && inputValues.mEnabledNonsense)
            {
               CheckBox_Enabled.enabled = false;
            }
         }
         
         public function GetValues (returnValues:Object):void
         {
            var valuePosX:Number = parseFloat (Text_PosX.text);
            if ( ! isNaN (valuePosX) )
               returnValues.mPosX = valuePosX;
            else
               returnValues.mPosX = mInputValues.mPosX;
            
            var valuePosY:Number = parseFloat (Text_PosY.text);
            if ( ! isNaN (valuePosY) )
               returnValues.mPosY = valuePosY;
            else
               returnValues.mPosY = mInputValues.mPosY;
            
            var valueAngle:Number = parseFloat (Text_Angle.text);
            if ( ! isNaN (valueAngle) )
               returnValues.mAngle = valueAngle;
            else
               returnValues.mAngle = mInputValues.mAngle;
            
            var valueScale:Number = parseFloat (Text_Scale.text);
            if ( ! isNaN (valueScale) )
               returnValues.mScale = valueScale;
            else
               returnValues.mScale = mInputValues.mAngle;
            
            returnValues.mIsFlipped = CheckBox_Flipped.selected;
            
            var alpha:Number = parseFloat (Text_Alpha.text);
            if ( ! isNaN (alpha) )
               returnValues.mAlpha = alpha;
            else
               returnValues.mAlpha = mInputValues.mAlpha;
            
            returnValues.mIsVisible = CheckBox_Visible.selected;
            returnValues.mIsEnabled = CheckBox_Enabled.selected;
         }
         
     ]]>
   </mx:Script>
   
</mx:VBox>