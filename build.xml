<?xml version="1.0"?>
<project name="SolitaireOp" basedir="." default="release">
   
   <property name="dir.flexsdk"        value="D:/sdks/flex_sdk_3" />
    
   
   <property name="dir.src"        value="${basedir}/src" />
   <property name="dir.external"        value="${basedir}/external" />
   <property name="dir.third-party"        value="${basedir}/third-party" />
   <property name="dir.res"        value="${basedir}/res" />
   <property name="dir.libs"        value="${basedir}/libs" />
   <property name="dir.tools"        value="${basedir}/tools" />
   
   <property name="dir.build"      value="${basedir}/.build" /> 
   <property name="dir.build.res"      value="${dir.build}/res" /> 
   <property name="dir.build.res-compiled"      value="${dir.build}/res-compiled" />
   <property name="dir.build.src"      value="${dir.build}/src" /> 
   <property name="dir.release"        value="${basedir}/.release" />
   
   <property name="editor-main-class-name" value="com.meme.app.Suit2d" />
   
   <property name="editor-width" value="730" />
   <property name="editor-height" value="600" />
   
   <property name="player-width" value="600" />
   <property name="player-height" value="600" />
   
   <path id="class-path">
      <fileset dir="${dir.third-party}/java_libs" includes="**/*.jar" />
      <fileset dir="${dir.tools}/editor" includes="**/*.jar" />
   </path>
   
   <pathconvert property="string.class-path" refid="class-path"/>
   
   
   <target name="run-editor">
      <java fork="true" classname="${editor-main-class-name}">
         <classpath>
            <path refid="class-path" />
         </classpath>
      </java>
   </target>
   
   <target name="clean">
      <delete dir="${dir.build}" quiet="true" />
      <delete dir="${dir.release}" quiet="true" />
   </target>
   
   <target name="--compile-resource" depends="clean">
      <delete dir="${dir.build.res}" quiet="true" />
      <mkdir dir="${dir.build.res}" />
      <copy todir="${dir.build.res}" overwrite="true">
         <fileset dir="${dir.res}">
            <exclude name="**/.svn/**"/>
         </fileset>
      </copy>
      <delete dir="${dir.build.res-compiled}" quiet="true" />
      <mkdir dir="${dir.build.res-compiled}" />
      
      <copy todir="${dir.build.res-compiled}" overwrite="true">
         <fileset dir="${dir.build.res}">
             <include name="**/*.bin" />
             <include name="**/*.png" />
             <include name="**/*.jpg" />
         </fileset>
      </copy>
      
      <exec dir="${dir.build.res-compiled}" executable="jrunscript.exe">
         <arg line="-cp ${string.class-path}"/>
         <arg line="-f ${dir.tools}/packager/package.js"/>
         <arg line="res_base_dir=${dir.build.res}"/>
         <arg line="res_compiled_dir=${dir.build.res-compiled}"/>
         <arg line="game_mode=${--game-mode}"/>
         <arg line="suit2d_writer_lib_file=${dir.external}/suit2d_writer_js/suit2d_writer.js"/>
      </exec>
   </target>
   
   <target name="--pre-compile">
      <delete dir="${dir.release}" quiet="true" />
      <delete dir="${dir.build.src}" quiet="true" />
      <mkdir dir="${dir.release}" />
      <mkdir dir="${dir.build.src}" />
      <copy todir="${dir.build.src}/game/${ant.project.name}" overwrite="true">
         <fileset dir="${dir.build.res-compiled}" />
      </copy>
      <copy todir="${dir.build.src}" overwrite="true">
         <fileset dir="${dir.src}/app">
            <exclude name="**/.svn/**"/>
         </fileset>
         <fileset dir="${dir.external}/helper_classes_as3">
            <exclude name="**/.svn/**"/>
         </fileset>
         <fileset dir="${dir.external}/suit2d_loader_as3">
            <exclude name="**/.svn/**"/>
         </fileset>
         <fileset dir="${dir.external}/box2dflash">
            <exclude name="**/.svn/**"/>
         </fileset>
         <fileset dir="${dir.third-party}/mochi_api">
            <exclude name="**/.svn/**"/>
         </fileset>
      </copy>
      <copy todir="${dir.build.src}" overwrite="true">
         <fileset dir="${dir.build.res-compiled}" />
      </copy>
   </target>
   
   <target name="--compile">
      <antcall target="--pre-compile" />
      
      <condition property="special-game-mode">
         <length string="${--game-mode}" when="greater" length="0" />
      </condition>
      <condition property="is-debugging" value="true" else="false">
         <istrue value="${--debug}"/>
      </condition>
      
      <exec dir="${dir.build.src}" executable="mxmlc.exe">
         <arg line="-debug=${--debug}"/>
         <arg line="-define+=Compile::Is_Debugging,${is-debugging}" />
         <arg line="-define+=App::Default_Width,${--width}" />
         <arg line="-define+=App::Default_Height,${--height}" />
         <arg line="-output=${dir.release}/CIEditor.swf"/>
         <arg line="-default-background-color 0xFFFFFF"/>
         <arg line="-default-frame-rate 30"/>
         <arg line="-optimize=true" />
         <arg line="-use-network" />
         <arg line="-default-size ${--width} ${--height}" />
         <arg line="-source-path=${dir.build.src}" />
         <arg line="-locale=en_US" />
         <arg line="-library-path=${dir.flexsdk}/frameworks/locale/en_US" />
         <arg line="-library-path=${dir.third-party}/kongragate_api/KongregateAPI.swc" />
         <arg line="-library-path=${dir.third-party}/mindjolt_api/MindJoltAPI.swc" />
         <arg line="-library-path=${dir.flexsdk}/frameworks/libs" />
         
         <!-- method 1 -->
         <arg line="${dir.build.src}/main.mxml" />
         
         <!-- method 2 -->
         <!--arg line="Main.as" /-->
         
         <!-- method 3 ->
         <arg line="-frame=main_entry,Main" />
         <arg line=" Preloader.as" /-->

      </exec>
      
      <copy tofile="F:/__WebApps/_homepage/PhysicsEditor.swf" file="${dir.release}/CIEditor.swf"  overwrite="true" verbose="true">
      </copy>
   </target>
   
   
<!-- FlexEffect -->

   <target name="compile-resource" depends="clean">
      <antcall target="--compile-resource">
         <param name="--game-mode" value="" />
         
      </antcall>
   </target>
   
   <target name="debug">
      <antcall target="--compile">
         <param name="--debug" value="true" />
         <param name="--game-mode" value="" />
         <param name="--width" value="${editor-width}" />
         <param name="--height" value="${editor-height}" />
      </antcall>
   </target>
   
   <target name="release" depends="compile-resource">
      <antcall target="--compile">
         <param name="--debug" value="false" />
         <param name="--game-mode" value="" />
         <param name="--width" value="${editor-width}" />
         <param name="--height" value="${editor-height}" />
      </antcall>
   </target>
   
   <target name="release2">
      <antcall target="--compile">
         <param name="--debug" value="false" />
         <param name="--game-mode" value="" />
         <param name="--width" value="${editor-width}" />
         <param name="--height" value="${editor-height}" />
      </antcall>
   </target>
   
    <target name="release-editor-wrapper" depends="release">
      <copy tofile="${dir.build.src}/wrapper/CIEditor.swf" file="${dir.release}/CIEditor.swf"  overwrite="true" verbose="true">
      </copy>
      
      <exec dir="${dir.build.src}" executable="mxmlc.exe">
         <arg line="-debug=false"/>
         <arg line="-define+=Compile::Is_Debugging,false" />
         <arg line="-define+=App::Default_Width,${editor-width}" />
         <arg line="-define+=App::Default_Height,${editor-height}" />
         <arg line="-output=${dir.release}/editor.swf"/>
         <arg line="-default-background-color 0xFFFFFF"/>
         <arg line="-default-frame-rate 30"/>
         <arg line="-optimize=true" />
         <arg line="-use-network" />
         <arg line="-default-size ${editor-width} ${editor-height}" />
         <arg line="-source-path=${dir.build.src}" />
         <arg line="-locale=en_US" />
         <arg line="-library-path=${dir.flexsdk}/frameworks/locale/en_US" />
         <arg line="-library-path=${dir.third-party}/kongragate_api/KongregateAPI.swc" />
         <arg line="-library-path=${dir.third-party}/mindjolt_api/MindJoltAPI.swc" />
         <arg line="-library-path=${dir.flexsdk}/frameworks/libs" />
         
         
         <!-- method 1 -->
         <!--
         <arg line="${dir.build.src}/main.mxml" />
         -->
         
         <!-- method 2 -->
         <arg line="wrapper/ColorInfectionEditor.as" />
         
         <!-- method 3 -->
         <!--
         <arg line="-frame=editor,wrapper.ColorInfectionEditor" />
         <arg line=" EditorPreloader.as" />
         -->

      </exec>
      
      <copy tofile="F:/__WebApps/_homepage/PhysicsEditor.swf" file="${dir.release}/editor.swf"  overwrite="true" verbose="true">
      </copy>
      
      <copy tofile="D:/projects/PhysicsEditor/googleapp/src/editor.swf" file="${dir.release}/editor.swf"  overwrite="true" verbose="true">
      </copy>
      
      
      

   </target>
   
    <target name="release-player-wrapper" depends="compile-resource">
    
      <antcall target="--pre-compile" />
      
      <exec dir="${dir.build.src}" executable="mxmlc.exe">
         <arg line="-debug=false"/>
         <arg line="-define+=Compile::Is_Debugging,false" />
         <arg line="-define+=App::Default_Width,${player-width}" />
         <arg line="-define+=App::Default_Height,${player-height}" />
         <arg line="-output=${dir.release}/player.swf"/>
         <arg line="-default-background-color 0xDDDDA0"/>
         <arg line="-default-frame-rate 30"/>
         <arg line="-optimize=true" />
         <arg line="-use-network" />
         <arg line="-default-size ${player-width} ${player-height}" />
         <arg line="-source-path=${dir.build.src}" />
         <arg line="-locale=en_US" />
         <arg line="-library-path=${dir.flexsdk}/frameworks/locale/en_US" />
         <arg line="-library-path=${dir.third-party}/kongragate_api/KongregateAPI.swc" />
         <arg line="-library-path=${dir.third-party}/mindjolt_api/MindJoltAPI.swc" />
         <arg line="-library-path=${dir.flexsdk}/frameworks/libs" />
         
         
         <!-- method 1 -->
         <!--
         <arg line="${dir.build.src}/main.mxml" />
         -->
         
         <!-- method 2 -->
         <arg line="wrapper/ColorInfectionPlayer.as" />
         
         <!-- method 3 -->
         <!--
         <arg line="-frame=editor,wrapper.ColorInfectionEditor" />
         <arg line=" EditorPreloader.as" />
         -->

      </exec>
      
      <copy tofile="F:/__WebApps/_homepage/ColorInfectionPlayer.swf" file="${dir.release}/player.swf"  overwrite="true" verbose="true">
      </copy>

   </target>
   
     



   
   
</project>