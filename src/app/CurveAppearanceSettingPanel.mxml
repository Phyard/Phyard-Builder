<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component. 
     You cannot run it independently. -->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
      borderStyle="solid" borderThickness="0"
      width="100%" height="100%"
      creationComplete="OnInitPanel()"
      >

   <mx:HBox width="100%">
      <mx:Spacer width="30"/>
      <mx:Spacer width="30%"/>
      <mx:CheckBox id="CheckBox_IsCiShape" label="Is C.I. Shape" width="22%" click="OnAiTypeSelectListClick()"/>
   </mx:HBox>

   <mx:HBox width="100%">
      <mx:Spacer width="30"/>
      <mx:Label id="Label_AiType" text="C.I. Shape Type:" textAlign="right" width="30%"/>
      <mx:ComboBox id="SelectList_AiType" rowCount="10"/>
   </mx:HBox>

   <mx:HRule  strokeWidth="1" strokeColor="#C0C0C0" width="100%"/>

   <mx:HBox width="100%">
      <mx:Spacer width="30"/>
      <mx:Label id="Label_Opacity" text="Opacity:" textAlign="right" width="30%"/>
      <mx:NumericStepper id="NumericStepper_Opacity" stepSize="1" minimum="0" maximum="100" value="100" width="80" />
      <mx:Label text="(0-100)" textAlign="left"/>
   </mx:HBox>

   <mx:HBox width="100%">
      <mx:Spacer width="30"/>
      <mx:Label id="Label_CurveThickness" text="Thickness:" textAlign="right" width="30%"/>
      <mx:NumericStepper id="NumericStepper_CurveThickness" stepSize="1" minimum="0" maximum="255" value="1" width="80" />
      <mx:Label text="(pixels)" textAlign="left"/>
   </mx:HBox>

   <mx:HBox width="100%">
      <mx:Spacer width="30"/>
      <mx:Label id="Label_BackgroundColor" text="Color:" textAlign="right" width="30%"/>
      <mx:ColorPicker id="ColorPicker_BackgroundColor" showTextField="true" selectedColor="0x000000"/>
   </mx:HBox>

  <mx:Script>
      <![CDATA[       
         
         import common.Define;
         
         private var mInputValues:Object;
         
         private function OnInitPanel ():void
         {
            var dp:Array = new Array ();
            dp.push({label:"Static", data:Define.ShapeAiType_Static});
            dp.push({label:"Movable", data:Define.ShapeAiType_Movable});
            dp.push({label:"Breakable", data:Define.ShapeAiType_Breakable});
            dp.push({label:"Infected", data:Define.ShapeAiType_Infected});
            dp.push({label:"Uninfected", data:Define.ShapeAiType_Uninfected});
            dp.push({label:"DontInfect", data:Define.ShapeAiType_DontInfect});
            SelectList_AiType.dataProvider = dp;
         }
         
         private function OnAiTypeSelectListClick ():void
         {
            if (CheckBox_IsCiShape.selected)
            {
               SelectList_AiType.enabled = true;
               Label_AiType.enabled = true;
               
               Label_Opacity.enabled = false;
               NumericStepper_Opacity.enabled = false;
               
               Label_BackgroundColor.enabled = false;
               ColorPicker_BackgroundColor.enabled = false;
            }
            else
            {
               SelectList_AiType.enabled = false;
               Label_AiType.enabled = false;
               
               Label_Opacity.enabled = true;
               NumericStepper_Opacity.enabled = true;
               
               Label_BackgroundColor.enabled = true;
               ColorPicker_BackgroundColor.enabled = true;
            }
         }
         
         public function SetValues (inputValues:Object):void
         {
            CheckBox_IsCiShape.selected = inputValues.mAiType >= 0;
            SelectList_AiType.selectedIndex = inputValues.mAiType;
            
            NumericStepper_Opacity.value = inputValues.mTransparency;
            ColorPicker_BackgroundColor.selectedColor = inputValues.mBackgroundColor;
            NumericStepper_CurveThickness.value = inputValues.mCurveThickness;
            
            OnAiTypeSelectListClick ();
         }
         
         public function GetValues (returnValues:Object):void
         {
            returnValues.mAiType = CheckBox_IsCiShape.selected && SelectList_AiType.selectedItem != null ? SelectList_AiType.selectedItem.data : Define.ShapeAiType_Unknown;
            
            returnValues.mTransparency = NumericStepper_Opacity.value;
            returnValues.mBackgroundColor = ColorPicker_BackgroundColor.selectedColor;
            returnValues.mCurveThickness = NumericStepper_CurveThickness.value;
         }
         
     ]]>
   </mx:Script>

</mx:VBox>