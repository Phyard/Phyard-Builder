<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component. 
     You cannot run it independently. -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*"
    title="Coordinate System Setting" width="600"  creationComplete="OnInitPanel()">

    <mx:HBox width="100%" borderStyle="solid" borderThickness="1" paddingTop="10" paddingBottom="10">
      <mx:Spacer width="100%"/>
      <mx:VBox>
         <mx:Label text="Gravity Accelation Magnitude:" textAlign="right"/>
         <mx:Label text="Gravity Accelation Angle:" textAlign="right"/>
      </mx:VBox>
      <mx:VBox>
         <mx:HBox>
            <mx:TextInput id="Text_GravityAccelationMagnitude" width="100" />
         </mx:HBox>
         <mx:HBox>
            <mx:TextInput id="Text_GravityAccelationAngle" width="100" />
         </mx:HBox>
      </mx:VBox>
      <mx:Spacer width="100%"/>
   </mx:HBox>
   
   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:Button label="OK" click="OnClickOkButton ();"/>
      <mx:Spacer width="30"/>
      <mx:Button label="Cancel" click="OnClickCancelButton ();"/>
      <!--
      <mx:Spacer width="30"/>
      <mx:Button label="Default" click="OnClickDefaultButton ();"/>
      -->
      <mx:Spacer width="100%"/>
   </mx:HBox>


   <mx:Script>
      <![CDATA[       
         
         import mx.events.MenuEvent;
         import mx.managers.PopUpManager;
         import mx.controls.Menu;
         
         import common.Define;
         
         private var OnConfirm:Function = null;
         private var OnClose:Function = null;
         
         private var mParams:Object;
         
         public function SetValues (initialValues:Object):void
         {
            mParams = initialValues;            
         }
         
         private function OnInitPanel ():void
         {
            Text_GravityAccelationMagnitude.text = mParams.mDefaultGravityAccelerationMagnitude;
            Text_GravityAccelationAngle.text = mParams.mDefaultGravityAccelerationAngle;
         }
         
         public function SetConfirmFunc (onConfirm:Function):void
         {
            OnConfirm = onConfirm;
         }
         
         public function SetCloseFunc (onClose:Function):void
         {
            OnClose = onClose;
         }
         
         private function OnClickOkButton():void 
         {
            var magnitude:Number = parseFloat (Text_GravityAccelationMagnitude.text);
            if (! isNaN (magnitude))
                mParams.mDefaultGravityAccelerationMagnitude = magnitude;
            
            var angle:Number = parseFloat (Text_GravityAccelationAngle.text);
            if (! isNaN (angle))
               mParams.mDefaultGravityAccelerationAngle = angle;
            
            PopUpManager.removePopUp(this);
             
            if (OnClose != null)
               OnClose ();
            
            if (OnConfirm != null)
               OnConfirm (mParams);
         }
         
         private function OnClickCancelButton():void 
         {
             PopUpManager.removePopUp(this);
             
             if (OnClose != null)
               OnClose ();
         }
         
     ]]>
   </mx:Script>



</mx:TitleWindow>