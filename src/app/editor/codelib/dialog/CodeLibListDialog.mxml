<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<container:ResizableTitleWindow xmlns:container="editor.display.container.*"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:codelib="editor.codelib.dialog.*"
    title="Code Library Manager"
    width="700" height="500"
    paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
    showCloseButton="true"
    creationComplete="InitDialog ();"
    close="HideCodeLibListDialog ();"
    >

   <mx:VBox backgroundColor="0xE0E0E0" borderStyle="solid" width="100%" height="100%"
            horizontalScrollPolicy="off" verticalScrollPolicy="off"
            horizontalGap="0" verticalGap="0" borderThickness="0"
            >
      <mx:HBox id="Box_Commands" width="100%" verticalAlign="middle" paddingLeft="5" paddingRight="5" paddingTop="3" paddingBottom="3" horizontalGap="1" verticalGap="0">
         <mx:Spacer width="2"/>
         <!--
         <mx:Button id="Button_CreatePureFunction" toolTip="New Pure Function" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="true" cornerRadius="0" disabledIcon="@Embed('../../../res/function/create-function-disabled.png')" selectedDisabledIcon="@Embed('../../../res/function/create-function-disabled.png')" upIcon="@Embed('../../../res/function/create-function-pure.png')" downIcon="@Embed('../../../res/function/create-function-pure-sel.png')" overIcon="@Embed('../../../res/function/create-function-pure.png')" selectedUpIcon="@Embed('../../../res/function/create-function-pure-sel.png')" selectedOverIcon="@Embed('../../../res/function/create-function-pure-sel.png')" selectedDownIcon="@Embed('../../../res/function/create-function-pure.png')"   />
         <mx:Button id="Button_CreateDirtyFunction" toolTip="New Design-Dependent Function" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="true" cornerRadius="0" disabledIcon="@Embed('../../../res/function/create-function-disabled.png')" selectedDisabledIcon="@Embed('../../../res/function/create-function-disabled.png')" upIcon="@Embed('../../../res/function/create-function-dirty.png')" downIcon="@Embed('../../../res/function/create-function-dirty-sel.png')" overIcon="@Embed('../../../res/function/create-function-dirty.png')" selectedUpIcon="@Embed('../../../res/function/create-function-dirty-sel.png')" selectedOverIcon="@Embed('../../../res/function/create-function-dirty-sel.png')" selectedDownIcon="@Embed('../../../res/function/create-function-dirty.png')"   />
         -->
         <mx:Button id="Button_CreateDirtyFunction" toolTip="New Function" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="true" cornerRadius="0" disabledIcon="@Embed('../../../res/function/create-function-disabled.png')" selectedDisabledIcon="@Embed('../../../res/function/create-function-disabled.png')" upIcon="@Embed('../../../res/function/create-function-dirty.png')" downIcon="@Embed('../../../res/function/create-function-dirty-sel.png')" overIcon="@Embed('../../../res/function/create-function-dirty.png')" selectedUpIcon="@Embed('../../../res/function/create-function-dirty-sel.png')" selectedOverIcon="@Embed('../../../res/function/create-function-dirty-sel.png')" selectedDownIcon="@Embed('../../../res/function/create-function-dirty.png')"   />
         <mx:Button id="Button_CreateType" toolTip="New Class" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="true" cornerRadius="0" disabledIcon="@Embed('../../../res/function/create-class-disabled.png')" selectedDisabledIcon="@Embed('../../../res/function/create-class-disabled.png')" upIcon="@Embed('../../../res/function/create-class.png')" downIcon="@Embed('../../../res/function/create-class-sel.png')" overIcon="@Embed('../../../res/function/create-class.png')" selectedUpIcon="@Embed('../../../res/function/create-class-sel.png')" selectedOverIcon="@Embed('../../../res/function/create-class-sel.png')" selectedDownIcon="@Embed('../../../res/function/create-class.png')"   />
         <mx:Button id="Button_CreatePackage" toolTip="New Package" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="true" cornerRadius="0" disabledIcon="@Embed('../../../res/function/create-package-disabled.png')" selectedDisabledIcon="@Embed('../../../res/function/create-package-disabled.png')" upIcon="@Embed('../../../res/function/create-package.png')" downIcon="@Embed('../../../res/function/create-package-sel.png')" overIcon="@Embed('../../../res/function/create-package.png')" selectedUpIcon="@Embed('../../../res/function/create-package-sel.png')" selectedOverIcon="@Embed('../../../res/function/create-package-sel.png')" selectedDownIcon="@Embed('../../../res/function/create-package.png')"   />
         <mx:Spacer width="30"/>
         <mx:Button id="Button_DeleteFunctionAsset" toolTip="Delete" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0" icon="@Embed('../../../res/command/command-delete.png')" disabledIcon="@Embed('../../../res/command/command-delete-disabled.png')" />
         <mx:Spacer width="30"/>
         <mx:Button id="Button_SettingFunction" toolTip="Edit Code Snippet" focusEnabled="false" fontSize="8"  width="27" height="27" cornerRadius="0" icon="@Embed('../../../res/function/command-setting.png')" disabledIcon="@Embed('../../../res/function/command-setting-disabled.png')" />
         <mx:Spacer width="30"/>
         <mx:Label id="Label_FunctionAssetName" text="Name:" textAlign="right"/>
         <mx:TextInput id="Text_FunctionAssetName" text="" width="200" enter="stage.focus = panelCodeLibList;" focusIn="EditorContext.GetSingleton ().SetHasInputFocused (true);" focusOut="EditorContext.GetSingleton ().SetHasInputFocused (false);"/>
         <mx:Spacer width="10"/>
         <mx:Spacer width="100%"/>
         <mx:Spacer width="10"/>
         <mx:HBox id="Box_EditVariableSpaceCommands" paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0" horizontalGap="1" verticalGap="0" borderThickness="0">
            <mx:Button id="Button_EditCustomEntityProperties" toolTip="Edit Custom Entity Properties (For Current Scene)" click="OnEditEntityVariables ();" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0"  icon="@Embed('../../../res/action/big-custom-entity-variables.png')"/>
            <mx:Button id="Button_EditGlobalProperties" toolTip="Edit Global Properties (For Current Scene)" focusEnabled="false" click="OnEditGlobalVariables ();" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0"  icon="@Embed('../../../res/action/big-scene-global-variables.png')"/>
            <mx:Spacer width="10"/>
            <!--
            <mx:Button id="Button_EditCommonCustomEntityProperties" toolTip="Edit Common Custom Entity Properties (For All Scenes)" click="OnEditCommonEntityVariables ();" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0"  icon="@Embed('../../../res/action/big-common-custom-entity-variables.png')"/>
            <mx:Button id="Button_EditCommonGlobalProperties" toolTip="Edit Common Global Properties (For All Scenes)" click="OnEditCommonGlobalVariables ();" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0"  icon="@Embed('../../../res/action/big-common-global-variables.png')"/>
            -->
            <mx:Button id="Button_EditWorldGlobalVariables" toolTip="Edit World Global Variables" click="OnEditWorldVariables ();" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0"  icon="@Embed('../../../res/action/big-world-global-variables.png')"/>
            <mx:Button id="Button_EditGameSaveVariables" toolTip="Edit Game Save Variables" click="OnEditGameSaveVariables ();" focusEnabled="false" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0"  icon="@Embed('../../../res/action/big-game-save-variables.png')"/>
         </mx:HBox>
         <mx:Spacer width="2"/>
      </mx:HBox>
      <mx:VBox id="Box_CCatListing" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
         <codelib:CodeLibListPanel id="panelCodeLibList" width="100%" height="100%"/>
      </mx:VBox>
   </mx:VBox>

   <mx:Script>
      <![CDATA[

         import flash.events.TextEvent;
         import flash.events.ContextMenuEvent;
         import flash.ui.ContextMenu;
         import flash.ui.ContextMenuItem;
         import mx.managers.PopUpManager;
         import mx.events.FlexEvent;
         import mx.events.MenuEvent;
         import flash.events.KeyboardEvent;
         import mx.events.IndexChangedEvent;
         import mx.controls.Menu;
         import mx.controls.ToolTip;
         import mx.controls.Button;
         
         import com.tapirgames.util.DisplayObjectUtil;
         
         import editor.EditorContext;

      // static functions
         
         public static function ShowCodeLibListDialog (OnItemPicked:Function = null):void
         {
            if (EditorContext.GetSingleton ().mCodeLibListDialog == null)
            {
               EditorContext.GetSingleton ().mCodeLibListDialog = new CodeLibListDialog ();
            }
            
            EditorContext.GetSingleton ().mCodeLibListDialog.SetAsCurrentFocusedTitleWindow ();
            
            if (EditorContext.GetSingleton ().mCodeLibListDialog.parent != null) // OnItemPicked must be null
            {
               PopUpManager.bringToFront (EditorContext.GetSingleton ().mCodeLibListDialog);
            }
            else
            {
               PopUpManager.addPopUp (EditorContext.GetSingleton ().mCodeLibListDialog, EditorContext.GetEditorApp (), true || OnItemPicked != null);
               PopUpManager.centerPopUp (EditorContext.GetSingleton ().mCodeLibListDialog);
            }
            
            //EditorContext.GetSingleton ().SetHasSettingDialogOpened (true); // bug: will prevent functions's setting dialog pop up
            EditorContext.GetSingleton ().mCodeLibListDialog.GetCodeLibListPanel ().SetCodeLibManager (EditorContext.GetEditorApp ().GetSceneEditDialog ().GetCurrentSceneInEditing ().GetCodeLibManager ());
            
            if (OnItemPicked != null)
            {
               EditorContext.GetSingleton ().mCodeLibListDialog.mInPickingMode = true;
               
               EditorContext.GetSingleton ().mCodeLibListDialog.GetCodeLibListPanel ().EnterPickAssetIntent (OnItemPicked, EndPickingMode);
            }
         }
         
         public static function HideCodeLibListDialog ():void
         {
            //EditorContext.GetSingleton ().SetHasSettingDialogOpened (false);
            if (EditorContext.GetSingleton ().mCodeLibListDialog.mInPickingMode)
            {
               EndPickingMode ();
            }
            else
            {
               PopUpManager.removePopUp (EditorContext.GetSingleton ().mCodeLibListDialog);
            }
         }
         
         public static function StartPickingMode (OnItemPicked:Function):void
         {
            if (EditorContext.GetSingleton ().mCodeLibListDialog != null)
            {
               PopUpManager.removePopUp (EditorContext.GetSingleton ().mCodeLibListDialog);
            }
            
            ShowCodeLibListDialog (OnItemPicked);
         }
         
         public static function EndPickingMode ():void
         {
            if (EditorContext.GetSingleton ().mCodeLibListDialog != null)
            {
               EditorContext.GetSingleton ().mCodeLibListDialog.mInPickingMode = false;
               
               PopUpManager.removePopUp(EditorContext.GetSingleton ().mCodeLibListDialog);
            
               EditorContext.GetSingleton ().mCodeLibListDialog.GetCodeLibListPanel ().ExitPickAssetIntent ();
            }
         }
         
      //======================================================
         
         public function GetCodeLibListPanel ():CodeLibListPanel
         {
            return panelCodeLibList;
         }
      
         override protected function CanBeSetAsCurrentFocusedTitleWindow ():Boolean
         {
            return false;
         }
         
      //======================================================
      
         internal var mInPickingMode:Boolean = false;
         
         private function InitDialog ():void
         {
            // 
            //panelCodeLibList.mButtonCreatePureFunction = Button_CreatePureFunction;
            panelCodeLibList.mButtonCreateDirtyFunction = Button_CreateDirtyFunction;
            panelCodeLibList.mButtonCreatePackage = Button_CreatePackage;
            panelCodeLibList.mButtonCreateType = Button_CreateType;
            
            //Button_CreatePureFunction.addEventListener (MouseEvent.CLICK, panelCodeLibList.OnCreateButtonClick);
            Button_CreateDirtyFunction.addEventListener (MouseEvent.CLICK, panelCodeLibList.OnCreateButtonClick);
            Button_CreatePackage.addEventListener (MouseEvent.CLICK, panelCodeLibList.OnCreateButtonClick);
            Button_CreateType.addEventListener (MouseEvent.CLICK, panelCodeLibList.OnCreateButtonClick);
            
            panelCodeLibList.mButtonDelete = Button_DeleteFunctionAsset;
            panelCodeLibList.mButtonSetting = Button_SettingFunction;
            
            Button_DeleteFunctionAsset.addEventListener (MouseEvent.CLICK, panelCodeLibList.OnEditButtonClick);
            Button_SettingFunction.addEventListener (MouseEvent.CLICK, panelCodeLibList.OnEditButtonClick);
            
            panelCodeLibList.mLabelName = Label_FunctionAssetName;
            panelCodeLibList.mTextInputName = Text_FunctionAssetName;
            
            Text_FunctionAssetName.addEventListener (FlexEvent.ENTER, panelCodeLibList.OnTextInputEnter);
            
            DisplayObjectUtil.AppendContextMenuItem (Box_EditVariableSpaceCommands, "Edit Scene Session Variables ...", OnEditSessionVariables, false);
            //DisplayObjectUtil.AppendContextMenuItem (Box_EditVariableSpaceCommands, "Edit World Global Variables ...", OnEditWorldVariables, true);
            //DisplayObjectUtil.AppendContextMenuItem (Box_EditVariableSpaceCommands, "Edit Game Save Variables ...", OnEditGameSaveVariables, false);
            DisplayObjectUtil.AppendContextMenuItem (Box_EditVariableSpaceCommands, "Edit Common Custom Entity Properties (For All Scenes) ...", OnEditCommonEntityVariables, true);
            DisplayObjectUtil.AppendContextMenuItem (Box_EditVariableSpaceCommands, "Edit Common Global Properties (For All Scenes) ...", OnEditCommonGlobalVariables, false);
         }
            
      //==========================================================

         private function OnEditSessionVariables (event:Event = null):void
         {
            EditorContext.ShowVariableSpaceEditDialog (this, GetCodeLibListPanel ().GetCodeLibManager ().GetSessionVariableSpace (), null);
         }
         
         private function OnEditGlobalVariables ():void
         {
            EditorContext.ShowVariableSpaceEditDialog (this, GetCodeLibListPanel ().GetCodeLibManager ().GetGlobalVariableSpace (), null);
         }

         private function OnEditEntityVariables ():void
         {
            EditorContext.ShowVariableSpaceEditDialog (this, GetCodeLibListPanel ().GetCodeLibManager ().GetEntityVariableSpace (), null);
         }
         
         private function OnEditCommonGlobalVariables (event:Event = null):void
         {
            EditorContext.ShowVariableSpaceEditDialog (this, EditorContext.GetEditorApp ().GetWorld ().GetCommonSceneGlobalVariableSpace (), null);
         }

         private function OnEditCommonEntityVariables (event:Event = null):void
         {
            EditorContext.ShowVariableSpaceEditDialog (this, EditorContext.GetEditorApp ().GetWorld ().GetCommonCustomEntityVariableSpace (), null);
         }
         
         private function OnEditWorldVariables (event:Event = null):void
         {
            EditorContext.ShowVariableSpaceEditDialog (this, EditorContext.GetEditorApp ().GetWorld ().GetWorldVariableSpace (), null);
         }

         private function OnEditGameSaveVariables (event:Event = null):void
         {
            EditorContext.ShowVariableSpaceEditDialog (this, EditorContext.GetEditorApp ().GetWorld ().GetGameSaveVariableSpace (), null);
         }
         
     ]]>
   </mx:Script>



</container:ResizableTitleWindow>
