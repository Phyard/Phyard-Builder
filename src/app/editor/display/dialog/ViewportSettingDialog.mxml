<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="editor.display.dialog.*"
    title="Viewport And Camera Setting" width="600" creationComplete="OnInitPanel()">

    <mx:HBox width="100%" borderStyle="solid" borderThickness="1" paddingTop="10" paddingBottom="10">
      <mx:Spacer width="100%"/>
         <mx:VBox width="100%">
            <mx:HBox width="100%" verticalAlign="middle">
               <mx:CheckBox id="CheckBox_ShowPlayBar" label="Use Default Skin" click="OnShowPlayBarClick ()"/>
            </mx:HBox>
            <mx:VBox id="Box_PlayBarOptions" width="100%">
               <mx:RadioButtonGroup id="RadioButtonGroup_SkinType" itemClick="OnSkinTypeRatioClick ()"/>
               <mx:HBox width="100%">
                  <mx:HBox width="50%" horizontalAlign="left">
                     <mx:Spacer width="16"/>
                     <mx:RadioButton groupName="RadioButtonGroup_SkinType" id="SkinType_TopBar" label="Use Top Bar Skin"/>
                  </mx:HBox>
                  <mx:HBox id="Box_TopBarBackground" horizontalAlign="left">
                     <mx:Spacer width="16"/>
                     <mx:Label text="Background Color:" />
                     <mx:ColorPicker id="ColorPicker_PlayBarColor" showTextField="true" selectedColor="0x606060"/>
                  </mx:HBox>
               </mx:HBox>
               <mx:HBox width="100%">
                  <mx:HBox width="50%" horizontalAlign="left">
                     <mx:Spacer width="16"/>
                     <mx:RadioButton groupName="RadioButtonGroup_SkinType" id="SkinType_Overlay" label="Use Overlay Skin"/>
                  </mx:HBox>
                  <mx:HBox horizontalAlign="left">
                  </mx:HBox>
               </mx:HBox>
               <mx:HBox width="100%">
                  <mx:HBox width="50%" horizontalAlign="left">
                     <mx:Spacer width="16"/>
                     <mx:CheckBox id="CheckBox_ShowSpeedAdjustor" label="Show Speed Adjustor  "/>
                  </mx:HBox>
                  <mx:HBox horizontalAlign="left">
                     <mx:Spacer width="16"/>
                     <mx:CheckBox id="CheckBox_ShowScaleAdjustor" label="Show Scale Adjustor"/>
                  </mx:HBox>
               </mx:HBox>
               <mx:HBox width="100%">
                  <mx:HBox horizontalAlign="left">
                     <mx:Spacer width="16"/>
                     <mx:CheckBox id="CheckBox_ShowSoundController" label="Show Sound Controller"/>
                  </mx:HBox>
                  <mx:HBox width="50%" horizontalAlign="left">
                     <mx:Spacer width="16"/>
                     <mx:CheckBox id="CheckBox_ShowHelpButton" label="Show Help Button"/>
                  </mx:HBox>
               </mx:HBox>
            </mx:VBox>
            <mx:HBox width="100%" verticalAlign="middle">
               <mx:CheckBox id="CheckBox_ShowLevelFinishedDialog" label="Use Default Level Finished Dialog"/>
            </mx:HBox>

            <mx:HRule  strokeWidth="1" strokeColor="0xC0C0C0" width="100%"/>

            <mx:HBox width="100%" horizontalAlign="left">
               <mx:Label text="Preferred Viewport Size (width x height by pixels):" />
            </mx:HBox>
            <mx:RadioButtonGroup id="RadioButtonGroup_CustomSize" itemClick="OnCustomSizeRatioClick ()"/>
            <mx:HBox width="100%">
               <mx:HBox width="50%" horizontalAlign="left">
                  <mx:Spacer width="16"/>
                  <mx:RadioButton groupName="RadioButtonGroup_CustomSize" id="RadioButton_500x500" label="500x500"/>
               </mx:HBox>
               <mx:HBox width="50%" horizontalAlign="left">
                  <mx:Spacer width="16"/>
                  <mx:RadioButton groupName="RadioButtonGroup_CustomSize" id="RadioButton_600x600" label="600x600"/>
               </mx:HBox>
            </mx:HBox>
            <mx:HBox width="100%" horizontalAlign="left">
               <mx:Spacer width="16"/>
               <mx:RadioButton groupName="RadioButtonGroup_CustomSize" id="RadioButton_CustomSize" label="Custom Size:"/>
               <mx:HBox id="Box_CustomSize" width="100%" horizontalAlign="left">
                  <mx:Spacer width="10"/>
                  <mx:NumericStepper id="NumericStepper_CustomWidth" stepSize="1" width="56" />
                  <mx:Label text="x" width="12" />
                  <mx:NumericStepper id="NumericStepper_CustomHeight" stepSize="1" width="56" />
               </mx:HBox>
            </mx:HBox>
            <mx:HBox id="RadioButton_CustomSizeHelp" width="100%" horizontalAlign="left">
               <mx:Spacer width="100%"/>
               <mx:Label text="(Max size is 1024x1024 and min size is 50x50)"/>
               <mx:Spacer width="100%"/>
            </mx:HBox>
            <mx:HBox width="100%">
               <mx:Spacer width="20"/>
               <mx:HBox width="50%" horizontalAlign="left">
                  <mx:CheckBox id="CheckBox_AnyViewportSize" label="Self Adaptive (occupy full space)"/>
               </mx:HBox>
            </mx:HBox>

            <mx:HRule  strokeWidth="1" strokeColor="0xC0C0C0" width="100%"/>

            <mx:HBox width="100%" horizontalAlign="left">
               <mx:Label text="Enable Camera Rotating:" textAlign="left"/>
               <mx:RadioButtonGroup id="RadioButtonGroup_EnableCameraRotating"/>
               <mx:RadioButton groupName="RadioButtonGroup_EnableCameraRotating" id="RadioButton_EnableCameraRotatingYes" label="Yes"/>
               <mx:RadioButton groupName="RadioButtonGroup_EnableCameraRotating" id="RadioButton_EnableCameraRotatingNo" label="No"/>
            </mx:HBox>

         </mx:VBox>
      <mx:Spacer width="100%"/>
   </mx:HBox>

   <mx:Spacer height="5"/>

   <mx:HBox width="100%">
      <mx:Spacer width="100%"/>
      <mx:Button label="OK" click="OnClickOkButton ();"/>
      <mx:Spacer width="30"/>
      <mx:Button label="Cancel" click="OnClickCancelButton ();"/>
      <!--
      <mx:Spacer width="30"/>
      <mx:Button label="Default" click="OnClickDefaultButton ();"/>
      -->
      <mx:Spacer width="100%"/>
   </mx:HBox>


   <mx:Script>
      <![CDATA[

         import mx.events.MenuEvent;
         import mx.managers.PopUpManager;
         import mx.controls.Menu;
         
         import common.ViewerDefine;
         import common.Define;

         private var OnConfirm:Function = null;
         private var OnClose:Function = null;

         private var mParams:Object;

         public function SetValues (initialValues:Object):void
         {
            mParams = initialValues;
         }

         private function OnInitPanel ():void
         {
            ColorPicker_PlayBarColor.selectedColor = mParams.mPlayBarColor;

            CheckBox_ShowPlayBar.selected = (mParams.mViewerUiFlags & ViewerDefine.PlayerUiFlag_UseDefaultSkin) != 0;
            CheckBox_ShowSpeedAdjustor.selected = (mParams.mViewerUiFlags & ViewerDefine.PlayerUiFlag_ShowSpeedAdjustor) != 0;
            CheckBox_ShowScaleAdjustor.selected = (mParams.mViewerUiFlags & ViewerDefine.PlayerUiFlag_ShowScaleAdjustor) != 0;
            CheckBox_ShowHelpButton.selected = (mParams.mViewerUiFlags & ViewerDefine.PlayerUiFlag_ShowHelpButton) != 0;
            CheckBox_ShowLevelFinishedDialog.selected = (mParams.mViewerUiFlags & ViewerDefine.PlayerUiFlag_UseCustomLevelFinishedDialog) == 0; // yes, "==" here
            CheckBox_ShowSoundController.selected = (mParams.mViewerUiFlags & ViewerDefine.PlayerUiFlag_ShowSoundController) != 0;
            SkinType_Overlay.selected = (mParams.mViewerUiFlags & ViewerDefine.PlayerUiFlag_UseOverlaySkin) != 0;
            SkinType_TopBar.selected = (mParams.mViewerUiFlags & ViewerDefine.PlayerUiFlag_UseOverlaySkin) == 0;
            
            CheckBox_AnyViewportSize.selected = (mParams.mViewerUiFlags & ViewerDefine.PlayerUiFlag_AdaptiveViewportSize) != 0;

            var width:int = mParams.mViewportWidth;
            var height:int = mParams.mViewportHeight;
            NumericStepper_CustomWidth.minimum = 50;
            NumericStepper_CustomHeight.minimum = 50;
            NumericStepper_CustomWidth.maximum = Number.MAX_VALUE;
            NumericStepper_CustomHeight.maximum = Number.MAX_VALUE;
            NumericStepper_CustomWidth.value = width;
            NumericStepper_CustomHeight.value = height;

            if (width == 500 && height == 500)
            {
               RadioButton_500x500.selected = true;
            }
            else if (width == 600 && height == 600)
            {
               RadioButton_600x600.selected = true;
            }
            else
            {
               RadioButton_CustomSize.selected = true;
            }

            RadioButton_EnableCameraRotatingYes.selected = mParams.mCameraRotatingEnabled;
            RadioButton_EnableCameraRotatingNo.selected = (! mParams.mCameraRotatingEnabled);

            OnShowPlayBarClick ();
            OnSkinTypeRatioClick ();
            OnCustomSizeRatioClick ();
         }

         public function SetConfirmFunc (onConfirm:Function):void
         {
            OnConfirm = onConfirm;
         }

         public function SetCloseFunc (onClose:Function):void
         {
            OnClose = onClose;
         }

         private function OnShowPlayBarClick ():void
         {
            Box_PlayBarOptions.enabled = CheckBox_ShowPlayBar.selected;
         }

         private function OnSkinTypeRatioClick ():void
         {
            Box_TopBarBackground.enabled = SkinType_TopBar.selected;
         }

         private function OnCustomSizeRatioClick ():void
         {
            Box_CustomSize.enabled = RadioButton_CustomSize.selected;
            RadioButton_CustomSizeHelp.enabled = RadioButton_CustomSize.selected;
         }

         private function OnClickOkButton():void
         {
            mParams.mPlayBarColor = ColorPicker_PlayBarColor.selectedColor;

            mParams.mViewerUiFlags = (CheckBox_ShowPlayBar.selected ? ViewerDefine.PlayerUiFlag_UseDefaultSkin : 0)
                                    | (CheckBox_ShowSpeedAdjustor.selected ? ViewerDefine.PlayerUiFlag_ShowSpeedAdjustor : 0)
                                    | (CheckBox_ShowScaleAdjustor.selected ? ViewerDefine.PlayerUiFlag_ShowScaleAdjustor : 0)
                                    | (CheckBox_ShowSoundController.selected ? ViewerDefine.PlayerUiFlag_ShowSoundController : 0)
                                    | (CheckBox_ShowHelpButton.selected ? ViewerDefine.PlayerUiFlag_UseCustomLevelFinishedDialog : 0)
                                    | (CheckBox_ShowLevelFinishedDialog.selected ? 0 : ViewerDefine.PlayerUiFlag_UseCustomLevelFinishedDialog) // different with other flags, this is an inverse-flag
                                    | (CheckBox_AnyViewportSize.selected ? ViewerDefine.PlayerUiFlag_AdaptiveViewportSize : 0)
                                    | (SkinType_Overlay.selected ? ViewerDefine.PlayerUiFlag_UseOverlaySkin : 0)
                                    ;

            // ...

            var width:int;
            var height:int;

            if (RadioButton_500x500.selected)
            {
               width = 500;
               height = 500;
            }
            else if (RadioButton_600x600.selected)
            {
               width = 600;
               height = 600;
            }
            else
            {
               width = NumericStepper_CustomWidth.value;
               height = NumericStepper_CustomHeight.value;
            }

            mParams.mViewportWidth = width;
            mParams.mViewportHeight = height;

            mParams.mCameraRotatingEnabled = RadioButton_EnableCameraRotatingYes.selected;

            //PopUpManager.removePopUp(this);

            if (OnClose != null)
               OnClose ();

            if (OnConfirm != null)
               OnConfirm (mParams);
         }

         private function OnClickCancelButton():void
         {
             //PopUpManager.removePopUp(this);

             if (OnClose != null)
               OnClose ();
         }

     ]]>
   </mx:Script>



</mx:TitleWindow>
