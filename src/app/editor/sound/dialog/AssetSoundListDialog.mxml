<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<mx:TitleWindow 
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:sound="editor.sound.dialog.*"
    title="Sound Assets Manager"
    width="200" height="500"
    paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
    showCloseButton="true"
    creationComplete="InitDialog ();"
    close="HideAssetSoundListDialog ();"
    >

   <mx:VBox backgroundColor="0xE0E0E0" borderStyle="solid" width="100%" height="100%"
            horizontalScrollPolicy="off" verticalScrollPolicy="off"
            horizontalGap="0" verticalGap="0" borderThickness="0"
            >
      <mx:HBox width="100%" paddingTop="3" paddingLeft="3" paddingRight="3" paddingBottom="3" verticalAlign="middle">
         <mx:Button id="ButtonStopAll" click="StopAllSounds ()" toolTip="Stop All" fontSize="8"  width="27" height="27" toggle="false" cornerRadius="0" icon="@Embed('../../../res/play/play-stop.png')" disabledIcon="@Embed('../../../res/play/play-stop-disabled.png')" />
         <mx:Spacer width="100%" />
         <mx:HSlider id="SliderVolume" change="AdjustVolume ()"  width="137" toolTip="Volume" minimum="0.0" maximum="1.0" snapInterval="0.01" value="0.5" allowTrackClick="true" liveDragging="true" />
      </mx:HBox>
      <mx:VBox id="Box_SoundListing" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
         <sound:AssetSoundListingPanel id="panelAssetSoundListing" width="100%" height="100%"/>
      </mx:VBox>
   </mx:VBox>

   <mx:Script>
      <![CDATA[
         import flash.media.SoundMixer;
         import flash.media.SoundTransform;
         
         import mx.managers.PopUpManager;
         
         import editor.runtime.Runtime;

      // static functions
         
         public static var sAssetSoundListDialog:AssetSoundListDialog = null;
         public static function ShowAssetSoundListDialog (OnSoundPicked:Function = null):void
         {
            if (sAssetSoundListDialog == null)
               sAssetSoundListDialog = new AssetSoundListDialog ();
            
            if (sAssetSoundListDialog.parent != null) // OnSoundPicked must be null
            {
               PopUpManager.bringToFront (sAssetSoundListDialog);
            }
            else
            {
               PopUpManager.addPopUp (sAssetSoundListDialog, Runtime.GetApplication (), OnSoundPicked != null);
               PopUpManager.centerPopUp (sAssetSoundListDialog);
            }
            
            sAssetSoundListDialog.GetAssetSoundListingPanel ().SetAssetSoundManager (Runtime.GetCurrentWorld ().GetAssetSoundManager ());
            
            if (OnSoundPicked != null)
            {
               sAssetSoundListDialog.mInPickingSound = true;
               
               sAssetSoundListDialog.GetAssetSoundListingPanel ().EnterPickAssetIntent (OnSoundPicked, EndPickSound);
            }
         }
         
         public static function HideAssetSoundListDialog ():void
         {
            if (sAssetSoundListDialog.mInPickingSound)
            {
               EndPickSound ();
            }
            else
            {
               PopUpManager.removePopUp (sAssetSoundListDialog);
            }
            
         }
         
         public static function StartPickSound (OnSoundPicked:Function):void
         {
            if (sAssetSoundListDialog != null)
            {
               PopUpManager.removePopUp (sAssetSoundListDialog);
            }
            
            ShowAssetSoundListDialog (OnSoundPicked);
         }
         
         public static function EndPickSound ():void
         {
            if (sAssetSoundListDialog != null)
            {
               sAssetSoundListDialog.mInPickingSound = false;
               
               PopUpManager.removePopUp(sAssetSoundListDialog);
            
               sAssetSoundListDialog.GetAssetSoundListingPanel ().ExitPickAssetIntent ();
            }
         }
         
      //======================================================
         
         public function GetAssetSoundListingPanel ():AssetSoundListingPanel
         {
            return panelAssetSoundListing;
         }
         
      //======================================================
      
         internal var mInPickingSound:Boolean = false;
         
         private function InitDialog ():void
         {
            SliderVolume.value = Runtime.GetSoundVolume ();
            AdjustVolume ();
         }
         
         private function StopAllSounds ():void
         {
            Runtime.GetCurrentWorld ().GetAssetSoundManager ().StopAllSounds ();
            SoundMixer.stopAll ();
         }
         
         private function AdjustVolume ():void
         {
            Runtime.SetSoundVolume (SliderVolume.value);
            SliderVolume.value = Runtime.GetSoundVolume ();
            var transform:SoundTransform = new SoundTransform();
            transform.volume = SliderVolume.value;
            SoundMixer.soundTransform = transform;
         }

     ]]>
   </mx:Script>



</mx:TitleWindow>
