<?xml version="1.0" encoding="utf-8"?>
<!-- Simple custom MXML TitleWindow component.
     The TitleWindowApp application displays this component.
     You cannot run it independently. -->

<container:ResizableTitleWindow xmlns:container="editor.display.container.*"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    xmlns:image="editor.image.dialog.*" 
    title="Image Assets Manager"
    borderThickness="30"
    width="600" height="500"
    paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0"
    showCloseButton="true"
    creationComplete="InitDialog ();"
    close="HideAssetImageModuleListDialog ();"
    >

   <mx:VBox width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
      <mx:HDividedBox id="theDividedBox" liveDragging="true" width="100%" height="100%" backgroundColor="0xD0D0D0" dividerThickness="3" dividerAffordance="5" dividerAlpha="1.0" dividerColor="0xFFFFFF">
         <mx:VBox id="Box_Images" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <image:AssetImageListingPanel id="panelImageListing" width="100%" height="100%"/>
         </mx:VBox>
         <mx:VBox id="Box_PureModules" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <image:AssetImagePureModuleListingPanel id="panelPureModuleListing" width="100%" height="100%"/>
         </mx:VBox>
         <mx:VBox id="Box_AssembledModules" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <image:AssetImageCompositeModuleListingPanel id="panelAssembledModuleListing" width="100%" height="100%"/>
         </mx:VBox>
         <mx:VBox id="Box_SequencedModules" width="100%" height="100%" paddingTop="0" paddingLeft="0" paddingRight="0" paddingBottom="0" borderStyle="none" borderThickness="0" horizontalGap="0" verticalGap="0" horizontalScrollPolicy="off" verticalScrollPolicy="off">
            <image:AssetImageCompositeModuleListingPanel id="panelSequencedModuleListing" width="100%" height="100%"/>
         </mx:VBox>
      </mx:HDividedBox>
   </mx:VBox>

   <mx:Script>
      <![CDATA[
      
         import mx.managers.PopUpManager;
         
         import editor.image.dialog.AssetImageListingPanel;
         import editor.image.dialog.AssetImagePureModuleListingPanel;
         import editor.image.dialog.AssetImageCompositeModuleListingPanel;
         
         import editor.EditorContext;

      // static functions
         
         public static var sAssetImageModuleListDialog:AssetImageModuleListDialog = null;
         public static function ShowAssetImageModuleListDialog (OnModulePicked:Function = null):void
         {
            if (sAssetImageModuleListDialog == null)
            {
               sAssetImageModuleListDialog = new AssetImageModuleListDialog ();
            }
            
            if (sAssetImageModuleListDialog.parent != null) // OnModulePicked must be null
            {
               PopUpManager.bringToFront (sAssetImageModuleListDialog);
            }
            else
            {
               PopUpManager.addPopUp (sAssetImageModuleListDialog, EditorContext.GetEditorApp (), OnModulePicked != null);
               PopUpManager.centerPopUp (sAssetImageModuleListDialog);
            }
            
            sAssetImageModuleListDialog.GetImageListingPanel ().SetAssetImageManager (EditorContext.GetCurrentWorld ().GetAssetImageManager ());            
            sAssetImageModuleListDialog.GetPureModuleListingPanel ().SetAssetImagePureModuleManager (EditorContext.GetCurrentWorld ().GetAssetImagePureModuleManager ());            
            sAssetImageModuleListDialog.GetAssembledModuleListingPanel ().SetAssetImageCompositeModuleManager (EditorContext.GetCurrentWorld ().GetAssetImageAssembledModuleManager ());            
            sAssetImageModuleListDialog.GetSequencedModuleListingPanel ().SetAssetImageCompositeModuleManager (EditorContext.GetCurrentWorld ().GetAssetImageSequencedModuleManager ());
            
            if (OnModulePicked != null)
            {
               sAssetImageModuleListDialog.mInPickingMode = true;
               
               sAssetImageModuleListDialog.GetImageListingPanel ().EnterPickAssetIntent (OnModulePicked, EndPickingMode);
               sAssetImageModuleListDialog.GetPureModuleListingPanel ().EnterPickAssetIntent (OnModulePicked, EndPickingMode);
               sAssetImageModuleListDialog.GetAssembledModuleListingPanel ().EnterPickAssetIntent (OnModulePicked, EndPickingMode);
               sAssetImageModuleListDialog.GetSequencedModuleListingPanel ().EnterPickAssetIntent (OnModulePicked, EndPickingMode);
            }
         }
         
         public static function HideAssetImageModuleListDialog ():void
         {
            if (sAssetImageModuleListDialog.mInPickingMode)
            {
               EndPickingMode ();
            }
            else
            {
               PopUpManager.removePopUp(sAssetImageModuleListDialog);
            }
         }
         
         public static function StartPickingMode (OnModulePicked:Function):void
         {
            if (sAssetImageModuleListDialog != null)
            {
               PopUpManager.removePopUp (sAssetImageModuleListDialog);
            }
            
            ShowAssetImageModuleListDialog (OnModulePicked);
         }
         
         public static function EndPickingMode ():void
         {
            if (sAssetImageModuleListDialog != null)
            {
               sAssetImageModuleListDialog.mInPickingMode = false;
               
               PopUpManager.removePopUp(sAssetImageModuleListDialog);
            
               sAssetImageModuleListDialog.GetImageListingPanel ().ExitPickAssetIntent ();
               sAssetImageModuleListDialog.GetPureModuleListingPanel ().ExitPickAssetIntent ();
               sAssetImageModuleListDialog.GetAssembledModuleListingPanel ().ExitPickAssetIntent ();
               sAssetImageModuleListDialog.GetSequencedModuleListingPanel ().ExitPickAssetIntent ();
            }
         }
         
      //========================================
      
         public function GetImageListingPanel ():AssetImageListingPanel
         {
            return panelImageListing;
         }
      
         public function GetPureModuleListingPanel ():AssetImagePureModuleListingPanel
         {
            return panelPureModuleListing;
         }
      
         public function GetAssembledModuleListingPanel ():AssetImageCompositeModuleListingPanel
         {
            return panelAssembledModuleListing;
         }
      
         public function GetSequencedModuleListingPanel ():AssetImageCompositeModuleListingPanel
         {
            return panelSequencedModuleListing;
         }
         
      //=====================================================================
      
         internal var mInPickingMode:Boolean = false;
      
         public function InitDialog ():void
         {
            //theDividedBox.moveDivider(0, 100000);
         }

     ]]>
   </mx:Script>



</container:ResizableTitleWindow>
